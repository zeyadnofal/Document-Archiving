<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Leadtools.ImageProcessing.SpecialEffects</name>
  </assembly>
  <members>
    <member name="T:Leadtools.ImageProcessing.SpecialEffects.AgingCommand">
      <summary>Adds effects that simulate random color changes, scratches, dust and pits, making an image look like it was made from an old film. This command is available in the Imaging Pro and above toolkits.</summary>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.AgingCommand.#ctor">
      <summary>Initializes a new AgingCommand class object with default parameters.</summary>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.AgingCommand.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,Leadtools.RasterColor,Leadtools.RasterColor,Leadtools.RasterColor,Leadtools.ImageProcessing.SpecialEffects.AgingCommandFlags)">
      <summary>Initializes a new AgingCommand class object with explicit parameters.</summary>
      <param name="horizontalScratchCount">Number of horizontal scratch lines. This parameter only accepts positive values.</param>
      <param name="verticalScratchCount">Number of vertical scratch lines. This parameter only accepts positive values.</param>
      <param name="maximumScratchLength">Maximum scratch line length, in pixels. Its minimum value is 2.</param>
      <param name="dustDensity">Dust density, expressed in tenths of a percent of the image area. Valid values range between 0 and 1000. This value is divided internally by 10. If uDustDen = 1000 then dust density = 100 (that is, the number of dust points = the entire image area.)</param>
      <param name="pitsDensity">Density of the pits, expressed in tenths of percent of the image area. Valid values range between 0 and 1000. This value is divided internally by 10. If PitsDensity = 1000 then the density of the pits = 100 (that is, the number of pits = the entire image area.)</param>
      <param name="maximumPitSize">Maximum pit size, in pixels. The size of the pits will be selected at random between 1 and MaximumPitSize.</param>
      <param name="scratchColor">Represents the color of the scratch lines.</param>
      <param name="dustColor">Represents the color of the dust.</param>
      <param name="pitsColor">Represents the color of the pits.</param>
      <param name="flags">Flags that indicate the distortion type and the distortion color.</param>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.AgingCommand.ToString">
      <summary>Overridden. Returns a meaningful name for this method.</summary>
      <returns>String that contains the name of this method.</returns>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.AgingCommand.DustColor">
      <summary>Gets or sets a value that represents the color of the dust.</summary>
      <value>Color of the dust.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.AgingCommand.DustDensity">
      <summary>Gets or sets a value that represents the dust density, expressed in tenths of percent of the image area.</summary>
      <value>Dust density, expressed in tenths of a percent of the image area. Valid values range between 0 and 1000. This value is divided internally by 10. If this value = 1000 then dust density = 100 (that is, the number of dust points = the entire image area.)</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.AgingCommand.Flags">
      <summary>Flags that indicate the distortion type and the distortion color.</summary>
      <value>Flags that indicate the distortion type and the distortion color.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.AgingCommand.HorizontalScratchCount">
      <summary>Gets or sets the number of horizontal scratch lines.</summary>
      <value>Number of horizontal scratch lines. This property only accepts positive values.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.AgingCommand.MaximumPitSize">
      <summary>Gets or sets a value that represents the maximum pit size, in pixels.</summary>
      <value>Maximum pit size, in pixels. The size of the pits will be selected at random between 1 and MaximumPitSize.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.AgingCommand.MaximumScratchLength">
      <summary>Gets or sets the maximum scratch line length.</summary>
      <value>Maximum scratch line length, in pixels. Its minimum value is 2.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.AgingCommand.PitsColor">
      <summary>Gets or sets a value that represents the color of the pits.</summary>
      <value>Represents the color of the pits.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.AgingCommand.PitsDensity">
      <summary>Gets or sets a value that represents the density of the pits, expressed in tenths of a percent of the image area.</summary>
      <value>Density of the pits, expressed in tenths of a percent of the image area. Valid values range between 0 and 1000. This value is divided internally by 10. If this property = 1000 then the density of the pits = 100 (that is, the number of pits = the entire image area.)</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.AgingCommand.ScratchColor">
      <summary>Gets or sets a value that represents the color of the scratch lines.</summary>
      <value>Color of the scratch lines.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.AgingCommand.VerticalScratchCount">
      <summary>Gets or sets the number of vertical scratch lines.</summary>
      <value>Number of vertical scratch lines. This property only accepts positive values.</value>
    </member>
    <member name="T:Leadtools.ImageProcessing.SpecialEffects.BendCommand">
      <summary>Warps the active image along a curved plane, centered on the pivot point. This command is available in the Imaging Pro and above toolkits.</summary>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.BendCommand.#ctor">
      <summary>Initializes a new BendCommand class object with default parameters.</summary>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.BendCommand.#ctor(System.Int32,Leadtools.LeadPoint,Leadtools.RasterColor,Leadtools.ImageProcessing.SpecialEffects.BendCommandFlags)">
      <summary>Initializes a new BendCommand class object with explicit parameters.</summary>
      <param name="value">Amount of stretching, where positive values stretch the pixels toward the edges, and negative values stretch the pixels toward the center. Possible values are range in between -500 and 500.</param>
      <param name="centerPoint">Contains the center of the arc. This is ignored when either BendCommandFlags.Horizontal or BendCommandFlags.Vertical is set in the flags parameter.</param>
      <param name="fillColor">Specifies the fill color for any exposed areas.</param>
      <param name="flags">Flags that indicate how to handle peripherally exposed areas, how to handle centrally exposed areas and the type of bending. You can use a bitwise OR ( &amp;#166; ) to specify one flag from each group.</param>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.BendCommand.ToString">
      <summary>Overridden. Returns a meaningful name for this method.</summary>
      <returns>String that contains the name of this method.</returns>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.BendCommand.CenterPoint">
      <summary>Gets or sets a point structure that contains the center of the arc.</summary>
      <value>Point structure that contains the center of the arc. This is ignored when either BendCommandFlags.Horizontal or BendCommandFlags.Vertical is set in the Flags property.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.BendCommand.FillColor">
      <summary>Gets or sets a value that represents the fill color for any exposed areas.</summary>
      <value>Value that represents the fill color for any exposed areas.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.BendCommand.Flags">
      <summary>Gets or sets a value that indicates how to handle peripherally exposed areas, how to handle centrally exposed areas and the type of bending.</summary>
      <value>Value that indicates how to handle peripherally exposed areas, how to handle centrally exposed areas and the type of bending. You can use a bitwise OR ( &amp;#166; ) to specify one flag from each group.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.BendCommand.Value">
      <summary>Gets or sets the amount of stretching.</summary>
      <value>Amount of stretching, where positive values stretch the pixels toward edges, and negative values stretch the pixels toward the center. Possible values are range in between -500 and 500.</value>
    </member>
    <member name="T:Leadtools.ImageProcessing.SpecialEffects.BricksTextureCommand">
      <summary>Creates a brick texture that makes the image look like it has been drawn on a brick wall. This command is available in the Imaging Pro and above toolkits.</summary>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.BricksTextureCommand.#ctor">
      <summary>Initializes a new BricksTextureCommand class object with default parameters.</summary>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.BricksTextureCommand.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Initializes a new BricksTextureCommand class object with explicit parameters.</summary>
      <param name="bricksWidth">Flat area of the brick width, in pixels. Valid range is from 0 to the image width. This parameter only accepts positive values.</param>
      <param name="bricksHeight">Flat area of the brick height, in pixels. Valid range is from 0 to the image height. This parameter only accepts positive values.</param>
      <param name="edgeWidth">Perceived edge width, in pixels, which represents the brick edge width when the brick is viewed from the perpendicular to the front of the brick. Minimum value is 1. See the following figure:</param>
      <param name="mortarWidth">Mortar width, or the space between two adjacent bricks. This parameter only accepts positive values.</param>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.BricksTextureCommand.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,Leadtools.RasterColor,Leadtools.ImageProcessing.SpecialEffects.BricksTextureCommandFlags)">
      <summary>Initializes a new BricksTextureCommand class object with explicit parameters.</summary>
      <param name="bricksWidth">Flat area of the brick width, in pixels. Valid range is from 0 to the image width. This parameter only accepts positive values.</param>
      <param name="bricksHeight">Flat area of the brick height, in pixels. Valid range is from 0 to the image height. This parameter only accepts positive values.</param>
      <param name="edgeWidth">Perceived edge width, in pixels, which represents the brick edge width when the brick is viewed from the perpendicular to the front of the brick. Minimum value is 1. See the following figure:</param>
      <param name="mortarWidth">Mortar width, or the space between two adjacent bricks. This parameter only accepts positive values.</param>
      <param name="mortarRoughness">Mortar roughness. Valid range is from 0 to 300. At 0, the mortar looks completely smooth. Use higher values to increase the roughness.</param>
      <param name="mortarRoughnessEvenness">Weathering factor for the mortar. Valid range is from 0 to 10. The higher the value the more weathered the mortar looks.</param>
      <param name="bricksRoughness">Brick roughness. Valid range is from 0 to 300. At 0, the brick looks completely smooth. Use higher values to increase the roughness of the brick surface.</param>
      <param name="bricksRoughnessEvenness">Weathering factor for the bricks. Valid range is from 0 to 10. The higher the value the more weathered the bricks look.</param>
      <param name="shadeAngle">Angle, in degrees, that identifies from which side the light will hit the brick edges, resulting in a brightening of the opposite angle edges, and the darkening of the other edges. Valid range is from 0 to 360.</param>
      <param name="mortarColor">Fill color that specifies the mortar color.</param>
      <param name="flags">Flags that indicate which type of brick edge to use, and which mortar style to use.</param>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.BricksTextureCommand.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,Leadtools.RasterColor,Leadtools.ImageProcessing.SpecialEffects.BricksTextureCommandFlags,System.Int32,System.Int32,System.Int32)">
      <summary>Initializes a new BricksTextureCommand class object with explicit parameters.</summary>
      <param name="bricksWidth">Flat area of the brick width, in pixels. Valid range is from 0 to the image width. This parameter only accepts positive values.</param>
      <param name="bricksHeight">Flat area of the brick height, in pixels. Valid range is from 0 to the image height. This parameter only accepts positive values.</param>
      <param name="edgeWidth">Perceived edge width, in pixels, which represents the brick edge width when the brick is viewed from the perpendicular to the front of the brick. Minimum value is 1. See the following figure:</param>
      <param name="mortarWidth">Mortar width, or the space between two adjacent bricks. This parameter only accepts positive values.</param>
      <param name="mortarRoughness">Mortar roughness. Valid range is from 0 to 300. At 0, the mortar looks completely smooth. Use higher values to increase the roughness.</param>
      <param name="mortarRoughnessEvenness">Weathering factor for the mortar. Valid range is from 0 to 10. The higher the value the more weathered the mortar looks.</param>
      <param name="bricksRoughness">Brick roughness. Valid range is from 0 to 300. At 0, the brick looks completely smooth. Use higher values to increase the roughness of the brick surface.</param>
      <param name="bricksRoughnessEvenness">Weathering factor for the bricks. Valid range is from 0 to 10. The higher the value the more weathered the bricks look.</param>
      <param name="shadeAngle">Angle, in degrees, that identifies from which side the light will hit the brick edges, resulting in a brightening of the opposite angle edges, and the darkening of the other edges. Valid range is from 0 to 360.</param>
      <param name="mortarColor">Fill color that specifies the mortar color.</param>
      <param name="flags">Flags that indicate which type of brick edge to use, and which mortar style to use.</param>
      <param name="offsetX">The X distance between the image origin and the first brick origin, in pixels. This parameter only accepts positive values.</param>
      <param name="offsetY">The Y distance between the image origin and the first brick origin, in pixels. This parameter only accepts positive values.</param>
      <param name="rowDifference">Horizontal distance between the first brick of the first row and the first brick on the next row, in pixels. Setting this value to zero will make a grid-like wall. Valid range is from 0 to image width.</param>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.BricksTextureCommand.ToString">
      <summary>Overridden. Returns a meaningful name for this command.</summary>
      <returns>String that contains the name of this command.</returns>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.BricksTextureCommand.BricksHeight">
      <summary>Gets or sets the flat area of the brick height, in pixels.</summary>
      <value>Flat area of the brick height, in pixels. Valid range is from 0 to the image height. This property only accepts positive values.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.BricksTextureCommand.BricksRoughness">
      <summary>Gets or sets the Brick roughness.</summary>
      <value>Brick roughness. Valid range is from 0 to 300. At 0, the brick looks completely smooth. Use higher values to increase the roughness of the brick surface.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.BricksTextureCommand.BricksRoughnessEvenness">
      <summary>Gets or sets the weathering factor for the bricks.</summary>
      <value>Weathering factor for the bricks. Valid range is from 0 to 10. The higher the value the more weathered the bricks look.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.BricksTextureCommand.BricksWidth">
      <summary>Gets or sets the flat area of the brick width, in pixels.</summary>
      <value>The flat area of the brick width, in pixels. Valid range is from 0 to the image width. This property only accepts positive values.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.BricksTextureCommand.EdgeWidth">
      <summary>Gets or sets the perceived edge width, in pixels.</summary>
      <value>Perceived edge width, in pixels, which represents the brick edge width when the brick is viewed from the perpendicular to the front of the brick. Minimum value is 1. See the following figure:</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.BricksTextureCommand.Flags">
      <summary>Gets or sets the flags that indicate which type of brick edge to use, and which mortar style to use.</summary>
      <value>Flags that indicate which type of brick edge to use, and which mortar style to use.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.BricksTextureCommand.MortarColor">
      <summary>Gets or sets the fill color that specifies the mortar color.</summary>
      <value>Fill color that specifies the mortar color.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.BricksTextureCommand.MortarRoughness">
      <summary>Gets or sets the mortar roughness.</summary>
      <value>Mortar roughness. Valid range is from 0 to 300. At 0, the mortar looks completely smooth. Use higher values to increase the roughness.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.BricksTextureCommand.MortarRoughnessEvenness">
      <summary>Gets or sets the weathering factor for the mortar.</summary>
      <value>Weathering factor for the mortar. Valid range is from 0 to 10. The higher the value the more weathered the mortar looks.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.BricksTextureCommand.MortarWidth">
      <summary>Gets or sets the Mortar width or the space between two adjacent bricks.</summary>
      <value>Mortar width or the space between two adjacent bricks. This property only accepts positive values.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.BricksTextureCommand.OffsetX">
      <summary>Gets or sets the X distance between the image origin and the first brick origin, in pixels.</summary>
      <value>The X distance between the image origin and the first brick origin, in pixels. This property only accepts positive values.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.BricksTextureCommand.OffsetY">
      <summary>Gets or sets the Y distance between the image origin and the first brick origin, in pixels.</summary>
      <value>The Y distance between the image origin and the first brick origin, in pixels. This property only accepts positive values.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.BricksTextureCommand.RowDifference">
      <summary>Gets or sets the horizontal distance between the first brick of the first row and the first brick on the next row, in pixels. Setting this value to zero will make a grid-like wall. Valid range is from 0 to image width.</summary>
      <value>Horizontal distance between the first brick of the first row and the first brick on the next row, in pixels. Setting this value to zero will make a grid-like wall. Valid range is from 0 to image width.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.BricksTextureCommand.ShadeAngle">
      <summary>Gets or sets the angle, in degrees.</summary>
      <value>Angle, in degrees, that identifies from which side the light will hit the brick edges, resulting in a brightening of the opposite angle edges, and the darkening of the other edges. Valid range is from 0 to 360.</value>
    </member>
    <member name="T:Leadtools.ImageProcessing.SpecialEffects.BumpMapCommand">
      <summary>Adds a three-dimensional texture pattern created by applying the bump image to the affected image. This command is available in the Imaging Pro and above toolkits.</summary>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.BumpMapCommand.#ctor">
      <summary>Initializes a new BumpMapCommand class object with default parameters.</summary>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.BumpMapCommand.#ctor(Leadtools.RasterImage,System.Int32,System.Int32,System.Int32,Leadtools.LeadPoint,Leadtools.LeadPoint,System.Boolean,System.Int32,System.Int32,System.Int32[])">
      <summary>Initializes a new BumpMapCommand class object with explicit parameters.</summary>
      <param name="bumpImage">RasterImage object that references the image used to create the texture pattern.</param>
      <param name="azimuth">The azimuth describes the light source's angular position in the horizontal plane. The valid range is between -360 to 360.</param>
      <param name="elevation">The elevation describes the light source's angular position in the vertical plane. The valid range is between 0 to 180.</param>
      <param name="depth">The apparent depth of this three-dimensional effect. This parameter only accepts positive values.</param>
      <param name="bumpPoint">The upper-left corner of the Bump rectangle.</param>
      <param name="destinationPoint">The upper-left corner of the affected image rectangle.</param>
      <param name="tile">Flag that indicates whether to use tiling.</param>
      <param name="brightness">Amount to change the intensity. The intensity ranges from -1000 to 1000. A positive value increases (or lightens) the brightness of the resulting image. A negative value decreases (or darkens) the brightness of the resulting image.</param>
      <param name="intensity">Amount to change the intensity. The intensity ranges from -1000 to 1000. A positive value increases (or lightens) the brightness of the resulting image. A negative value decreases (or darkens) the brightness of the resulting image.</param>
      <param name="lookupTable">Table of 256 integers containing lookup values that re-map bump image data.</param>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.BumpMapCommand.ToString">
      <summary>Overridden. Returns a meaningful name for this command.</summary>
      <returns>String that contains the name of this command.</returns>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.BumpMapCommand.Azimuth">
      <summary>Gets or sets a value that represents the azimuth. The azimuth describes the light source's angular position in the horizontal plane.</summary>
      <value>Value that represents the azimuth. The valid range is from -360 to 360.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.BumpMapCommand.Brightness">
      <summary>Gets or sets the amount to change the resulting image intensity.</summary>
      <value>Amount to change the intensity. The intensity ranges from -1000 to 1000. A positive value increases (or lightens) the brightness of the resulting image. A negative value decreases (or darkens) the brightness of the resulting image.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.BumpMapCommand.BumpImage">
      <summary>Gets or sets the RasterImage object that references the image used to create the texture pattern.</summary>
      <value>Image used to create texture pattern.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.BumpMapCommand.BumpPoint">
      <summary>Gets or sets the upper-left corner of the Bump rectangle.</summary>
      <value>The upper-left corner of the Bump rectangle.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.BumpMapCommand.Depth">
      <summary>Gets or sets a value that represents the apparent depth of the bump three-dimensional effect.</summary>
      <value>Value that represents the apparent depth of this three-dimensional effect. This property only accepts positive values.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.BumpMapCommand.DestinationPoint">
      <summary>Gets or sets the upper-left corner of the destination rectangle.</summary>
      <value>The upper-left corner of the destination rectangle.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.BumpMapCommand.Elevation">
      <summary>Gets or sets the elevation value. The elevation describes the light source's angular position in the vertical plane.</summary>
      <value>Value that represents the elevation. The valid range is between 0 to 180.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.BumpMapCommand.Intensity">
      <summary>Gets or sets the amount to change the resulting image intensity.</summary>
      <value>Amount to change the intensity. The intensity ranges from -1000 to 1000. A positive value increases (or lightens) the brightness of the resulting image. A negative value decreases (or darkens) the brightness of the resulting image.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.BumpMapCommand.LookupTable">
      <summary>Table of 256 integers containing lookup values that re-map bump image data.</summary>
      <value>Table of 256 integers containing lookup values that re-map bump image data.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.BumpMapCommand.Tile">
      <summary>Gets or sets a Boolean value that indicates whether to use tiling.</summary>
      <value>Boolean value that indicates whether to use tiling.</value>
    </member>
    <member name="T:Leadtools.ImageProcessing.SpecialEffects.CanvasCommand">
      <summary>Combines two images, superimposing one image on another image that is used like a canvas. This command is available in the Imaging Pro and above toolkits.</summary>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.CanvasCommand.#ctor">
      <summary>Initializes a new CanvasCommand class object with default parameters.</summary>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.CanvasCommand.#ctor(Leadtools.RasterImage,System.Int32,System.Int32)">
      <summary>Initializes a new CanvasCommand class object with explicit parameters.</summary>
      <param name="canvasImage">References the canvas image.</param>
      <param name="transparency">The transparency amount between the image and the canvas. Valid range is from 0 to 100. When set to 0, only the canvas image displays, and when set to 100, the canvas image is barely visible.</param>
      <param name="emboss">Apparent depth of the canvas image. Valid range is from 0 to 200. When Transparency is at 100, and Emboss is 0 only the image displays. Increasing Emboss increases the apparent depth of the canvas image.</param>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.CanvasCommand.#ctor(Leadtools.RasterImage,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,Leadtools.ImageProcessing.SpecialEffects.CanvasCommandFlags)">
      <summary>Initializes a new CanvasCommand class object with explicit parameters.</summary>
      <param name="canvasImage">References the canvas image.</param>
      <param name="transparency">The transparency amount between the image and the canvas. Valid range is from 0 to 100. When set to 0, only the canvas image displays, and when set to 100, the canvas image is barely visible.</param>
      <param name="emboss">Apparent depth of the canvas image. Valid range is from 0 to 200. When Transparency is at 100, and Emboss is 0 only the image displays. Increasing Emboss increases the apparent depth of the canvas image.</param>
      <param name="xOffset">The X distance between the canvas origin point and the image origin point (in pixels). Valid range is from -Canvas image width to +Canvas image width.</param>
      <param name="yOffset">The Y distance between the canvas origin point and the image origin point (in pixels). Valid range is from -Canvas image height to +Canvas image height.</param>
      <param name="tileOffset">The amount to shift every row of the canvas image from the origin. This parameter is not used when Flags is set to CanvasCommandFlags.TileFit.</param>
      <param name="flags">Flags that identify how to distribute the canvas image with respect to the image and how to handle resizing.</param>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.CanvasCommand.ToString">
      <summary>Overridden. Returns a meaningful name for this command.</summary>
      <returns>String that contains the name of this command.</returns>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.CanvasCommand.CanvasImage">
      <summary>Gets or sets the image that references the canvas image.</summary>
      <value>References the canvas image.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.CanvasCommand.Emboss">
      <summary>Gets or sets the apparent depth of the canvas image.</summary>
      <value>Apparent depth of the canvas image. Valid range is from 0 to 200. When Transparency is at 100, and Emboss is 0 only the image displays. Increasing Emboss increases the apparent depth of the canvas image.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.CanvasCommand.Flags">
      <summary>Gets or sets the flags that identify how to distribute the canvas image with respect to the image and how to handle resizing.</summary>
      <value>Flags that identify how to distribute the canvas image with respect to the image and how to handle resizing.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.CanvasCommand.TileOffset">
      <summary>Gets or sets the amount to shift every row of the canvas image from the origin.</summary>
      <value>The amount to shift every row of canvas image from the origin. This property is not used when Flags is set to CanvasCommandFlags.TileFit.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.CanvasCommand.Transparency">
      <summary>Gets or sets the transparency amount between the image and the canvas.</summary>
      <value>The transparency amount between the image and the canvas. Valid range is from 0 to 100. When set to 0, only the canvas image displays, and when set to 100, the canvas image is barely visible.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.CanvasCommand.XOffset">
      <summary>Gets or sets the X distance between the canvas origin point and the image origin point (in pixels).</summary>
      <value>The X distance between the canvas origin point and the image origin point (in pixels). Valid range is from -Canvas image width to +Canvas image width.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.CanvasCommand.YOffset">
      <summary>Gets or sets the Y distance between the canvas origin point and the image origin point (in pixels).</summary>
      <value>The Y distance between the canvas origin point and the image origin point (in pixels). Valid range is from -Canvas image height to +Canvas image height.</value>
    </member>
    <member name="T:Leadtools.ImageProcessing.SpecialEffects.CloudsCommand">
      <summary>Applies cloud effects to a bitmap. Imaging Pro and above toolkits include this commant.</summary>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.CloudsCommand.#ctor">
      <summary>Initializes a new CloudsCommand with default parameters.</summary>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.CloudsCommand.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,Leadtools.RasterColor,Leadtools.RasterColor,Leadtools.ImageProcessing.SpecialEffects.CloudsCommandType)">
      <summary>Initializes a new CloudsCommand with explicit parameters.</summary>
      <param name="seed">Seed value that controls the cloud creation process. Possible values are 0 or greater.</param>
      <param name="frequency">Value that controls the number of clouds inside the image. Possible values are 0 or greater.</param>
      <param name="density">Value that indicates the detail in the clouds. Possible values are 0 or greater. Use larger values to increase the detail in the clouds, smaller values for blurring.</param>
      <param name="opacity">Value that indicates the transparency, in percent, between the cloud's image and the original image. Valid values range from 0 to 100. This is used if the CloudsCommandType.Opacity or CloudsCommandType.Difference flag is set. A value of 0 indicates that no clouds are being used while the value of 100 represents a mix of clouds and image.</param>
      <param name="backColor">A Leadtools.RasterColor that represents which color to use to fill the areas outside the cloud.</param>
      <param name="cloudsColor">A Leadtools.RasterColor that represents which color to use to fill the cloud.</param>
      <param name="type">A CloudsCommandType enumeration value that specifies how to apply the clouds effect.</param>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.CloudsCommand.ToString">
      <summary>Overridden. Returns a meaningful name for this method.</summary>
      <returns>String that contains the name of this method.</returns>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.CloudsCommand.BackColor">
      <summary>Specifies which color to use to fill the areas outside the cloud.</summary>
      <value>A Leadtools.RasterColor that represents which color to use to fill the areas outside the cloud.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.CloudsCommand.CloudsColor">
      <summary>Specifies which color to use as the fill color for the cloud.</summary>
      <value>A Leadtools.RasterColor that represents the color with which to fill the cloud.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.CloudsCommand.Density">
      <summary>Gets or sets a value that indicates the amount of detail in the cloud.</summary>
      <value>Value that indicates the amount of detail in the cloud.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.CloudsCommand.Frequency">
      <summary>Gets or sets the value that controls the amount of cloud texture inside the image.</summary>
      <value>Amount of cloud texture inside the image.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.CloudsCommand.Opacity">
      <summary>Gets or sets the amount of transparency, in percent.</summary>
      <value>Value that indicates the transparency, in percent, between the cloud's image and the original image.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.CloudsCommand.Seed">
      <summary>Gets or sets an integer that represents the starting point for the cloud's randomization process.</summary>
      <value>An integer that represents the starting point for the cloud's randomization process.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.CloudsCommand.Type">
      <summary>Specifies how to apply the clouds effect.</summary>
      <value>A CloudsCommandType enumeration value that specifies how to apply the clouds effect.</value>
    </member>
    <member name="T:Leadtools.ImageProcessing.SpecialEffects.ColoredBallsCommand">
      <summary>Throws colored balls over the image. The resulting color of the ball is a combination of ball color and the color of the pixel where it has fallen with certain opacity. Various parameters control the color and appearance of the balls.</summary>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.ColoredBallsCommand.#ctor">
      <summary>Initializes a new ColoredBallsCommand with default parameters.</summary>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.ColoredBallsCommand.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,Leadtools.RasterColor,Leadtools.RasterColor,Leadtools.RasterColor,System.Int32,Leadtools.RasterColor[],System.Int32,System.Int32,Leadtools.ImageProcessing.SpecialEffects.ColoredBallsCommandFlags)">
      <summary>Initializes a new ColoredBallsCommand with explicit parameters.</summary>
      <param name="numberOfBalls">Number of balls that will be drawn in the image. Only positive values are accepted.</param>
      <param name="size">Average balls size, in pixels. Only positive values are accepted.</param>
      <param name="sizeVariation">Balls size variation. Valid values range from 0 to 100. Use 0 to have all balls the same size. Use 100 to have the size vary from 0 to 2 X uSize.</param>
      <param name="highLightAngle">Light source direction of the highlight color on the ball. This value is in hundredths of degrees (+/-). A positive value will rotate the highlight color clockwise, while a negative value will rotate the highlight color counter-clockwise. Valid values range from -36000 to + 36000.</param>
      <param name="highLightColor">Highlight color.</param>
      <param name="backGroundColor">Background color.</param>
      <param name="shadingColor">Shade (or gradient) color.</param>
      <param name="ripple">The number of shades that are used to produce the background. This value is divided internally by 100. For example, if lRipple = 200 the actual frequency is 2.</param>
      <param name="ballColors">An array of ball colors.</param>
      <param name="ballColorOpacity">Average ball color opacity. Valid values range from: 0 to 255 for 8-bit, 0 to 4095 for 12-bit, 0 to 65535 for 16-bit.</param>
      <param name="ballColorOpacityVariation">Ball color opacity variation. Valid values range from 0 to 100. Use 0 to have all pixels assigned the same opacity. Use 100 to have the opacity vary from 0 to 2 X ballColorOpacity.</param>
      <param name="flags">Enumeration that indicates the background color , shade (or gradient) type, ball type and ball color type.</param>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.ColoredBallsCommand.ToString">
      <summary>Overridden. Returns a meaningful name for this method.</summary>
      <returns>string that contains the name of this method.</returns>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.ColoredBallsCommand.BackGroundColor">
      <summary>Gets or sets the background color.</summary>
      <value>The background color.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.ColoredBallsCommand.BallColorOpacity">
      <summary>Gets or sets a value that represents the average ball color opacity.</summary>
      <value>Value represents average ball color opacity. Valid values range from 0 to 255 for 8-bit , 0 to 4095 for 12-bit and 0 to 65535 for 16-bit.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.ColoredBallsCommand.BallColorOpacityVariation">
      <summary>Gets or sets a value that represents the amount of ball color opacity variation.</summary>
      <value>Value represents ball color opacity variation. Valid values range from 0 to 100. Use 0 to have all pixels assigned the same opacity. Use 100 to have the opacity vary from 0 to 2 X BallColorOpacity.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.ColoredBallsCommand.BallColors">
      <summary>Gets or sets the array of Leadtools.RasterColor class objects that contains the ball colors used by this class object.</summary>
      <value>Array of Leadtools.RasterColor class objects that contains the ball colors used by this class object.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.ColoredBallsCommand.Flags">
      <summary>Gets or sets the flags that indicate the background color , shade (or gradient) type, ball type and ball color type.</summary>
      <value>Flags that indicate the background color , shade (or gradient). type, ball type and ball color type.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.ColoredBallsCommand.HighLightAngle">
      <summary>Gets or sets a value that represents the light source direction of the highlight color on the ball. This value is in hundredths of degrees (+/-).</summary>
      <value>Value that represents the light source direction of the highlight color on the ball. This value is in hundredths of degrees (+/-). A positive value will rotate the highlight color clockwise, while a negative value will rotate the highlight color counter-clockwise. Valid values range from -36000 to + 36000.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.ColoredBallsCommand.HighLightColor">
      <summary>Gets or sets the highlight color.</summary>
      <value>The highlight color.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.ColoredBallsCommand.NumberOfBalls">
      <summary>Gets or sets a value that represents the number of balls that will be drawn in the image. Only positive values are accepted.</summary>
      <value>Value that represents the number of balls that will be drawn in the image. Only positive values are accepted.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.ColoredBallsCommand.Ripple">
      <summary>Gets or sets a value that represents the number of shades that are used to produce the background.</summary>
      <value>Value that represents the number of shades that are used to produce the background. Internally, it is divided by 100. For example, if Ripple = 200 the actual frequency is 2. This value is ignored if ColoredBallsCommandFlags.ShadingSingle is selected in Flags property.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.ColoredBallsCommand.ShadingColor">
      <summary>Gets or sets the shade (or gradient) color.</summary>
      <value>The shade (or gradient) color.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.ColoredBallsCommand.Size">
      <summary>Gets or sets a value that represents the average ball size. Only positive values are accepted.</summary>
      <value>Value represents average ball size, in pixels. Only positive values are accepted.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.ColoredBallsCommand.SizeVariation">
      <summary>Gets or sets a value that represents the amount of ball size variation.</summary>
      <value>Value that represents the amount of ball size variation. Valid values range from 0 to 100. Use 0 to have all balls the same size. Use 100 to have the size vary from 0 to 2 X Size.</value>
    </member>
    <member name="T:Leadtools.ImageProcessing.SpecialEffects.ColoredPencilCommand">
      <summary>Applies an effect to an image that makes it look like it has been drawn with colored pencils. This method is available in the Imaging Pro and above toolkits.</summary>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.ColoredPencilCommand.#ctor">
      <summary>Initializes a new ColoredPencilCommand class object with default parameters.</summary>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.ColoredPencilCommand.#ctor(System.Int32,System.Int32)">
      <summary>Initializes a new ColoredPencilCommand class object with explicit parameters.</summary>
      <param name="ratio">Value that represents how much the image colors should be adjusted so they appear to be colored pencil colors. Valid values range from 0 to 100. A value of 0 means that the image will not have any change in pixel values whereas a value of 100 means that the maximum possible amount will be added to the pixel values.</param>
      <param name="dimension">Value that represents the size of the pencil coloring neighborhood. It is the length, in pixels, of one side of a square. Valid values range from 0 to 100. Increasing this value increases the thickness of the edges that are detected.</param>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.ColoredPencilCommand.ToString">
      <summary>Overridden. Returns a meaningful name for this command.</summary>
      <returns>String that contains the name of this command.</returns>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.ColoredPencilCommand.Dimension">
      <summary>Gets or sets the value that indicates the size of the pencil coloring neighborhood.</summary>
      <value>Value that indicates the size of the pencil coloring neighborhood on which the filter is applied. It is the length, in pixels, of one side of a square. Valid values range from 0 to 100. Increasing this value increases the thickness of the edges that are detected.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.ColoredPencilCommand.Ratio">
      <summary>Gets or sets the value that indicates how much the image colors should be adjusted so they appear to be colored pencil colors on which the filter is applied.</summary>
      <value>Value that indicates the how much the image colors should be adjusted so they appear to be colored pencil colors on which the filter is applied. Valid values range from 0 to 100. A value of 0 means that the image will not have any change in pixel values, whereas a value of 100 means that the maximum possible amount will be added to the pixel values.</value>
    </member>
    <member name="T:Leadtools.ImageProcessing.SpecialEffects.ColoredPencilExtendedCommand">
      <summary>Applies an effect to a bitmap that makes it look like it has been drawn with colored pencils. This method is available in the Imaging Pro and above toolkits.</summary>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.ColoredPencilExtendedCommand.#ctor">
      <summary>Initializes a new ColoredPencilExtendedCommand class object with default parameters.</summary>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.ColoredPencilExtendedCommand.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,Leadtools.ImageProcessing.SpecialEffects.ColoredPencilExtendedCommandFlags)">
      <summary>Initializes a new ColoredPencilExtendedCommand class object with explicit parameters.</summary>
      <param name="size">Size of the neighborhood used to determine the width of the outlines.</param>
      <param name="strength">Strength factor used to create the "outline". This can be any number that is 0 or greater.</param>
      <param name="threshold">Threshold value used to determine which pixels are edge pixels (outlines). If the difference determined for a pixel is greater than this value, the pixel is an edge pixel. Valid values range from 0 through 65535 for 64-bit, 48-bit and 16-bit grayscale images and from 0 through 4095 for 12-bit grayscale images. Otherwise, it is from 0 to 255. Use this parameter to control the number of edge pixels found.</param>
      <param name="pencilRoughness">Percentage of coloring coverage (colored pencil roughness), expressed in tenths of a percent. Valid values are 0 to 1000.</param>
      <param name="strokeLength">Length of the colored pencil stroke, in pixels.</param>
      <param name="paperRoughness">Percentage of paper surface roughness, expressed in tenths of a percent. Valid values are 0 to 1000.</param>
      <param name="angle">Value that represents the direction of the coloring motion, in hundredths of a degree (+/-) This value can be a number from -18000 to 18000. This parameter is ignored when \flags\ = ColoredPencilExtendedCommandFlags.Artistic.</param>
      <param name="flags">Flags that determine which the type of direction to use and whether to combine the resulted image with the original one or not. For valid values, refer to ColoredPencilExtendedCommandFlags.</param>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.ColoredPencilExtendedCommand.ToString">
      <summary>Overridden. Returns a meaningful name for this command.</summary>
      <returns>String that contains the name of this command.</returns>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.ColoredPencilExtendedCommand.Angle">
      <summary>Gets or sets the direction of coloring motion.</summary>
      <value>Value that represents the direction of the coloring motion, in hundredths of a degree (+/-) This value can be a number from -18000 to 18000. This parameter is ignored when Flags = ColoredPencilExtendedCommandFlags.Artistic. Default value is -45.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.ColoredPencilExtendedCommand.Flags">
      <summary>Gets or sets the type of coloring method.</summary>
      <value>Flags that determine which the type of direction to use and whether to combine the resulted bitmap with the original one or not. For valid values, refer to ColoredPencilExtendedCommandFlags. Default value is ColoredPencilExtendedCommandFlags.Artistic |   ColoredPencilExtendedCommandFlags.CombineOriginal.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.ColoredPencilExtendedCommand.PaperRoughness">
      <summary>Gets or sets a percentage which represents the paper surface roughness.</summary>
      <value>Percentage of paper surface roughness, expressed in tenths of a percent. Valid values are 0 to 1000. Default value is 100.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.ColoredPencilExtendedCommand.PencilRoughness">
      <summary>Gets or sets the percentage of coloring coverage.</summary>
      <value>Value that indicates the percentage of coloring coverage (colored pencil roughness), expressed in tenths of a percent. Valid values are 0 to 1000. Default value is 250.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.ColoredPencilExtendedCommand.Size">
      <summary>Gets or sets the size of the neighborhood used to determine the width of the outlines.</summary>
      <value>Value that indicates the size of the neighborhood used to determine the width of the outlines. Default value is 5.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.ColoredPencilExtendedCommand.Strength">
      <summary>Gets or sets the strength factor used to create the "outline". This can be any number that is 0 or greater.</summary>
      <value>Value that indicates the strength factor used to create the "outline". This can be any number that is 0 or greater. Default value is 4.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.ColoredPencilExtendedCommand.StrokeLength">
      <summary>Gets or sets the length of colored pencil stroke.</summary>
      <value>Value that indicates the length of the colored pencil stroke, in pixels. Default value is 15.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.ColoredPencilExtendedCommand.Threshold">
      <summary>Gets or sets the threshold value.</summary>
      <value>Value that indicates the threshold used to determine which pixels are edge pixels (outlines). If the difference determined for a pixel is greater than this value, the pixel is an edge pixel. Valid values range from 0 through 65535 for 64-bit, 48-bit and 16-bit grayscale images and from 0 through 4095 for 12-bit grayscale images. Otherwise, it is from 0 to 255. Use this parameter to control the number of edge pixels found. Default value is 0.</value>
    </member>
    <member name="T:Leadtools.ImageProcessing.SpecialEffects.CylinderCommand">
      <summary>Warps the image around a cylinder. This command is available in the Imaging Pro and above toolkits.</summary>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.CylinderCommand.#ctor">
      <summary>Initializes a new CylinderCommand class object with default parameters.</summary>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.CylinderCommand.#ctor(System.Int32,Leadtools.ImageProcessing.SpecialEffects.CylinderCommandType)">
      <summary>Initializes a new CylinderCommand class object with explicit parameters.</summary>
      <param name="value">Amount of stretching where:</param>
      <param name="type">A value that indicates the cylinder shape.</param>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.CylinderCommand.ToString">
      <summary>Overridden. Returns a meaningful name for this command.</summary>
      <returns>String that contains the name of this command.</returns>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.CylinderCommand.Type">
      <summary>Gets or sets a value that indicates the cylinder shape.</summary>
      <value>A value that indicates the cylinder shape.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.CylinderCommand.Value">
      <summary>Gets or sets the amount of stretching.</summary>
      <value>Amount of stretching where:</value>
    </member>
    <member name="T:Leadtools.ImageProcessing.SpecialEffects.DiceEffectCommand">
      <summary>Splits the image into square or rectangular blocks. If the blocks are square, the command rotates each block by 0, 90, 180, or 270 degrees. If the blocks are rectangular, the command flips the blocks around the X-axis or Y-axis. This command is available in the Imaging Pro and above toolkits.</summary>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.DiceEffectCommand.#ctor">
      <summary>Initializes a new DiceEffectCommand class object with default parameters.</summary>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.DiceEffectCommand.#ctor(System.Int32,System.Int32,System.Int32,Leadtools.ImageProcessing.SpecialEffects.DiceEffectCommandFlags,Leadtools.RasterColor)">
      <summary>Initializes a new DiceEffectCommand class object with explicit parameters.</summary>
      <param name="xblock">If the DiceEffectCommandFlags.ResizeImage flag is set, this parameter represents the width of each block, in pixels. If the DiceEffectCommandFlags.Count flag is set, this parameter represents the number of blocks per row. Only positive values are accepted.</param>
      <param name="yblock">If the DiceEffectCommandFlags.ResizeImage flag is set, this parameter represents the height of each block, in pixels. If the DiceEffectCommandFlags.Count flag is set, this parameter represents the number of blocks per column. Only positive values are accepted.</param>
      <param name="randomize">The starting point for the randomization process. Valid values range from 0 through 500. Use 0 to have the command select the value. Only positive values are accepted.</param>
      <param name="flags">Flag that specifies how to apply the effect.</param>
      <param name="borderColor">Color of the border that will be drawn around the dice blocks. This parameter will be used only if the DiceEffectCommandFlags.Border flag is set.</param>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.DiceEffectCommand.ToString">
      <summary>Overridden. Returns a meaningful name for this command.</summary>
      <returns>String that contains the name of this command.</returns>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.DiceEffectCommand.BorderColor">
      <summary>Gets or sets the color of the border that will be drawn around the dice blocks.</summary>
      <value>The color of the border that will be drawn around the dice blocks. This property will be used only if the DiceEffectCommandFlags.Border flag is set.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.DiceEffectCommand.Flags">
      <summary>Gets or sets flags that specify how to apply the effect.</summary>
      <value>Value that specifies how to apply the effect.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.DiceEffectCommand.Randomize">
      <summary>Gets or sets the starting point, or randomize value for the randomization process.</summary>
      <value>The starting point for the randomization process. Valid values range from 0 through 500. Use 0 to have the command select the value.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.DiceEffectCommand.XBlock">
      <summary>Gets or sets the width of each block in pixels or the number of blocks per row.</summary>
      <value>If the DiceEffectCommandFlags.ResizeImage flag is set, this property represents the width of each block, in pixels. If the DiceEffectCommandFlags.Count flag is set, this property represents the number of blocks per row.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.DiceEffectCommand.YBlock">
      <summary>Gets or sets the height of each block in pixels or the number of blocks per column.</summary>
      <value>If the DiceEffectCommandFlags.ResizeImage flag is set, this property represents the height of each block, in pixels. If the DiceEffectCommandFlags.Count flag is set, this property represents the number of blocks per column.</value>
    </member>
    <member name="T:Leadtools.ImageProcessing.SpecialEffects.DiffuseGlowCommand">
      <summary>Adds a colored glow to an image's light or dark areas, making these areas shine with a neon glow. This method is available in the Imaging Pro and above toolkits</summary>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.DiffuseGlowCommand.#ctor">
      <summary>Initializes a new DiffuseGlowCommand class object with default parameters.</summary>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.DiffuseGlowCommand.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,Leadtools.RasterColor)">
      <summary>Initializes a new DiffuseGlowCommand class object with explicit parameters.</summary>
      <param name="glowAmount">Glow intensity, expressed in tenths of a percent. Possible values range from -1000 - 1000. Use positive values to add glow to the brighter regions of the image, and negative values to add glow to the darker regions of the image.</param>
      <param name="clearAmount">Value that represents how deeply the glow will penetrate into the non-glowing areas, expressed in tenths of a percent. Possible values range from 0 - 1000. A value of 0 indicates total glow diffusion, whereas a value of 1000 indicates the glow does not penetrate into any of the non-glowing areas.</param>
      <param name="spreadAmount">Value that represents the amount of blur in the glow diffusion, from 0 to 100 pixels. Possible values range from 0 - 1000. A value of 0 indicates none of the glow is diffused, whereas a value of 1000 indicates maximum diffusion.</param>
      <param name="whiteNoiseRange">Percent of the image to be covered with added pixels, expressed in tenths of a percent. The pixels will be added randomly. Possible values range from 0 - 1000.</param>
      <param name="glowColor">The RasterColor value that specifies the glow color.</param>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.DiffuseGlowCommand.ToString">
      <summary>Overridden. Returns a meaningful name for this command.</summary>
      <returns>String that contains the name of this command.</returns>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.DiffuseGlowCommand.ClearAmount">
      <summary>Gets or sets a value that represents how deeply the glow will penetrate into the non-glowing areas.</summary>
      <value>Value that represents how deeply the glow will penetrate into the non-glowing areas, expressed in tenths of a percent. Possible values range from 0 - 1000. A value of 0 indicates total glow diffusion, whereas a value of 1000 indicates the glow does not penetrate into any of the non-glowing areas.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.DiffuseGlowCommand.GlowAmount">
      <summary>Gets or sets the value that indicates the glow intensity.</summary>
      <value>Value that indicates the glow intensity, expressed in tenths of a percent. Possible values range from -1000 - 1000. Use positive values to add glow to the brighter regions of the image, and negative values to add glow to the darker regions of the image.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.DiffuseGlowCommand.GlowColor">
      <summary>Gets or sets the value that indicates the glow color.</summary>
      <value>Value that indicates the glow color.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.DiffuseGlowCommand.SpreadAmount">
      <summary>Gets or sets the value that indicates the amount of blur in the glow diffusion, from 0 to 100 pixels.</summary>
      <value>Value that indicates the amount of blur in the glow diffusion, from 0 to 100 pixels. Possible values range from 0 - 1000. A value of 0 indicates none of the glow is diffused, whereas a value of 1000 indicates maximum diffusion.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.DiffuseGlowCommand.WhiteNoiseRange">
      <summary>Gets or sets the value that indicates the percent of the image to be covered with added pixels, expressed in tenths of a percent.</summary>
      <value>Value that indicates the percent of the image to be covered with added pixels, expressed in tenths of a percent. The pixels will be added randomly. Possible values range from 0 - 1000.</value>
    </member>
    <member name="T:Leadtools.ImageProcessing.SpecialEffects.DrawStarCommand">
      <summary>Draws a star on the image. This command is available in the Imaging Pro and above toolkits.</summary>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.DrawStarCommand.#ctor">
      <summary>Initializes a new DrawStarCommand class object with default parameters.</summary>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.DrawStarCommand.#ctor(Leadtools.LeadPoint,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,Leadtools.RasterColor,Leadtools.RasterColor,System.Int32,Leadtools.ImageProcessing.SpecialEffects.DrawStarCommandFlags)">
      <summary>Initializes a new DrawStarCommand class object with explicit parameters.</summary>
      <param name="centerPoint">Point structure that contains the star center.</param>
      <param name="spoke">Number of spokes or rays directed inside or outside the star. This parameter only accepts positive values.</param>
      <param name="starWidth">Star width. This parameter only accepts positive values.</param>
      <param name="starHeight">Star height. This parameter only accepts positive values.</param>
      <param name="holeSize">The hole size. This value is given as a percent of the whole star from which the rays start or in which they end. The valid range is from 0 to 100.</param>
      <param name="phase">Angle to shift the star's rays. This value is given in hundredths of a degree (+/-). This can be a number from 0 to 36,000. A positive value will rotate the rays clockwise, while a negative value will rotate the rays counter-clockwise.</param>
      <param name="angle">Angle to rotate the star. This value is given in hundredths of a degree (+/-). This can be a number from 0 to 36,000. A positive value will rotate the star clockwise, while a negative value will rotate the star counter-clockwise.</param>
      <param name="distanceOpacity">Percent of feathering in towards or outward from the spoke center. The valid range is from -100 to 100.</param>
      <param name="spokeDivision">The percent by which to increment or decrement the size of the low part spoke. The valid range is from -100 to 100.</param>
      <param name="angleOpacity">Percent of feathering in towards or outward from the spoke border. The valid range is from -100 to 100.</param>
      <param name="borderOpacity">Transparency, in percent, of the spoke border. The valid range is from -100 to 100.</param>
      <param name="lowerColorFill">Lower spoke side color.</param>
      <param name="upperColorFill">Upper spoke side color.</param>
      <param name="opacity">Transparency, in percent, between the star and the affected image. The valid range is from 0 to 100.</param>
      <param name="flags">Flags that indicate the direction of the rays.</param>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.DrawStarCommand.ToString">
      <summary>Overridden. Returns a meaningful name for this command.</summary>
      <returns>String that contains the name of this command.</returns>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.DrawStarCommand.Angle">
      <summary>Gets or sets the angle to rotate the star.</summary>
      <value>Angle to rotate the star. This value is given in hundredths of a degree (+/-). This can be a number from 0 to 36,000. A positive value will rotate the star clockwise, while a negative value will rotate the star counter-clockwise.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.DrawStarCommand.AngleOpacity">
      <summary>Gets or sets the percent of feathering in towards or outward from the spoke border.</summary>
      <value>Percent of feathering in towards or outward from the spoke border. The valid range is from -100 to 100.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.DrawStarCommand.BorderOpacity">
      <summary>Gets or sets the transparency, in percent, of the spoke border.</summary>
      <value>Transparency, in percent, of the spoke border. The valid range is from -100 to 100.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.DrawStarCommand.CenterPoint">
      <summary>Get or sets the point structure that contains the star center.</summary>
      <value>Pointe structure that contains the star center.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.DrawStarCommand.DistanceOpacity">
      <summary>Gets or sets the percent of feathering in towards or outward from the spoke center.</summary>
      <value>Percent of feathering in towards or outward from the spoke center. The valid range is from -100 to 100.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.DrawStarCommand.Flags">
      <summary>Flag that indicates the direction of the rays.</summary>
      <value>Flag that indicates the direction of the rays.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.DrawStarCommand.HoleSize">
      <summary>Gets or sets the hole size.</summary>
      <value>The hole size. This value is given as a percent of the whole star from which the rays start or in which they end. The valid range is from 0 to 100.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.DrawStarCommand.LowerColorFill">
      <summary>Gets or sets the RasterColor object that specifies lower spoke side color.</summary>
      <value>RasterColor object that specifies lower spoke side color.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.DrawStarCommand.Opacity">
      <summary>Gets or sets the transparency, in percent, between the star and the applied image.</summary>
      <value>Transparency, in percent, between the star and the applied image. The valid range is from 0 to 100.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.DrawStarCommand.Phase">
      <summary>Gets or sets the angle to shift the star's rays.</summary>
      <value>Angle to shift the star's rays. This value is given in hundredths of a degree (+/-). This can be a number from 0 to 36,000. A positive value will rotate the rays clockwise, while a negative value will rotate the rays counter-clockwise.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.DrawStarCommand.Spoke">
      <summary>Gets or sets the number of spokes or rays directed inside or outside the star.</summary>
      <value>Number of spokes or rays directed inside or outside the star, This property only accepts positive values.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.DrawStarCommand.SpokeDivision">
      <summary>Gets or sets the percent by which to increment or decrement the size of the low part spoke.</summary>
      <value>The percent by which to increment or decrement the size of the low part spoke. The valid range is from -100 to 100.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.DrawStarCommand.StarHeight">
      <summary>Gets or sets the star height.</summary>
      <value>Star height. This property only accepts positive values.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.DrawStarCommand.StarWidth">
      <summary>Gets or sets the star width.</summary>
      <value>Star width. This property only accepts positive values.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.DrawStarCommand.UpperColorFill">
      <summary>Gets or sets the RasterColor object that specifies upper spoke side color.</summary>
      <value>RasterColor object that specifies upper spoke side color.</value>
    </member>
    <member name="T:Leadtools.ImageProcessing.SpecialEffects.DryCommand">
      <summary>Simulates painting an image with the watercolor dry brush technique. This command is available in the Imaging Pro and above toolkits.</summary>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.DryCommand.#ctor">
      <summary>Initializes a new DryCommand class object with default parameters.</summary>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.DryCommand.#ctor(System.Int32)">
      <summary>Initializes a new DryCommand class object with explicit parameters.</summary>
      <param name="dimension">Dimensions of the neighborhood used in creating the effect (Dimension x Dimension), in pixels. This parameter only accepts nonzero positive values.</param>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.DryCommand.ToString">
      <summary>Overridden. Returns a meaningful name for this command.</summary>
      <returns>String that contains the name of this command.</returns>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.DryCommand.Dimension">
      <summary>Gets or sets the dimensions of the neighborhood used in creating the effect (Dimension x Dimension), in pixels. This property only accepts nonzero positive values.</summary>
      <value>Dimensions of the neighborhood used in creating the effect (Dimension x Dimension), in pixels.</value>
    </member>
    <member name="T:Leadtools.ImageProcessing.SpecialEffects.FragmentCommand">
      <summary>Averages an image with its shifted copies. This method is available in the Imaging Pro and above toolkits. This method creates four copies of an image. Each copy is shifted by the offset amount into one of the four directions: top, left, bottom and right. Then the image is averaged with its shifted copies.</summary>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.FragmentCommand.#ctor">
      <summary>Initializes a new FragmentCommand with default parameters.</summary>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.FragmentCommand.#ctor(System.Int32,System.Int32)">
      <summary>Initializes a new FragmentCommand with explicit parameters.</summary>
      <param name="offset">Value that indicates the number of pixels the copied image is shifted.</param>
      <param name="opacity">Value that indicates the transparency, in percent, of the copy in comparison to the original image. Possible values are range from 0 to 100. A value of 0 means the resulting image will be black. A value of 100 means that each copy's value will comprise 25 of the result.</param>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.FragmentCommand.ToString">
      <summary>Overridden. Returns a meaningful name for this method.</summary>
      <returns>string that contains the name of this method.</returns>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.FragmentCommand.Offset">
      <summary>Gets or sets the value that indicates the number of pixels the copied image is shifted.</summary>
      <value>Value that indicates the number of pixels the copied image is shifted.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.FragmentCommand.Opacity">
      <summary>Gets or sets the value that indicates the transparency, in percent.</summary>
      <value>Value that indicates the transparency, in percent, of the copy in comparison to the original image. The valid range is from 0 to 100. A value of 0 means the resulting image will be black. A value of 100 means that each copy's value will comprise 25 of the result.</value>
    </member>
    <member name="T:Leadtools.ImageProcessing.SpecialEffects.FreeHandShearCommand">
      <summary>Shears the image by the wave drawn using the amplitudes array. This command is available in the Imaging Pro and above toolkits.</summary>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.FreeHandShearCommand.#ctor">
      <summary>Initializes a new FreeHandShearCommand class object with default parameters.</summary>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.FreeHandShearCommand.#ctor(System.Int32[],System.Int32,Leadtools.RasterColor,Leadtools.ImageProcessing.SpecialEffects.FreeHandShearCommandFlags)">
      <summary>Initializes a new FreeHandShearCommand class object with explicit parameters.</summary>
      <param name="amplitudes">Array of integers that represent shear wave values. The real values of the array elements is divided by 1000, and the valid value of each element in the amplitudes array is between -1000 and 1000. These values are generally obtained from the Leadtools.ImageProcessing.Effects.EffectsUtilities.GetCurvePoints(System.Int32\[\],Leadtools.LeadPoint\[\],Leadtools.ImageProcessing.Effects.CurvePointsType) utility method.</param>
      <param name="scale">Factor used to increase or decrease the various amplitude values in the amplitudes array. Each value in the amplitudes array is multiplied by this factor. The real factor value is the scale value divided by 100. The valid range is from 0 to 100.</param>
      <param name="fillColor">Specifies the fill color for any exposed areas.</param>
      <param name="flags">Flags that indicate how to handle exposed areas, and the direction of the shear wave.</param>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.FreeHandShearCommand.ToString">
      <summary>Overridden. Returns a meaningful name for this command.</summary>
      <returns>String that contains the name of this command.</returns>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.FreeHandShearCommand.Amplitudes">
      <summary>Gets or sets an array of integers that represent shear wave values.</summary>
      <value>Array of integers that represent shear wave values. The real values of the array elements is divided by 1000, and the valid value of each element in the amplitudes array is between -1000 and 1000. These values are generally obtained from the Leadtools.ImageProcessing.Effects.EffectsUtilities.GetCurvePoints(System.Int32\[\],Leadtools.LeadPoint\[\],Leadtools.ImageProcessing.Effects.CurvePointsType) utility method.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.FreeHandShearCommand.FillColor">
      <summary>Specifies the fill color for any exposed areas.</summary>
      <value>Specifies the fill color for any exposed areas.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.FreeHandShearCommand.Flags">
      <summary>Flags that indicate how to handle exposed areas, and the direction of the shear wave.</summary>
      <value>Values that indicate how to handle exposed areas, and the direction of the shear wave.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.FreeHandShearCommand.Scale">
      <summary>Factor used to increase or decrease the various amplitude values in the Amplitudes property.</summary>
      <value>Factor used to increase or decrease the various amplitude values in the Amplitudes array. Each value in the amplitudes array is multiplied by this factor. The real factor value is the scale value divided by 100. The valid range is from 0 to 100.</value>
    </member>
    <member name="T:Leadtools.ImageProcessing.SpecialEffects.FreeHandWaveCommand">
      <summary>Distorts the image by the wave specified in the amplitudes array and the rotation angle. This command is available in the Imaging Pro and above toolkits.</summary>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.FreeHandWaveCommand.#ctor">
      <summary>Initializes a new FreeHandWaveCommand class object with default parameters.</summary>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.FreeHandWaveCommand.#ctor(System.Int32[],System.Int32,System.Int32,System.Int32,Leadtools.RasterColor,Leadtools.ImageProcessing.SpecialEffects.FreeHandWaveCommandFlags)">
      <summary>Initializes a new FreeHandWaveCommand class object with explicit parameters.</summary>
      <param name="amplitudes">Array of integers that represent wave values. The real value of the array elements is divided by 1000. These values are generally obtained from the Leadtools.ImageProcessing.Effects.EffectsUtilities.GetCurvePoints(System.Int32\[\],Leadtools.LeadPoint\[\],Leadtools.ImageProcessing.Effects.CurvePointsType) utility method.</param>
      <param name="scale">Factor used to increase or decrease the various amplitude values in the amplitudes array. Each value in the amplitudes array is multiplied by this factor. The real factor value is the Scale value divided by 100. This property only accepts positive values.</param>
      <param name="waveLength">Value that represents the wave length, if FreeHandWaveCommandFlags.Period flag is set. Possible values range from 1 - 100 and give the wavelength as a percentage of the image dimensions. If FreeHandWaveCommandFlags.Frequency flag is set, this value is the number of repeated waves.</param>
      <param name="angle">Wave rotation angle in hundredths of a degree (+/-). The valid range is from -36000 to 36000. The value in degrees is angle divided by 100.</param>
      <param name="fillColor">RasterColor object that specifies the fill color for any exposed areas.</param>
      <param name="flags">FreeHandWaveCommandFlags enumeration that indicate how to handle exposed areas, and the type of information contained in waveLength parameter.</param>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.FreeHandWaveCommand.ToString">
      <summary>Overridden. Returns a meaningful name for this command.</summary>
      <returns>String that contains the name of this command.</returns>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.FreeHandWaveCommand.Amplitudes">
      <summary>Gets or sets an array of integers that represent wave values.</summary>
      <value>Array of integers that represent wave values. The real value of the array elements is divided by 1000, and the valid value of each element in the array is between -1000 and 1000. These values are generally obtained from the Leadtools.ImageProcessing.Effects.EffectsUtilities.GetCurvePoints(System.Int32\[\],Leadtools.LeadPoint\[\],Leadtools.ImageProcessing.Effects.CurvePointsType) utility method. They may also be obtained through the FreeHandWave Dialog.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.FreeHandWaveCommand.Angle">
      <summary>Gets or sets the wave rotation angle in hundredths of a degree (+/-).</summary>
      <value>Wave rotation angle in hundredths of a degree (+/-). The valid range is from -36000 to 36000. The value in degrees is Angle divided by 100.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.FreeHandWaveCommand.FillColor">
      <summary>Gets or sets a RasterColor object that specifies the fill color for any exposed areas.</summary>
      <value>RasterColor object that specifies the fill color for any exposed areas.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.FreeHandWaveCommand.Flags">
      <summary>Gets or sets a value that indicates how to handle exposed areas, and the type of information contained in the WaveLength property.</summary>
      <value>Value that indicates how to handle exposed areas, and the type of information contained in the WaveLength property.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.FreeHandWaveCommand.Scale">
      <summary>Gets or sets a value used to increase or decrease the various amplitude values in the Amplitudes array.</summary>
      <value>Factor used to increase or decrease the various amplitude values in the Amplitudes array. Each value in the Amplitudes array is multiplied by this factor. The real factor value is the Scale value divided by 100. This property only accepts positive values.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.FreeHandWaveCommand.WaveLength">
      <summary>Gets or sets a value that represents the wave length.</summary>
      <value>Value that represents the wave length, if FreeHandWaveCommandFlags.Period is set in the Flags property. Possible values range from 1 - 100 and give the wavelength as a percentage of the image dimensions. If FreeHandWaveCommandFlags.Frequency is set in Flags property, this value is the number of repeated waves.</value>
    </member>
    <member name="T:Leadtools.ImageProcessing.SpecialEffects.FreePlaneBendCommand">
      <summary>Wraps the image onto a 3D plane shaped by Curve. This command is available in the Imaging Pro and above toolkits.</summary>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.FreePlaneBendCommand.#ctor">
      <summary>Initializes a new FreePlaneBendCommand class object with default parameters.</summary>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.FreePlaneBendCommand.#ctor(System.Int32[],System.Int32,Leadtools.RasterColor,Leadtools.ImageProcessing.SpecialEffects.FreePlaneBendCommandFlags)">
      <summary>Initializes a new FreePlaneBendCommand class object with explicit parameters.</summary>
      <param name="curve">Array of integers that represent surface shape values. Valid values for each element in the curve array range between -1000 and 1000. Positive values mean the curve is concave in and negative values mean the curve is concave out. The values in this array are divided internally by 1000.</param>
      <param name="scale">Factor used to multiply the various amplitude values in the Curve array. Each value in the curve array is multiplied by this factor. For example, if you want to double the size of the amplitude values, use a Scale value of 2; to triple the amplitudes values, use a Scale value of 3, etc. The top practical limit for this parameter is the width and height of the Run method image. This parameter only accepts positive values.</param>
      <param name="fillColor">Specifies the fill color for any exposed areas.</param>
      <param name="flags">Flags that indicate how to handle exposed areas and the plane along which to stretch the pixels. You can use a bit wise OR ( &amp;#166; ) to specify one flag from each group.</param>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.FreePlaneBendCommand.ToString">
      <summary>Overridden. Returns a meaningful name for this command.</summary>
      <returns>String that contains the name of this command.</returns>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.FreePlaneBendCommand.Curve">
      <summary>gets or sets an array of integers that represent surface shape values.</summary>
      <value>Array of integers that represent surface shape values. Valid values for each element in the Curve array range between -1000 and 1000. Positive values mean the curve is concave in and negative values mean the curve is concave out. The values in this array are divided internally by 1000.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.FreePlaneBendCommand.FillColor">
      <summary>Gets or sets the fill color for any exposed areas.</summary>
      <value>The fill color for any exposed areas.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.FreePlaneBendCommand.Flags">
      <summary>Gets or sets flags that indicate how to handle exposed areas and the plane along which to stretch the pixels.</summary>
      <value>Flags that indicate how to handle exposed areas and the plane along which to stretch the pixels. You can use a bit wise OR ( &amp;#166; ) to specify one flag from each group.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.FreePlaneBendCommand.Scale">
      <summary>Gets or sets a factor used to multiply the various amplitude values in the Curve array.</summary>
      <value>Factor used to multiply the various amplitude values in the Curve array. Each value in the Curve array is multiplied by this factor. For example, if you want to double the size of the amplitude values, use a Scale value of 2; to triple the amplitudes values, use a Scale value of 3, etc. The top practical limit for this parameter is the width and height of the affected image. This property only accepts positive values.</value>
    </member>
    <member name="T:Leadtools.ImageProcessing.SpecialEffects.FreeRadialBendCommand">
      <summary>Wraps the image along its radius on a 3D surface shaped by Curve. This command is available in the Imaging Pro and above toolkits.</summary>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.FreeRadialBendCommand.#ctor">
      <summary>Initializes a new FreeRadialBendCommand class object with default parameters.</summary>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.FreeRadialBendCommand.#ctor(System.Int32[],System.Int32,Leadtools.LeadPoint,Leadtools.RasterColor,Leadtools.ImageProcessing.SpecialEffects.FreeRadialBendCommandFlags)">
      <summary>Initializes a new FreeRadialBendCommand class object with explicit parameters.</summary>
      <param name="curve">Array of integers that represent surface shape values. Valid values for each element in the Curve array range between -1000 and 1000. Positive values mean the curve is concave in and negative values mean the curve is concave out. The values in this array are internally divided by 1000.</param>
      <param name="scale">Factor used to multiply the various amplitude values in the Curve array. Each value in the Curve array is multiplied by this factor. For example, if you want to double the size of the amplitude values, use a Scale value of 2; to triple the amplitudes values, use a Scale value of 3, etc. The top practical limit for this parameter is the width and height of the Run method image. This parameter only accepts positive values.</param>
      <param name="centerPoint">Contains the surface center.</param>
      <param name="fillColor">Specifies the fill color for any exposed areas.</param>
      <param name="flags">Flags that indicate how to handle peripherally exposed areas and areas exposed inside the surface.</param>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.FreeRadialBendCommand.ToString">
      <summary>Overridden. Returns a meaningful name for this command.</summary>
      <returns>String that contains the name of this command.</returns>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.FreeRadialBendCommand.CenterPoint">
      <summary>Gets or sets a point structure that contains the surface center.</summary>
      <value>Point structure that contains the surface center.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.FreeRadialBendCommand.Curve">
      <summary>Gets or sets an array of integers that represent surface shape values.</summary>
      <value>Array of integers that represent surface shape values. Valid values for each element in the Curve array range between -1000 and 1000. Positive values mean the curve is concave in and negative values mean the curve is concave out. The values in this array are internally divided by 1000.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.FreeRadialBendCommand.FillColor">
      <summary>Gets or sets the fill color for any exposed areas.</summary>
      <value>The fill color for any exposed areas.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.FreeRadialBendCommand.Flags">
      <summary>Gets or sets flags that indicate how to handle peripherally exposed areas and areas exposed inside the surface.</summary>
      <value>Flags that indicate how to handle peripherally exposed areas and areas exposed inside the surface.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.FreeRadialBendCommand.Scale">
      <summary>Gets or sets a value used to multiply the various amplitude values in the Curve array.</summary>
      <value>Factor used to multiply the various amplitude values in the Curve array. Each value in the Curve array is multiplied by this factor. For example, if you want to double the size of the amplitude values, use a Scale value of 2; to triple the amplitudes values, use a Scale value of 3, etc. The top practical limit for this property is the width and height of the Run method image. This property only accepts positive values.</value>
    </member>
    <member name="T:Leadtools.ImageProcessing.SpecialEffects.FunctionalLightCommand">
      <summary>Adds light to the image according to a function-based distribution. This light will be generated by one of the following methods: linear, quadratic, sine, cosine, or using freehand points. This method is available in the Imaging Pro and above toolkits.</summary>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.FunctionalLightCommand.#ctor">
      <summary>Initializes a new FunctionalLightCommand class object with default parameters.</summary>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.FunctionalLightCommand.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32[],Leadtools.ImageProcessing.SpecialEffects.FunctionalLightCommandFlags)">
      <summary>Initializes a new FunctionalLightCommand class object with explicit parameters.</summary>
      <param name="frequency">Value that represents the frequency factor. This parameter is used if the FunctionalLightCommandFlags.Trigonometry or FunctionalLightCommandFlags.Freehand flag is set. Valid values range from 1 - 10000. This value is divided internally by 100 (corresponding to a real interval of 0.01 - 100.0).</param>
      <param name="redAmplitude">If the image is grayscale, this parameter represents the amplitude of the master channel. If the image is color and FunctionalLightCommandFlags.Multiply or FunctionalLightCommandFlags.LinearQuadratic flags are set, this parameter represents the amplitude of each channel. If the image is color and the FunctionalLightCommandFlags.Addition flag is set, this represents the amplitude of the red channel. This value is an integer with a value greater than or equal to 0. This value will be multiplied with the results of the selected function (sine, cosine, user buffer , _). The results of the multiplications are then added to the pixel values. These functions as well as the real buffer values are from -1 to 1. Possible values for this parameter are from 0-100.</param>
      <param name="greenAmplitude">Value that represents the amplitude of the green color when the addition operation is used (FunctionalLightCommandFlags.Addition flag is set). This value is ignored when grayscale images are used or when the multiplication operation is used (FunctionalLightCommandFlags.Multiply flag is set). This value is also ignored if the FunctionalLightCommandFlags.LinearQuadratic flag is set. Possible values for this parameter are from 0 - 100.</param>
      <param name="blueAmplitude">Value that represents the amplitude of the blue color when the addition operation is used (FunctionalLightCommandFlags.Addition flag is set). This value is ignored when grayscale images are used or when the multiplication operation is used ( FunctionalLightCommandFlags.Multiply flag is set). This value is also ignored if the FunctionalLightCommandFlags.LinearQuadratic flag is set. Possible values for this parameter are from 0 -100.</param>
      <param name="angle">Value that represents the angle, in hundredths of degrees. This parameter is used if the FunctionalLightCommandFlags.Trigonometry or FunctionalLightCommandFlags.Freehand flag is set. Valid values for this parameter range from -18000 to 18000. This value is divided internally by 100.</param>
      <param name="buffer">Array that holds all points that represents the shape drawn by the user. This parameter is used only if the FunctionalLightCommandFlags.Freehand flag is set. These values should be between -1000 and 1000. They are internally divided by 1000, so the real values are between -1 and 1.</param>
      <param name="flags">Flags that indicate the function applied to the image. For a list of the available flags, refer to FunctionalLightCommandFlags.</param>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.FunctionalLightCommand.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,Leadtools.LeadPoint,System.Int32,Leadtools.ImageProcessing.SpecialEffects.FunctionalLightCommandFlags)">
      <summary>Initializes a new FunctionalLightCommand class object with explicit parameters.</summary>
      <param name="frequency">Value that represents the frequency factor. This parameter is used if the FunctionalLightCommandFlags.Trigonometry flag or the FunctionalLightCommandFlags.Freehand flag is set. Valid values range from 1 - 10000. This value is divided internally by 100 (corresponding to a real interval of 0.01 - 100.0).</param>
      <param name="redAmplitude">If the image is grayscale, this parameter represents the amplitude of the master channel. If the image is color and the FunctionalLightCommandFlags.Multiply or FunctionalLightCommandFlags.LinearQuadratic flags are set, this parameter represents the amplitude of each channel. If the image is color and the FunctionalLightCommandFlags.Addition flag is used, this represents the amplitude of the red channel. This value is an integer with a value greater than or equal to 0. This value will be multiplied with the results of the selected function (sine, cosine, user buffer , _). The results of the multiplications are then added to the pixel values. These functions as well as the real buffer values are from -1 to 1. Possible values for this parameter are from 0-100.</param>
      <param name="greenAmplitude">Value that represents the amplitude of the green color when the addition operation is used (FunctionalLightCommandFlags.Addition flag is set). This value is ignored when grayscale images are used or when the multiplication operation is used (FunctionalLightCommandFlags.Multiply flag is set). This value is also ignored if the FunctionalLightCommandFlags.LinearQuadratic flag is set. flag. Possible values for this parameter are from 0 - 100.</param>
      <param name="blueAmplitude">Value that represents the amplitude of the blue color when the addition operation is used (FunctionalLightCommandFlags.Addition flag is set). This value is ignored when grayscale images are used or when the multiplication operation is used ( FunctionalLightCommandFlags.Multiply flag is set). This value is also ignored if the FunctionalLightCommandFlags.LinearQuadratic flag is set Possible values for this parameter are from 0 -100.</param>
      <param name="angle">Value that represents the angle, in hundredths of degrees. This parameter is used if the FunctionalLightCommandFlags.Trigonometry or to FunctionalLightCommandFlags.Freehand flag is set. Valid values for this parameter range from -18000 to 18000. This value is divided internally by 100.</param>
      <param name="origin">Represents the coordinates of the origin, in pixels.This parameter is used if the FunctionalLightCommandFlags.Trigonometry flag and FunctionalLightCommandFlags.Circles flag are set, or if the FunctionalLightCommandFlags.LinearQuadratic flag is set.</param>
      <param name="phaseShift">Value that represents the phase shift angle, in hundredths of degrees. This parameter is used if the FunctionalLightCommandFlags.Trigonometry flag is set. Possible values for this parameter are from -18000 to 18000. This value will be divided internally by 100.</param>
      <param name="flags">Flags that indicate the function applied to the image. For a list of the available flags, refer to FunctionalLightCommandFlags.</param>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.FunctionalLightCommand.#ctor(System.Int32,Leadtools.LeadPoint,Leadtools.ImageProcessing.SpecialEffects.FunctionalLightCommandFlags)">
      <summary>Initializes a new FunctionalLightCommand class object with explicit parameters.</summary>
      <param name="redAmplitude">If the image is grayscale, this parameter represents the amplitude of the master channel. If the image is color and the FunctionalLightCommandFlags.Multiply or FunctionalLightCommandFlags.LinearQuadratic flags are set, this parameter represents the amplitude of each channel. If the image is color and the FunctionalLightCommandFlags.Addition flag is used, this represents the amplitude of the red channel. This value is an integer with a value greater than or equal to 0. This value will be multiplied with the results of the selected function (sine, cosine, user buffer , _). The results of the multiplications are then added to the pixel values. These functions as well as the real buffer values are from -1 to 1. Possible values for the redAmplitude parameter are from 0-100.</param>
      <param name="origin">Represents the coordinates of the origin, in pixels. This parameter is used if the FunctionalLightCommandFlags.Trigonometry flag and the FunctionalLightCommandFlags.Circles flags are set, or if the FunctionalLightCommandFlags.LinearQuadratic flag is set.</param>
      <param name="flags">Flags that indicate the to use. For a list of available flags, FunctionalLightCommandFlags</param>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.FunctionalLightCommand.ToString">
      <summary>Overridden. Returns a meaningful name for this command.</summary>
      <returns>String that contains the name of this command.</returns>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.FunctionalLightCommand.Angle">
      <summary>Gets or sets a value that represents the angle, in hundredths of degrees.</summary>
      <value>Value that represents the angle, in hundredths of degrees. This property is used if the Flags property is set to FunctionalLightCommandFlags.Trigonometry or to FunctionalLightCommandFlags.Freehand. Valid values for this property range from -18000 to 18000. This value is divided internally by 100.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.FunctionalLightCommand.BlueAmplitude">
      <summary>Gets or sets a value that represents the amplitude of the blue color.</summary>
      <value>Value that represents the amplitude of the blue color when the addition operation is used (FunctionalLightCommandFlags.Addition flag is set). This value is ignored when grayscale images are used or when the multiplication operation is used (FunctionalLightCommandFlags.Multiply flag is set). This value is also ignored if the Flags property contains the FunctionalLightCommandFlags.LinearQuadratic flag. Possible values for this property are from 0 -100.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.FunctionalLightCommand.Buffer">
      <summary>Gets or sets an array that holds all points that represents the shape drawn by the user.</summary>
      <value>Array that holds all points that represents the shape drawn by the user. This property is used only if the Flags property is set to FunctionalLightCommandFlags.Freehand. These values should be between -1000 and 1000. They are internally divided by 1000, so the real values are between -1 and 1.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.FunctionalLightCommand.Flags">
      <summary>Gets or sets flags that indicate the function to apply to the image.</summary>
      <value>Value that indicates the function to apply to the image. For a list of available flags, refer to FunctionalLightCommandFlags.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.FunctionalLightCommand.Frequency">
      <summary>Gets or set a value that represents the frequency factor.</summary>
      <value>Value that represents the frequency factor. This property is used if the Flags property is set to FunctionalLightCommandFlags.Trigonometry or to FunctionalLightCommandFlags.Freehand. Valid values range from 1 - 10000. This value is divided internally by 100 (corresponding to a real interval of 0.01 - 100.0).</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.FunctionalLightCommand.GreenAmplitude">
      <summary>Gets or sets a value that represents the amplitude of the green color.</summary>
      <value>Value that represents the amplitude of the green color when the addition operation is used (FunctionalLightCommandFlags.Addition flag is set). This value is ignored when grayscale images are used or when the multiplication operation is used (FunctionalLightCommandFlags.Multiply flag is set). This value is also ignored if Flags property contains the FunctionalLightCommandFlags.LinearQuadratic flag. Possible values for GreenAmplitude property are from 0-100.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.FunctionalLightCommand.Origin">
      <summary>Gets or sets a point structure that contains the coordinates of the origin, in pixels.</summary>
      <value>Point structure that contains the coordinates of the origin, in pixels. This property is used if the Flags property is set to FunctionalLightCommandFlags.Trigonometry and FunctionalLightCommandFlags.Circles, or to FunctionalLightCommandFlags.LinearQuadratic.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.FunctionalLightCommand.PhaseShift">
      <summary>Gets or sets a value that represents the phase shift angle, in hundredths of degrees.</summary>
      <value>Value that represents the phase shift angle, in hundredths of degrees. This property is used if the Flags property is set to FunctionalLightCommandFlags.Trigonometry. Possible values for this property are from -18000 to 18000. This value will be divided internally by 100.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.FunctionalLightCommand.RedAmplitude">
      <summary>Gets or sets a value that represents the amplitude of the red color.</summary>
      <value>If the image is grayscale, this property represents the amplitude of the master channel. If the image is color and the FunctionalLightCommandFlags.Multiply or FunctionalLightCommandFlags.LinearQuadratic flags are set, this property represents the amplitude of each channel. If the image is color and FunctionalLightCommandFlags.Addition flag is used, this represents the amplitude of the red channel. This value is an integer with a value greater than or equal to 0. This value will be multiplied with the results of the selected function (sine, cosine, user buffer , _). The results of the multiplications are then added to the pixel values. These functions as well as the real buffer values are from -1 to 1. Possible values for this property are from 0-100.</value>
    </member>
    <member name="T:Leadtools.ImageProcessing.SpecialEffects.GlassEffectCommand">
      <summary>Divides the image into rectangular cells and makes it look as if it is being viewed through glass blocks. This command is available in the Document/Medical and above toolkits.</summary>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.GlassEffectCommand.#ctor">
      <summary>Initializes a new GlassEffectCommand class object with default parameters.</summary>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.GlassEffectCommand.#ctor(System.Int32,System.Int32,Leadtools.ImageProcessing.SpecialEffects.GlassEffectCommandFlags)">
      <summary>Initializes a new GlassEffectCommand class object with explicit parameters.</summary>
      <param name="cellWidth">Value that represents the width of a cell in pixels or the number of cells present across the width of the image, based on the flags that are set. The valid range is between 2 and half the image width.</param>
      <param name="cellHeight">Value that represents the height of a cell in pixels or the number of cells present across the height of the image, based on the flags that are set. The valid range is between 2 and half the image height.</param>
      <param name="flags">Flags that indicate what type of data is in the cellWidth and cellHeight parameters.</param>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.GlassEffectCommand.ToString">
      <summary>Overridden. Returns a meaningful name for this command.</summary>
      <returns>String that contains the name of this command.</returns>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.GlassEffectCommand.CellHeight">
      <summary>Gets or sets a value that represents the height of a cell in pixels or the number of cells present across the height of the image.</summary>
      <value>Value that represents the height of a cell in pixels or the number of cells present across the height of the image, based on the flags set in the Flags property. The valid range is between 2 and half the image height.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.GlassEffectCommand.CellWidth">
      <summary>Gets or sets a value that represents the width of a cell in pixels or the number of cells present across the width of the image.</summary>
      <value>Value that represents the width of a cell in pixels or the number of cells present across the width of the image, based on the flags set in the Flags property. The valid range is between 2 and half the image width.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.GlassEffectCommand.Flags">
      <summary>Flags that indicate what type of data is in the CellWidth and CellHeight properties.</summary>
      <value>Value that indicates what type of data is in the CellWidth and CellHeight properties.</value>
    </member>
    <member name="T:Leadtools.ImageProcessing.SpecialEffects.GlowCommand">
      <summary>Makes the colored edges shine with a neon glow. This command is available in the Imaging Proo and above toolkits.</summary>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.GlowCommand.#ctor">
      <summary>Initializes a new GlowCommand class object with default parameters.</summary>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.GlowCommand.#ctor(System.Int32,System.Int32,System.Int32)">
      <summary>Initializes a new GlowCommand class object with explicit parameters.</summary>
      <param name="dimension">Size of the neighborhood used to determine the width of the glow. This parameter only accepts positive values.</param>
      <param name="brightness">Brightness factor used to create the "glow". This can be any number that is 0 or greater. If it is 0 the image will be black.</param>
      <param name="threshold">Threshold value used to determine which pixels are edge pixels. If the difference determined for a pixel is greater than this value, the pixel is an edge pixel. Valid values range from 0 through 255. Use this parameter to control the number of edge pixels found.</param>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.GlowCommand.ToString">
      <summary>Overridden. Returns a meaningful name for this command.</summary>
      <returns>String that contains the name of this command.</returns>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.GlowCommand.Brightness">
      <summary>Gets or sets the brightness factor used to create the "glow".</summary>
      <value>Brightness factor used to create the "glow". This can be any number that is 0 or greater. If it is 0 the image will be black.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.GlowCommand.Dimension">
      <summary>Gets or sets the size of the neighborhood used to determine the width of the glow.</summary>
      <value>Size of the neighborhood used to determine the width of the glow. This property only accepts positive values.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.GlowCommand.Threshold">
      <summary>Gets or sets the threshold value used to determine which pixels are edge pixels.</summary>
      <value>Threshold value used to determine which pixels are edge pixels. If the difference determined for a pixel is greater than this value, the pixel is an edge pixel. Valid values range from 0 through 255. Use this property to control the number of edge pixels found.</value>
    </member>
    <member name="T:Leadtools.ImageProcessing.SpecialEffects.ImpressionistCommand">
      <summary>Makes the image look like it was painted by an impressionist painter. This command is available in the Imaging Pro and above toolkits.</summary>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.ImpressionistCommand.#ctor">
      <summary>Initializes a new ImpressionistCommand class object with default parameters.</summary>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.ImpressionistCommand.#ctor(System.Int32,System.Int32)">
      <summary>Initializes a new ImpressionistCommand class object with explicit parameters.</summary>
      <param name="horizontalDimension">Horizontal effect size, in pixels. This parameter only accepts positive values.</param>
      <param name="verticalDimension">Vertical effect size, in pixels. This parameter only accepts positive values.</param>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.ImpressionistCommand.ToString">
      <summary>Overridden. Returns a meaningful name for this command.</summary>
      <returns>String that contains the name of this command.</returns>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.ImpressionistCommand.HorizontalDimension">
      <summary>Gets or sets the horizontal effect size, in pixels.</summary>
      <value>Horizontal effect size, in pixels. This property only accepts positive values.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.ImpressionistCommand.VerticalDimension">
      <summary>Gets or sets the vertical effect size, in pixels.</summary>
      <value>Vertical effect size, in pixels. This property only accepts positive values.</value>
    </member>
    <member name="T:Leadtools.ImageProcessing.SpecialEffects.IntelligentDownScaleCommand">
      <summary>Automatically reduces image size while preserving important features. It can also remove or preserve certain objects chosen by the user without affecting the natural look of the image.</summary>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.IntelligentDownScaleCommand.#ctor">
      <summary>Initializes a new IntelligentDownScaleCommand class object with default parameters.</summary>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.IntelligentDownScaleCommand.#ctor(Leadtools.RasterImage,Leadtools.RasterColor,Leadtools.RasterColor,System.Boolean,System.Boolean,System.Int32,System.Int32,System.Int32)">
      <summary>Initializes a new IntelligentDownScaleCommand class object with explicit parameters.</summary>
      <param name="maskImage">RasterImage object that references mask image.</param>
      <param name="removeObjectColor">RasterColor value that specifies color of the area in the mask image in order to be removed and it has to be different than the rest of the image colors. If no remove color exist, then pass null.</param>
      <param name="preserveObjectColor">RasterColor value that specifies color of the area in the mask image in order to be removed and it has to be different than the rest of the image colors. If no remove color exist, then pass null.</param>
      <param name="useRemoveObjectColor">true to use the removeObjectColor parameter false otherwise.</param>
      <param name="usePreserveObjectColor">true to use the removeObjectColor parameter false otherwise.</param>
      <param name="newWidth">New width. Range from 1 to width of the image -1.</param>
      <param name="newHeight">New height. Range from 1 to height of the image -1.</param>
      <param name="downScalingOrder">value that determine whether the processing will start with the width first then the height or vice versa. Pass 0 to start with the height, pass 1 to start with the width.</param>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.IntelligentDownScaleCommand.ToString">
      <summary>Overridden. Returns a meaningful name for this method.</summary>
      <returns>String that contains the name of this method.</returns>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.IntelligentDownScaleCommand.DownScalingOrder">
      <summary>Gets or sets the value that determine whether the processing will start with the width first then the height or vice versa.</summary>
      <value>Value that determine whether the processing will start with the width first then the height or vice versa. Pass 0 to start with the height, pass 1 to start with the width.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.IntelligentDownScaleCommand.MaskImage">
      <summary>Gets or sets the RasterImage object that references the mask image. The mask image is the same as original image but with colors on certain areas that need to be deleted.</summary>
      <value>RasterImage object that references mask image. The mask image is the same as original image but with colors on certain areas that need to be deleted. If NULL is passed, then there is no mask image.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.IntelligentDownScaleCommand.NewHeight">
      <summary>Gets or sets the new Height.</summary>
      <value>Value that represents the new height. Range from 1 to the height of the image less 1.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.IntelligentDownScaleCommand.NewWidth">
      <summary>Gets or sets the new Width.</summary>
      <value>Value that represents the new width. Range from 1 to the width of the image less 1.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.IntelligentDownScaleCommand.PreserveObjectColor">
      <summary>Gets or sets a value that represents the color of the area to be preserved. To be preserved, the color has to be different than colors in image.</summary>
      <value>RasterColor value that specifies color of the area in the mask image. To be removed the color has to be different than the rest of the image colors. If no remove color exist, then pass null.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.IntelligentDownScaleCommand.RemoveObjectColor">
      <summary>Gets or sets a value that represents the color of the area to be removed, to be removed and it has to be different than colors in image.</summary>
      <value>RasterColor value that specifies color of the area in the mask image. To be removed, the color has to be different than the rest of the image colors. If no remove color exist, then pass null.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.IntelligentDownScaleCommand.UsePreserveObjectColor">
      <summary>Gets or sets the value that indicates whether to used the preserve object color.</summary>
      <value>True to use the preserve object color specified in PreserveObjectColor property, otherwise it is false.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.IntelligentDownScaleCommand.UseRemoveObjectColor">
      <summary>Gets or sets the value that indicates whether to used the remove object color.</summary>
      <value>true to use the remove object color specified in RemoveObjectColor property, otherwise it is false.</value>
    </member>
    <member name="T:Leadtools.ImageProcessing.SpecialEffects.IntelligentUpScaleCommand">
      <summary>Automatically increases image size while preserving important features. It can also preserve certain objects chosen by the user without affecting the natural look of the image.</summary>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.IntelligentUpScaleCommand.#ctor">
      <summary>Initializes a new IntelligentUpScaleCommand class object with default parameters.</summary>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.IntelligentUpScaleCommand.#ctor(Leadtools.RasterImage,Leadtools.RasterColor,Leadtools.RasterColor,System.Boolean,System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Initializes a new IntelligentUpScaleCommand class object with explicit parameters.</summary>
      <param name="maskImage">RasterImage object that references mask image.</param>
      <param name="removeObjectColor">RasterColor value that specifies color of the area in the mask image to be removed. It has to be different than the other image colors. If no remove color exists, then pass null.</param>
      <param name="preserveObjectColor">RasterColor value that specifies color of the area in the mask image to be removed. It has to be different than the other image colors. If no remove color exists, then pass null.</param>
      <param name="useRemoveObjectColor">True to use the removeObjectColor parameter otherwise it is false.</param>
      <param name="usePreserveObjectColor">true to use the removeObjectColor parameter otherwise it is false.</param>
      <param name="newWidth">New width. Range from 1 to width of the image less 1.</param>
      <param name="widthUpScalingFactor">Number of the upscaling process stages for the new width to be achieved.</param>
      <param name="newHeight">New height. Range from 1 to height of the image less 1.</param>
      <param name="heightUpScalingFactor">Number of the upscaling process stages for the new height to be achieved.</param>
      <param name="upScalingOrder">Flag that determines whether processing will start with the width first and then the height or vice versa. Pass 0 to start with the height or pass 1 to start with the width.</param>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.IntelligentUpScaleCommand.ToString">
      <summary>Overridden. Returns a meaningful name for this method.</summary>
      <returns>String that contains the name of this method.</returns>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.IntelligentUpScaleCommand.HeightUpScalingFactor">
      <summary>Gets or sets the number of the up scaling process stages for the new height to be achieved.</summary>
      <value>The number of up scaling process stages for the new height to be achieved. The recommended range is from 1 to 20. If MaskImage is used, then 1 should be passed.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.IntelligentUpScaleCommand.MaskImage">
      <summary>Gets or sets the RasterImage object that references the mask image.</summary>
      <value>RasterImage object that references the mask image. If NULL is passed, then there is no mask image.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.IntelligentUpScaleCommand.NewHeight">
      <summary>Gets or sets the new Height.</summary>
      <value>Value that represents the new height. Possible values range from 1 to the height of the image less 1.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.IntelligentUpScaleCommand.NewWidth">
      <summary>Gets or sets the new Width.</summary>
      <value>Value that represents the new width. Possible values range from 1 to the width of the image less 1.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.IntelligentUpScaleCommand.PreserveObjectColor">
      <summary>Gets or sets a value that represents the color of the preserve color area in order.</summary>
      <value>RasterColor value that specifies color of the area in the mask image in order to be removed and it has to be different than the rest of the image colors. If no remove color exist, then pass null.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.IntelligentUpScaleCommand.RemoveObjectColor">
      <summary>Gets or sets a value that represents the color of the remove color area.</summary>
      <value>RasterColor value that specifies color of the area in the mask image. If no remove color exists, then pass null.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.IntelligentUpScaleCommand.UpScalingOrder">
      <summary>Gets or sets the value that determine whether the processing will start with the width first then the height or vice versa.</summary>
      <value>Value that determines whether the processing will start with the width first and then the height or vice versa. Pass 0 to start with the height, pass 1 to start with the width.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.IntelligentUpScaleCommand.UsePreserveObjectColor">
      <summary>Gets or sets the value that indicates whether to use the preserve object color.</summary>
      <value>true to use the preserve object color specified in PreserveObjectColor property, otherwise it is false.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.IntelligentUpScaleCommand.UseRemoveObjectColor">
      <summary>Gets or sets the value that indicates whether to use the remove object color.</summary>
      <value>True to use the remove object color specified in RemoveObjectColor property, otherwise it is false.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.IntelligentUpScaleCommand.WidthUpScalingFactor">
      <summary>Gets or sets the number of up scaling process stages for the new width to be achieved.</summary>
      <value>The number of the scaling process stages for the new width to be achieved. The recommended range is from 1 to 20. If MaskImage is used, then 1 should be passed.</value>
    </member>
    <member name="T:Leadtools.ImageProcessing.SpecialEffects.LensFlareCommand">
      <summary>Simulates the secondary reflections caused when bright lights are facing the camera lens. The lens flare is refracted into a series of lightened circles that surround the flare. This method is available in the Imaging Pro and above toolkits.</summary>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.LensFlareCommand.#ctor">
      <summary>Initializes a new LensFlareCommand class object with default parameters.</summary>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.LensFlareCommand.#ctor(Leadtools.LeadPoint,System.Int32,Leadtools.ImageProcessing.SpecialEffects.LensFlareCommandType,Leadtools.RasterColor)">
      <summary>Initializes a new LensFlareCommand class object with explicit parameters.</summary>
      <param name="centerPoint">Point around which the effect is centered.</param>
      <param name="brightness">The brightness of the flare. This value is divided internally by 100. This parameter affects the brightness of both the flare, and any lightened circles surrounding the flare. This parameter only accepts positive values.</param>
      <param name="type">Flag that indicates the lens type.</param>
      <param name="color">Specifies the color of the main flare.</param>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.LensFlareCommand.ToString">
      <summary>Overridden. Returns a meaningful name for this command.</summary>
      <returns>String that contains the name of this command.</returns>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.LensFlareCommand.Brightness">
      <summary>Gets or sets the brightness of the flare.</summary>
      <value>The brightness of the flare. This value is divided internally by 100. This parameter affects the brightness of both the flare, and any lightened circles surrounding the flare. This parameter only accepts positive values.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.LensFlareCommand.CenterPoint">
      <summary>Gets or sets the point around which the effect is centered.</summary>
      <value>Point structure that contains the point around which the effect is centered.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.LensFlareCommand.Color">
      <summary>Gets or sets the color of the main flare.</summary>
      <value>The color of the main flare.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.LensFlareCommand.Type">
      <summary>Gets or sets a value that indicates the lens type.</summary>
      <value>Value that indicates the lens type.</value>
    </member>
    <member name="T:Leadtools.ImageProcessing.SpecialEffects.LightCommand">
      <summary>Adds many spots of directed light sources to the image. This command is available in the Imaging Pro and above toolkits.</summary>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.LightCommand.#ctor">
      <summary>Initializes a new LightCommand class object with default parameters.</summary>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.LightCommand.#ctor(Leadtools.ImageProcessing.SpecialEffects.LightCommandData[],System.Int32,System.Int32,Leadtools.RasterColor)">
      <summary>Initializes a new LightCommand class object with explicit parameters.</summary>
      <param name="data">An array of LightCommandData structures that contains information on each light source.</param>
      <param name="bright">Value that represents the brightness of the ambient light of the entire image. This can be any number that is 0 or greater. If it is 0 the image will be black. This value is divided internally by 100.</param>
      <param name="ambient">Factor used when mixing the ambient color with the image. This property only accepts positive values.</param>
      <param name="ambientColor">Specifies the ambient color of the light sources in the LightCommandData array.</param>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.LightCommand.ToString">
      <summary>Overridden. Returns a meaningful name for this command.</summary>
      <returns>String that contains the name of this command.</returns>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.LightCommand.Ambient">
      <summary>Gets or sets the factor used when mixing the ambient color with the image.</summary>
      <value>Factor used when mixing the ambient color with the image. This property only accepts positive values.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.LightCommand.AmbientColor">
      <summary>Gets or sets the ambient color of the light sources in the Data property.</summary>
      <value>The ambient color of the light sources in the Data property.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.LightCommand.Bright">
      <summary>Gets or sets a value that represents the brightness of the ambient light of the entire image.</summary>
      <value>Value that represents the brightness of the ambient light of the entire image. This can be any number that is 0 or greater. If it is 0 the image will be black. This value is divided internally by 100.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.LightCommand.Data">
      <summary>Gets or sets an array of LightCommandData structures that contains information on each light source.</summary>
      <value>An array of LightCommandData structures that contains information on each light source.</value>
    </member>
    <member name="T:Leadtools.ImageProcessing.SpecialEffects.MosaicTilesCommand">
      <summary>Creates a mosaic effect on an image by dividing an image into rectangular or arc-shaped cells with irregular boundaries and modifying the color of each cell. This method is available in the Imaging Pro and above toolkits.</summary>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.MosaicTilesCommand.#ctor">
      <summary>Initializes a new MosaicTilesCommand with default parameters.</summary>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.MosaicTilesCommand.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,Leadtools.ImageProcessing.SpecialEffects.ShadowCommandAngle,System.Int32,Leadtools.RasterColor,Leadtools.RasterColor,Leadtools.ImageProcessing.SpecialEffects.MosaicTilesCommandFlags)">
      <summary>Initializes a new MosaicTilesCommand with explicit parameters.</summary>
      <param name="opacity">Value that represents the weight, in percent, given to the image color and the border or tile color when determining the resulting color. For example, if the Opacity property is set to 75, then 75 of the image color will be added to 75 of the border (or Tile) color. Final results are clipped if greater than 255. Possible values range from 0 to 100.</param>
      <param name="penWidth">Value that indicates the width of the pen used to draw tile boundaries, in logical units. Possible values range from 1 to 15. The pen uses the crBorderColor.</param>
      <param name="tileWidth">Value that represents the width of the tile. The meaning of the value in the TileWidth property differs according to the flags that are set in the Flags property. Possible values are:</param>
      <param name="tileHeight">Value that represents the height of the tile. The meaning of the value in the TileHeight property differs according to the flags that are set in the Flags property. Possible values are:</param>
      <param name="shadowAngle">Value indicating the direction of the light source that produces the shadow. This property is used if the MosaicTilesCommandFlags.ShadowRGB flag or the MosaicTilesCommandFlags.ShadowGray flag is set. Valid values are found in ShadowCommandAngle</param>
      <param name="shadowThreshold">Value that determines which pixels will be affected by the shadow. Possible values range from 0 through 255. Pixel values less than the threshold value will be unaffected. This member will be used if the MosaicTilesCommandFlags.ShadowRGB flag or the MosaicTilesCommandFlags.ShadowGray flag is set.</param>
      <param name="borderColor">Value that specifies the transparency fill color for the tile border areas.</param>
      <param name="tilesColor">Value that specifies the transparency fill color for the tiles.</param>
      <param name="flags">that indicate whether to use arc-shaped or rectangular-shaped tiles, and what type of shadowing to use, if any.</param>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.MosaicTilesCommand.#ctor(System.Int32,System.Int32,Leadtools.LeadPoint,System.Int32,System.Int32,Leadtools.ImageProcessing.SpecialEffects.ShadowCommandAngle,System.Int32,Leadtools.RasterColor,Leadtools.RasterColor,Leadtools.ImageProcessing.SpecialEffects.MosaicTilesCommandFlags)">
      <summary>Initializes a new MosaicTilesCommand with explicit parameters.</summary>
      <param name="opacity">Value that represents the weight, in percent, given to the image color and the border or tile color when determining the resulting color. For example, if Opacity property is set to 75, then 75 of the image color will be added to 75 of the border (or Tile) color. Final results are clipped if greater than 255. Possible values range from 0 to 100.</param>
      <param name="penWidth">Value that indicates the width of the pen used to draw tile boundaries, in logical units. Possible values range from 1 to 15. The pen uses the color stored in the BorderColor property.</param>
      <param name="origin">Point that represents the center of revolution when polar coordinates are used. This property is used if the MosaicTilesCommandFlags.Polar flag is set.</param>
      <param name="tileWidth">Value that represents the width of the tile. The meaning of the value in the TileWidth property differs according to the flags that are set in the Flags property. Possible values are:</param>
      <param name="tileHeight">Value that represents the height of the tile. The meaning of the value in the TileHeight property differs according to the flags that are set in the Flags proerty. Possible values are:</param>
      <param name="shadowAngle">Value that indicates the direction of the light source that produces the shadow. This property is used if the MosaicTilesCommandFlags.ShadowRGB flag or the MosaicTilesCommandFlags.ShadowGray flag is set. Valid values are found in ShadowCommandAngle</param>
      <param name="shadowThreshold">Value that determines which pixels will be affected by the shadow. Possible values range from 0 through 255. Pixel values less than the threshold value will be unaffected. This member will be used if the MosaicTilesCommandFlags.ShadowRGB flag or the MosaicTilesCommandFlags.ShadowGray flag is set.</param>
      <param name="borderColor">Represents the transparency fill color for the tile border areas.</param>
      <param name="tilesColor">Represents the transparency fill color for the tiles.</param>
      <param name="flags">Indicate whether to use arc-shaped or rectangular-shaped tiles, and what type of shadowing to use, if any.</param>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.MosaicTilesCommand.ToString">
      <summary>Overridden. Returns a meaningful name for this method.</summary>
      <returns>string that contains the name of this method.</returns>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.MosaicTilesCommand.BorderColor">
      <summary>Gets or sets the transparency fill color for the tile border areas.</summary>
      <value>The transparency fill color for the tile border areas.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.MosaicTilesCommand.Flags">
      <summary>Gets or sets the enumeration that contains all flags that are needed by the MosaicTilesCommand.</summary>
      <value>An MosaicTilesCommandFlags enumeration value that contains all flags that are needed by the MosaicTilesCommand. These include the values used to select the shape of the tiles and the type of shadowing to perform.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.MosaicTilesCommand.Opacity">
      <summary>Gets or sets a value that represents the weight, in percent, given to the image color and the border or tile color when determining the resulting color.</summary>
      <value>Value that represents the weight, in percent, given to the image color and the border or tile color when determining the resulting color. For example, if Opacity property is set to 75, then 75 of the image color will be added to 75 of the border (or Tile) color. Final results are clipped if greater than 255. Possible values range from 0 to 100.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.MosaicTilesCommand.Origin">
      <summary>Gets or sets the point that represents the center of revolution when polar coordinates are used.</summary>
      <value>Point that represents the center of revolution when polar coordinates are used. This property is used if the MosaicTilesCommandFlags.Polar flag is set.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.MosaicTilesCommand.PenWidth">
      <summary>Gets or sets a value that indicates the width of the pen used to draw tile boundaries, in logical units.</summary>
      <value>Value that indicates the width of the pen used to draw tile boundaries, in logical units. Possible values range from 1 to 15. The pen uses the color stored in the BorderColor property.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.MosaicTilesCommand.ShadowAngle">
      <summary>Gets or sets the value that indicates the direction of the light source that produces the shadow.</summary>
      <value>Value that indicates the direction of the light source that produces the shadow. This property is used if the MosaicTilesCommandFlags.ShadowRGB flag or the MosaicTilesCommandFlags.ShadowGray flag is set. Valid values are found in ShadowCommandAngle</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.MosaicTilesCommand.ShadowThreshold">
      <summary>Gets or sets the value that determines which pixels will be affected by the shadow.</summary>
      <value>Value that determines which pixels will be affected by the shadow. Possible values range from 0 through 255. Pixel values less than the threshold value will be unaffected. This property will be used if the MosaicTilesCommandFlags.ShadowRGB flag or the MosaicTilesCommandFlags.ShadowGray flag is set.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.MosaicTilesCommand.TileHeight">
      <summary>Gets or sets a value that represents the height of the tile.</summary>
      <value>Value that represents the height of the tile. The meaning of the value in the TileHeight property differs according to the flags that are set in the Flags proerty. Possible values are:</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.MosaicTilesCommand.TilesColor">
      <summary>Gets or sets the value that represents the transparency fill color for the tiles.</summary>
      <value>The transparency fill color for the tiles.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.MosaicTilesCommand.TileWidth">
      <summary>Gets or sets a value that represents the width of the tile.</summary>
      <value>Value that represents the width of the tile. The meaning of the value in the TileWidth property differs according to the flags that are set in the Flags property. Possible values are:</value>
    </member>
    <member name="T:Leadtools.ImageProcessing.SpecialEffects.OceanCommand">
      <summary>Reflects the image on an ocean surface. This command is available in the Imaging Proo and above toolkits.</summary>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.OceanCommand.#ctor">
      <summary>Initializes a new OceanCommand class object with default parameters.</summary>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.OceanCommand.#ctor(System.Int32,System.Int32,System.Boolean)">
      <summary>Initializes a new OceanCommand class object with explicit parameters.</summary>
      <param name="amplitude">Wave magnitude, in pixels. This parameter only accepts positive values.</param>
      <param name="frequency">Number of repeated waves. This parameter only accepts positive values.</param>
      <param name="lowerTransparency">Flag that indicates the transparency direction. Possible values are:</param>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.OceanCommand.ToString">
      <summary>Overridden. Returns a meaningful name for this command.</summary>
      <returns>String that contains the name of this command.</returns>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.OceanCommand.Amplitude">
      <summary>Gets or sets the wave magnitude, in pixels.</summary>
      <value>Wave magnitude, in pixels. This property only accepts positive values.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.OceanCommand.Frequency">
      <summary>Gets or sets the number of repeated waves.</summary>
      <value>Number of repeated waves. This property only accepts positive values.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.OceanCommand.LowerTransparency">
      <summary>Flag that indicates the transparency direction.</summary>
      <value>Enumeration that indicates the transparency direction. Possible values are:</value>
    </member>
    <member name="T:Leadtools.ImageProcessing.SpecialEffects.PerlinCommand">
      <summary>Uses a pseudo-random number generator in order to create a Perlin noise, and then procedurally transforms that noise into a texture. This command is available in the Imaging Pro and above toolkits.</summary>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.PerlinCommand.#ctor">
      <summary>Initializes a new PerlinCommand class object with default parameters.</summary>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.PerlinCommand.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,Leadtools.RasterColor,Leadtools.RasterColor,System.Int32,System.Int32,System.Int32,System.Int32,Leadtools.ImageProcessing.SpecialEffects.NoiseLayoutType)">
      <summary>Initializes a new PerlinCommand class object with explicit parameters.</summary>
      <param name="seed">Value that represents the initial seeding value for the pseudo-randomization process. Use 0 for automatic seeding. If other parameters are kept the same, each seed value always produces the same effect. Each seed value produces an effect different from all of the other seed values. Possible values are 0 or greater.</param>
      <param name="frequency">Value that represents the frequency component for both the x and y axis. Possible values range from 0 to 16. No noise is created if the value is 0. Increasing this value increases the noise.</param>
      <param name="iteration">Value that represents the number of iterations that will be calculated. Possible values range from 0 to 8. No noise is created if the value is 0. Increasing this value increases the detail in the noise, as well as computation time.</param>
      <param name="opacity">Value that represents the percentage to be used when combining the original image with the noise. Possible values range from 0 through 100. A value of 0 indicates that no noise is being used and a value of 100 represents a mix of noise and image.</param>
      <param name="backColor">The RasterColor value that represents the background color.</param>
      <param name="perlinColor">The RasterColor value that represents the Perlin noise color.</param>
      <param name="xCircle">The x coordinate, in pixels and in image coordinates, for the center point of the concentric circles. Possible values range from 0 to the height of the image. This parameter is only used if the PF_Circle flag is set.</param>
      <param name="yCircle">The y coordinate, in pixels and in image coordinates, for the center point of the concentric circles. Possible values range from 0 to the height of the image. This parameter is only used if the PF_Circle flag is set.</param>
      <param name="freqLayout">Value used to control the frequency of the circles or lines to be created for the noise image. Valid values range from 0 to 100. Increase this value to increase the number of circles or lines drawn.</param>
      <param name="denLayout">Value that represents the density of the layout for the produced noise. Possible values range from 0 through 100. When using a low denLayout value, the noise will appear with light color.</param>
      <param name="perlinFlags">Flags that indicate how to apply the effect, and which layout pattern to use for the noise.</param>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.PerlinCommand.ToString">
      <summary>Overridden. Returns a meaningful name for this command.</summary>
      <returns>String that contains the name of this command.</returns>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.PerlinCommand.Backcolor">
      <summary>Gets or sets the background color.</summary>
      <value>The background color.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.PerlinCommand.DenLayout">
      <summary>Gets or sets the value that represents the density of the layout for the produced noise.</summary>
      <value>Value that represents the density of the layout for the produced noise. Possible values range from 0 through 100. When using a low DenLayout value the noise will appear with light color.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.PerlinCommand.FreqLayout">
      <summary>Gets or sets the value used to control the frequency of the circles or lines to be created for the noise image.</summary>
      <value>Value that indicates the frequency of the circles or lines to be created for the noise image. This parameter is used if the PF_Circle or PF_Line flag is set. Possible values range from 0 through 100. Increase this value to increase the number of circles or lines drawn.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.PerlinCommand.Frequency">
      <summary>Gets or sets the value that indicates the frequency component for both the x and y axis.</summary>
      <value>Value that indicates the frequency component for both the x and y axis. Possible values range from 0 to 16. No noise is created if the value is 0. Increasing this value increases the noise.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.PerlinCommand.Iteration">
      <summary>Gets or sets the value that indicates the number of iterations that will be calculated.</summary>
      <value>Value that indicates the number of iterations that will be calculated. Possible values range from 0 to 8. No noise is created if the value is 0. Increasing this value increases the detail in the noise, as well as computation time.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.PerlinCommand.Opacity">
      <summary>Gets or sets the value that indicates the percentage to be used when combining the original image with the noise.</summary>
      <value>Value that indicates the percentage to be used when combining the original image with the noise. Possible values range from 0 through 100. This parameter is used if the PF_Combine or PF_Difference flag is set. A value of 0 indicates that no noise is being used and a value of 100 represents a mix of noise and image.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.PerlinCommand.PerlinColor">
      <summary>Gets or sets the foreground color.</summary>
      <value>The foreground color.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.PerlinCommand.PerlinFlags">
      <summary>Gets or sets flags that indicate how to apply the effect, and which layout pattern to use for the noise.</summary>
      <value>Flags that indicate how to apply the effect, and which layout pattern to use for the noise.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.PerlinCommand.Seed">
      <summary>Gets or sets the value that represents the initial seeding value for the pseudo-randomization process. Use 0 for automatic seeding.</summary>
      <value>Value that represents the initial seeding value for the pseudo-randomization process on which the filter is applied. Use 0 for automatic seeding. If other parameters are kept the same, each seed value always produces the same effect. Each seed value produces an effect different from all of the other seed values. Possible values are 0 or greater.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.PerlinCommand.XCircle">
      <summary>Gets or sets the value that indicates the x coordinate, in pixels and in image coordinates, for the center point of the concentric circles.</summary>
      <value>Value that indicates the x coordinate, in pixels and in image coordinates, for the center point of the concentric circles. Possible values range from 0 to the width of the image. This parameter is only used if the PF_Circle flag is set.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.PerlinCommand.YCircle">
      <summary>Gets or sets the value that indicates the y coordinate, in pixels and in image coordinates, for the center point of the concentric circles.</summary>
      <value>Value that indicates the y coordinate, in pixels and in image coordinates, for the center point of the concentric circles. Possible values range from 0 to the height of the image. This parameter is only used if the PF_Circle flag is set.</value>
    </member>
    <member name="T:Leadtools.ImageProcessing.SpecialEffects.PerspectiveCommand">
      <summary>Gives the image a 3-D depth, as if it exists on a flat plane skewed into different shapes. This command is available in the Imaging Pro and above toolkits.</summary>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.PerspectiveCommand.#ctor">
      <summary>Initializes a new PerspectiveCommand with default parameters.</summary>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.PerspectiveCommand.#ctor(Leadtools.LeadPoint[],Leadtools.RasterColor,Leadtools.ImageProcessing.SpecialEffects.PerspectiveCommandType)">
      <summary>Initializes a new PerspectiveCommand with explicit parameters.</summary>
      <param name="cornerPoints">Array of Leadtools.LeadPoint that determines the new locations of image corners.</param>
      <param name="fillColor">Background color</param>
      <param name="type">The type of background.</param>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.PerspectiveCommand.ToString">
      <summary>Overridden. Returns a meaningful name for this method.</summary>
      <returns>string that contains the name of this method.</returns>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.PerspectiveCommand.CornerPoints">
      <summary>Array of Leadtools.LeadPoint values that determine the new locations of image corners.</summary>
      <value>Array of Leadtools.LeadPoint values that determine the new locations of image corners. It should contain four points; points at indices 0, 1, 2 and 3 determine the new locations of left-top, right-top, left-bottom and right-bottom image corners respectively. The new locations of image corners should keep the relative relation between corners: for example, the point at index 1 should be to the right of the point at index 0 and up from the point at index 3. Also, the point at index 2 should be to the left of the point at index 3 and down from the point at index 0 and so on. All new locations should be inside the image.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.PerspectiveCommand.FillColor">
      <summary>Gets or sets the background color.</summary>
      <value>The background color.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.PerspectiveCommand.Type">
      <summary>Gets or sets a value that indicates the type of background to be used.</summary>
      <value>A PerspectiveCommandType enumeration value that indicates the type of background to be used.</value>
    </member>
    <member name="T:Leadtools.ImageProcessing.SpecialEffects.PixelateCommand">
      <summary>Divides the image into rectangular or circular cells and then recreates the image by filling those cells with the minimum, maximum, or average pixel value, depending upon the effect that was selected. This command is available in the Imaging Pro and above toolkits.</summary>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.PixelateCommand.#ctor">
      <summary>Initializes a new PixelateCommand class object with default parameters.</summary>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.PixelateCommand.#ctor(System.Int32,System.Int32,System.Int32,Leadtools.LeadPoint,Leadtools.ImageProcessing.SpecialEffects.PixelateCommandFlags)">
      <summary>Initializes a new PixelateCommand class object with explicit parameters.</summary>
      <param name="cellWidth">Value that represents the width of a rectangular cell, the number of rectangular cells present across the width of the image, the number of cells around the center point of a circular cell, or the length in degrees of each cell around the center point of a circular cell, based on the flags.</param>
      <param name="cellHeight">Value that represents the height of a rectangular cell, the number of rectangular cells present across the height of the image, the number of cells along the radius of a circular cell, or the length of each cell along the radius of a circular cell, based on the flags.</param>
      <param name="opacity">Value that represents how transparent the cells are, compared to the original pixels. This is a percentage. Possible values are 0 - 100. (0 is total opacity and 100 is total transparency.)</param>
      <param name="centerPoint">Represents the center of revolution when circular cells are used. This parameter will be ignored if the PixelateCommandFlags.Rectangle flag is set.</param>
      <param name="flags">Flags that indicate the values used to fill the cells, the shape of the cells, and what type of data is in the CellWidth and CellHeight properties.</param>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.PixelateCommand.ToString">
      <summary>Overridden. Returns a meaningful name for this command.</summary>
      <returns>String that contains the name of this command.</returns>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.PixelateCommand.CellHeight">
      <summary>Gets or sets a value that represents the height of a rectangular cell.</summary>
      <value>Value that represents the height of a rectangular cell, the number of rectangular cells present across the height of the image, the number of cells along the radius of a circular cell, or the length of each cell along the radius of a circular cell, based on the flags set in the Flags property.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.PixelateCommand.CellWidth">
      <summary>Gets or sets a value that represents the width of a rectangular cell.</summary>
      <value>Value that represents the width of a rectangular cell, the number of rectangular cells present across the width of the image, the number of cells around the center point of a circular cell, or the length in degrees of each cell around the center point of a circular cell, based on the flags set in the Flags property.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.PixelateCommand.CenterPoint">
      <summary>Gets or sets a point structure that contains the center of revolution when circular cells are used.</summary>
      <value>Point structure that contains the center of revolution when circular cells are used. This property will be ignored if the PixelateCommandFlags.Rectangle flag is set in Flags property.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.PixelateCommand.Flags">
      <summary>Flag that indicates the values used to fill the cells, the shape of the cells, and what type of data is in the CellWidth and CellHeight properties.</summary>
      <value>Flag that indicates the values used to fill the cells, the shape of the cells, and what type of data is in the CellWidth and CellHeight properties.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.PixelateCommand.Opacity">
      <summary>Gets ors sets a value that represents how transparent the cells are, compared to the original pixels. This is a percentage.</summary>
      <value>Value that represents how transparent the cells are, compared to the original pixels. This is a percentage. Possible values are 0 - 100. (0 is total transparency and 100 is total opacity.)</value>
    </member>
    <member name="T:Leadtools.ImageProcessing.SpecialEffects.PlaneBendCommand">
      <summary>Places the image on parallel planes along the Z-axis, and bends the planes toward the center point. This command is available in the Imaging Pro and above toolkits.</summary>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.PlaneBendCommand.#ctor">
      <summary>Initializes a new PlaneBendCommand class object with default parameters.</summary>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.PlaneBendCommand.#ctor(Leadtools.LeadPoint,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,Leadtools.RasterColor,Leadtools.RasterColor,Leadtools.ImageProcessing.SpecialEffects.PlaneCommandFlags)">
      <summary>Initializes a new PlaneBendCommand class object with explicit parameters.</summary>
      <param name="centerPoint">Contains the point at which the camera or viewer is looking. This is also the point toward which the images will be bent. It may be outside the image borders.</param>
      <param name="zValue">Viewing screen offset on the Z-axis, in pixels.</param>
      <param name="distance">Camera distance from the viewing screen, in pixels.</param>
      <param name="planeOffset">Distance between the parallel planes. This property only accepts positive values.</param>
      <param name="repeat">Number of times the image repeats along the Z-axis. If Repeat equals -1 the image will be infinitely repeated. Its range starts from -1.</param>
      <param name="pyramidAngle">The view angle, off the Z-axis. This value is given in hundredths of a degree (+/-). This can be a number from 0 to 36,000.</param>
      <param name="stretch">Value that indicates whether to expand or compress the image, and by how much. If Stretch &lt; 100 image will be expanded. If stretch &gt; 100 the image will be compressed. Use 100 to maintain the image's dimensions. The value of this parameter is internally divided by 100. This parameter only accepts positive values.</param>
      <param name="bendFactor">Determines the plane's bending value. The range starts at 100 and increases indefinitely. If bendFactor equals 100 the planes will not be bent.If bendFactor &gt; 100 planes will be bent. The value of this parameter is internally divided by 100. This parameter only accepts positive values.</param>
      <param name="startBright">Value that indicates the brightness of an external light source on the first image displayed. Possible values range from 0 to 100. A value of 0 indicates no external light displayed on the image. A value of 100 indicates an external light source with full brightness is displayed on the image.</param>
      <param name="endBright">Value that indicates the brightness of an external light source on the last image displayed. Possible values range from 0 to 100. A value of 0 indicates no external light displayed on the image. A value of 100 indicates an external light source with full brightness is displayed on the image.</param>
      <param name="brightLength">Value that indicates how much the brightness changes as you move along the Z axis. This parameter is internally multiplied by 50.</param>
      <param name="brightColor">Specifies the color of an external light source that shines on the displayed images.</param>
      <param name="fillColor">Specifies the background color.</param>
      <param name="flags">Flags that indicate the background color and the planes to be shown. You can use a bit wise OR ( &amp;#166; ) to specify one flag from each group.</param>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.PlaneBendCommand.ToString">
      <summary>Overridden. Returns a meaningful name for this command.</summary>
      <returns>String that contains the name of this command.</returns>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.PlaneBendCommand.BendFactor">
      <summary>Gets or sets the plane's bending value.</summary>
      <value>The plane's bending value. The range starts at 100 and increases indefinitely. If BendFactor equals 100 the planes will not be bent.If BendFactor &gt; 100 planes will be bent. The value of this property is internally divided by 100. This property only accepts positive values.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.PlaneBendCommand.BrightColor">
      <summary>Gets or sets the color of an external light source that shines on the displayed images.</summary>
      <value>The color of an external light source that shines on the displayed images.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.PlaneBendCommand.BrightLength">
      <summary>Gets or sets a value that indicates how much the brightness changes as you move along the Z axis.</summary>
      <value>Value that indicates how much the brightness changes as you move along the Z axis. This property is internally multiplied by 50.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.PlaneBendCommand.CenterPoint">
      <summary>Gets or sets the point at which the camera or viewer is looking.</summary>
      <value>Point structure that contains the point at which the camera or viewer is looking. This is also the point toward which the images will be bent. It may be outside the image borders.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.PlaneBendCommand.Distance">
      <summary>Gets or sets the camera distance from the viewing screen, in pixels.</summary>
      <value>Camera distance from the viewing screen, in pixels.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.PlaneBendCommand.EndBright">
      <summary>Gets or sets a value that indicates the brightness of an external light source on the last image displayed.</summary>
      <value>Value that indicates the brightness of an external light source on the last image displayed. Possible values range from 0 to 100. A value of 0 indicates no external light displayed on the image. A value of 100 indicates an external light source with full brightness is displayed on the image.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.PlaneBendCommand.FillColor">
      <summary>Gets or sets the background color.</summary>
      <value>The background color.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.PlaneBendCommand.Flags">
      <summary>Gets or sets flags that indicate the background color and the planes to be shown.</summary>
      <value>Flags that indicate the background color and the planes to be shown. You can use a bit wise OR ( &amp;#166; ) to specify one flag from each group.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.PlaneBendCommand.PlaneOffset">
      <summary>Gets or sets the distance between the parallel planes.</summary>
      <value>Distance between the parallel planes. This property only accepts positive values.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.PlaneBendCommand.PyramidAngle">
      <summary>Gets or sets the view angle, off the Z-axis.</summary>
      <value>The view angle, off the Z-axis. This value is given in hundredths of a degree (+/-). This can be a number from 0 to 36,000.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.PlaneBendCommand.Repeat">
      <summary>Gets or sets the number of times the image repeats along the Z-axis.</summary>
      <value>Number of times the image repeats along the Z-axis. If Repeat equals -1 the image will be infinitely repeated. Its range starts from -1.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.PlaneBendCommand.StartBright">
      <summary>Gets or sets a value that indicates the brightness of an external light source on the first image displayed.</summary>
      <value>Value that indicates the brightness of an external light source on the first image displayed. Possible values range from 0 to 100. A value of 0 indicates no external light displayed on the image. A value of 100 indicates an external light source with full brightness is displayed on the image.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.PlaneBendCommand.Stretch">
      <summary>Gets or sets a value that indicates whether to expand or compress the image, and by how much.</summary>
      <value>Value that indicates whether to expand or compress the image, and by how much. If Stretch &lt; 100 image will be expanded. If Stretch &gt; 100 the image will be compressed. Use 100 to maintain the image's dimensions. The value of this property is internally divided by 100. This property only accepts positive values.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.PlaneBendCommand.ZValue">
      <summary>Gets or sets the viewing screen offset on the Z-axis, in pixels.</summary>
      <value>Viewing screen offset on the Z-axis, in pixels.</value>
    </member>
    <member name="T:Leadtools.ImageProcessing.SpecialEffects.PlaneCommand">
      <summary>Places the image on parallel planes along the Z-axis. This command is available in the Imaging Pro and above toolkits.</summary>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.PlaneCommand.#ctor">
      <summary>Initializes a new PlaneCommand class object with default parameters.</summary>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.PlaneCommand.#ctor(Leadtools.LeadPoint,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,Leadtools.RasterColor,Leadtools.RasterColor,Leadtools.ImageProcessing.SpecialEffects.PlaneCommandFlags)">
      <summary>Initializes a new PlaneCommand class object with explicit parameters.</summary>
      <param name="centerPoint">Contains the point at which the camera or viewer is looking. This is also the point toward which the images will be bent. It may be outside the image borders.</param>
      <param name="zValue">Viewing screen offset on the Z-axis, in pixels.</param>
      <param name="distance">Camera distance from the viewing screen, in pixels.</param>
      <param name="planeOffset">Distance between the parallel planes. This property only accepts positive values.</param>
      <param name="repeat">Number of times the image repeats along the Z-axis. If repeat equals -1 the image will be infinitely repeated. Its range starts from -1.</param>
      <param name="pyramidAngle">The view angle, off the Z-axis. This value is given in hundredths of a degree (+/-). This can be a number from 0 to 36,000.</param>
      <param name="stretch">Value that indicates whether to expand or compress the image, and by how much. If Stretch &lt; 100 image will be expanded. If Stretch &gt; 100 the image will be compressed. Use 100 to maintain the image's dimensions. The value of this parameter is internally divided by 100. This parameter only accepts positive values.</param>
      <param name="startBright">Value that indicates the brightness of an external light source on the first image displayed. Possible values range from 0 to 100. A value of 0 indicates no external light displayed on the image. A value of 100 indicates an external light source with full brightness is displayed on the image.</param>
      <param name="endBright">Value that indicates the brightness of an external light source on the last image displayed. Possible values range from 0 to 100. A value of 0 indicates no external light displayed on the image. A value of 100 indicates an external light source with full brightness is displayed on the image.</param>
      <param name="brightLength">Value that indicates how much the brightness changes as you move along the Z axis. This property is internally multiplied by 50.</param>
      <param name="brightColor">Specifies the color of an external light source that shines on the displayed images.</param>
      <param name="fillColor">Specifies the background color.</param>
      <param name="flags">Flags that indicate the background color and the planes to be shown. You can use a bit wise OR ( &amp;#166; ) to specify one flag from each group.</param>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.PlaneCommand.ToString">
      <summary>Overridden. Returns a meaningful name for this command.</summary>
      <returns>String that contains the name of this command.</returns>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.PlaneCommand.BrightColor">
      <summary>Gets or sets the color of an external light source that shines on the displayed images.</summary>
      <value>The color of an external light source that shines on the displayed images.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.PlaneCommand.BrightLength">
      <summary>Gets or sets a value that indicates how much the brightness changes as you move along the Z axis.</summary>
      <value>Value that indicates how much the brightness changes as you move along the Z axis. This property is internally multiplied by 50.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.PlaneCommand.CenterPoint">
      <summary>Point structure that contains the point at which the camera or viewer is looking.</summary>
      <value>Point structure that contains the point at which the camera or viewer is looking. This is also the point toward which the images will be bent. It may be outside the image borders.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.PlaneCommand.Distance">
      <summary>Gets or sets the camera distance from the viewing screen, in pixels.</summary>
      <value>Camera distance from the viewing screen, in pixels.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.PlaneCommand.EndBright">
      <summary>Gets or sets a value that indicates the brightness of an external light source on the last image displayed.</summary>
      <value>Value that indicates the brightness of an external light source on the last image displayed. Possible values range from 0 to 100. A value of 0 indicates no external light displayed on the image. A value of 100 indicates an external light source with full brightness is displayed on the image.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.PlaneCommand.FillColor">
      <summary>Gets or sets the background color.</summary>
      <value>The background color.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.PlaneCommand.Flags">
      <summary>Gets or sets flags that indicate the background color and the planes to be shown.</summary>
      <value>Flags that indicate the background color and the planes to be shown. You can use a bit wise OR ( &amp;#166; ) to specify one flag from each group.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.PlaneCommand.PlaneOffset">
      <summary>Gets or sets the distance between the parallel planes.</summary>
      <value>Distance between the parallel planes. This property only accepts positive values.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.PlaneCommand.PyramidAngle">
      <summary>Gets or sets the view angle, off the Z-axis.</summary>
      <value>The view angle, off the Z-axis. This value is given in hundredths of a degree (+/-). This can be a number from 0 to 36,000.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.PlaneCommand.Repeat">
      <summary>Gets or sets the number of times the image repeats along the Z-axis.</summary>
      <value>Number of times the image repeats along the Z-axis. If Repeat equals -1 the image will be infinitely repeated. Its range starts from -1.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.PlaneCommand.StartBright">
      <summary>Gets or sets a value that indicates the brightness of an external light source on the first image displayed.</summary>
      <value>Value that indicates the brightness of an external light source on the first image displayed. Possible values range from 0 to 100. A value of 0 indicates no external light displayed on the image. A value of 100 indicates an external light source with full brightness is displayed on the image.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.PlaneCommand.Stretch">
      <summary>Gets or sets a value that indicates whether to expand or compress the image, and by how much.</summary>
      <value>Value that indicates whether to expand or compress the image, and by how much. If Stretch &lt; 100 image will be expanded. If Stretch &gt; 100 the image will be compressed. Use 100 to maintain the image's dimensions. The value of this property is internally divided by 100. This property only accepts positive values.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.PlaneCommand.ZValue">
      <summary>gets or sets the viewing screen offset on the Z-axis, in pixels.</summary>
      <value>Viewing screen offset on the Z-axis, in pixels.</value>
    </member>
    <member name="T:Leadtools.ImageProcessing.SpecialEffects.PlasmaCommand">
      <summary>Applies color patterns that blend into each other like plasma. This command is available in the Imaging Pro and above toolkits.</summary>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.PlasmaCommand.#ctor">
      <summary>Initializes a new PlasmaCommand with default parameters.</summary>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.PlasmaCommand.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,Leadtools.ImageProcessing.SpecialEffects.PlasmaCommandFlags)">
      <summary>Initializes a new PlasmaCommand with explicit parameters.</summary>
      <param name="opacity">A percentage value that indicates the amount of blending between the plasma color patterns and the original image. Possible values range from 0 to 100. Use 0 when not using an image, and 100 when not using the plasma values.</param>
      <param name="size">Value greater than 0 that represents the plasma size. (The value is divided internally by 100). The value, after it has been divided by 100, represents the size in pixels.</param>
      <param name="shift">The amount of color shift in the plasma color pattern. Valid range for the 16, 48, and 64-bit images is from 0 to 65535 and for 12-bit images from 0 to 4095. Otherwise, it is from 0 to 255. A value of 0 means there is no color shift.</param>
      <param name="redFrequency">Value that indicates which frequencies of red color should be used to create plasma patterns. Valid range for the 16, 48, and 64-bit images is from 0 to 65535 and for 12-bit images from 0 to 4095. Otherwise, it is from 0 to 255. Use 0 to turn off processing for the red frequencies.</param>
      <param name="greenFrequency">Value that indicates which frequencies of green color should be used to create plasma patterns. Valid range for the 16, 48, and 64-bit images is from 0 to 65535 and for 12-bit images from 0 to 4095. Otherwise, it is from 0 to 255. Use 0 to turn off processing for the green frequencies.</param>
      <param name="blueFrequency">Value that indicates which frequencies of blue color should be used to create plasma patterns. Valid range for the 16, 48, and 64-bit images is from 0 to 65535 and for 12-bit images from 0 to 4095. Otherwise, it is from 0 to 255. Use 0 to turn off processing for the blue frequencies.</param>
      <param name="flags">Enumeration that indicates which type of plasma effect to create, and which color pattern to use.</param>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.PlasmaCommand.ToString">
      <summary>Overridden. Returns a meaningful name for this method.</summary>
      <returns>String that contains the name of this method.</returns>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.PlasmaCommand.BlueFrequency">
      <summary>Gets or sets the frequency of blue color.</summary>
      <value>Value that indicates which frequencies of blue color should be used to create plasma patterns. Valid range for the 16, 48, and 64-bit images is from 0 to 65535 and for 12-bit images from 0 to 4095. Otherwise, it is from 0 to 255. Use 0 to turn off processing for the blue frequencies.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.PlasmaCommand.Flags">
      <summary>Gets or sets the type of plasma effect, and the color pattern to use.</summary>
      <value>Enumeration that indicates which type of plasma effect to create, and which color pattern to use.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.PlasmaCommand.GreenFrequency">
      <summary>Gets or sets the frequency of green color.</summary>
      <value>Value that indicates which frequencies of green color should be used to create plasma patterns. Valid range for the 16, 48, and 64-bit images is from 0 to 65535 and for 12-bit images from 0 to 4095. Otherwise, it is from 0 to 255. Use 0 to turn off processing for the green frequencies.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.PlasmaCommand.Opacity">
      <summary>Gets or sets the blending percent between plasma color and original image.</summary>
      <value>A percentage value that indicates the amount of blending between the plasma color patterns and the original image. Possible values range from 0 to 100. Use 0 when not using an image, and 100 when not using the plasma values.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.PlasmaCommand.RedFrequency">
      <summary>Gets or sets the frequency of red color.</summary>
      <value>Value that indicates which frequencies of red color should be used to create plasma patterns. Valid range for the 16, 48, and 64-bit images is from 0 to 65535 and for 12-bit images from 0 to 4095. Otherwise, it is from 0 to 255. Use 0 to turn off processing for the red frequencies.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.PlasmaCommand.Shift">
      <summary>Gets or sets the amount of color-shift in plasma color pattern.</summary>
      <value>The amount of color shift in the plasma color pattern. Valid range for the 16, 48, and 64-bit images is from 0 to 65535 and for 12-bit images from 0 to 4095. Otherwise, it is from 0 to 255. A value of 0 means there is no color shift.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.PlasmaCommand.Size">
      <summary>Gets or sets the size of plasma.</summary>
      <value>Value greater than 0 that represents the plasma size. (The value is divided internally by 100). The value, after it has been divided by 100, represents the size in pixels.</value>
    </member>
    <member name="T:Leadtools.ImageProcessing.SpecialEffects.PointillistCommand">
      <summary>Converts image colors into randomly placed dots to create a pointillist painting. This command is available in the Imaging Pro and above toolkits.</summary>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.PointillistCommand.#ctor">
      <summary>Initializes a new PointillistCommand with default parameters.</summary>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.PointillistCommand.#ctor(System.Int32,Leadtools.RasterColor,Leadtools.ImageProcessing.SpecialEffects.PointillistCommandFlags)">
      <summary>Initializes a new PointillistCommand with explicit parameters.</summary>
      <param name="size">Dot size.</param>
      <param name="fillColor">Fill color.</param>
      <param name="flags">Flags that indicate the background color and dots type.</param>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.PointillistCommand.ToString">
      <summary>Overridden. Returns a meaningful name for this method.</summary>
      <returns>string that contains the name of this method.</returns>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.PointillistCommand.FillColor">
      <summary>Gets or sets background color.</summary>
      <value>The background color.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.PointillistCommand.Flags">
      <summary>Gets or sets the flags that indicate the background color and dots type.</summary>
      <value>Flags that indicate the background color and dots type.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.PointillistCommand.Size">
      <summary>Gets or sets a value that represents the dot size.</summary>
      <value>Value represents the dot size. Only positive values are accepted.</value>
    </member>
    <member name="T:Leadtools.ImageProcessing.SpecialEffects.PolarCommand">
      <summary>Converts the image from rectangular to polar coordinates and vice versa. This command is available in the Imaging Pro and above toolkits.</summary>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.PolarCommand.#ctor">
      <summary>Initializes a new PolarCommand class object with default parameters.</summary>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.PolarCommand.#ctor(Leadtools.RasterColor,Leadtools.ImageProcessing.SpecialEffects.PolarCommandFlags)">
      <summary>Initializes a new PolarCommand class object with explicit parameters.</summary>
      <param name="fillColor">Specifies the fill color for any exposed areas.</param>
      <param name="flags">Flag that indicates how to handle exposed areas and the type of conversion.</param>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.PolarCommand.ToString">
      <summary>Overridden. Returns a meaningful name for this command.</summary>
      <returns>String that contains the name of this command.</returns>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.PolarCommand.FillColor">
      <summary>Gets or sets the fill color for any exposed areas.</summary>
      <value>The fill color for any exposed areas.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.PolarCommand.Flags">
      <summary>Gets or sets flags that indicate how to handle exposed areas and the type of conversion.</summary>
      <value>Flags that indicate how to handle exposed areas and the type of conversion.</value>
    </member>
    <member name="T:Leadtools.ImageProcessing.SpecialEffects.PunchCommand">
      <summary>Warps the image by pinching it toward the center or expanding the image away from its center. This command is available in the Imaging Pro and above toolkits.</summary>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.PunchCommand.#ctor">
      <summary>Initializes a new PunchCommand class object with default parameters.</summary>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.PunchCommand.#ctor(System.Int32,System.Int32,Leadtools.LeadPoint,Leadtools.RasterColor,Leadtools.ImageProcessing.SpecialEffects.PunchCommandFlags)">
      <summary>Initializes a new PunchCommand class object with explicit parameters.</summary>
      <param name="value">Amount of stretching where :</param>
      <param name="stress">Amount of punching intensity. This value is ignored when the value parameter is less than 0. Valid values range from 0 to 1000.</param>
      <param name="centerPoint">The point around which the image will be pinched or punched.</param>
      <param name="fillColor">Specifies the fill color for any exposed areas.</param>
      <param name="flags">Flags that indicate how to handle exposed areas, both centrally and peripherally.</param>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.PunchCommand.ToString">
      <summary>Overridden. Returns a meaningful name for this command.</summary>
      <returns>String that contains the name of this command.</returns>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.PunchCommand.CenterPoint">
      <summary>Point structure that contains the point around which the image will be pinched or punched.</summary>
      <value>The point around which the image will be pinched or punched.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.PunchCommand.FillColor">
      <summary>Gets or sets the fill color for any exposed areas.</summary>
      <value>The fill color for any exposed areas.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.PunchCommand.Flags">
      <summary>Gets or sets a flags that indicate how to handle exposed areas, both centrally and peripherally.</summary>
      <value>Value that indicates how to handle exposed areas, both centrally and peripherally.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.PunchCommand.Stress">
      <summary>Gets or sets the amount of punching intensity.</summary>
      <value>Amount of punching intensity. This value is ignored when the Value property is less than 0. Valid values range from 0 to 1000.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.PunchCommand.Value">
      <summary>Gets or sets the amount of stretching.</summary>
      <value>Amount of stretching where :</value>
    </member>
    <member name="T:Leadtools.ImageProcessing.SpecialEffects.PuzzleEffectCommand">
      <summary>Splits the image into square blocks and randomizes these blocks inside the image. This command is available in the Imaging Pro and above toolkits.</summary>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.PuzzleEffectCommand.#ctor">
      <summary>Initializes a new PuzzleEffectCommand class object with default parameters.</summary>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.PuzzleEffectCommand.#ctor(System.Int32,System.Int32,System.Int32,Leadtools.ImageProcessing.SpecialEffects.PuzzleEffectCommandFlags,Leadtools.RasterColor)">
      <summary>Initializes a new PuzzleEffectCommand class object with explicit parameters.</summary>
      <param name="xblock">If the PuzzleEffectCommandFlags.Size flag is set, this value represents the width of the each block, in pixels. If the PuzzleEffectCommandFlags.Count flag is set, it represents the number of blocks per row. Only positive values are accepted.</param>
      <param name="yblock">If the PuzzleEffectCommandFlags.Size flag is set, this value represents the height of the each block, in pixels. If the PuzzleEffectCommandFlags.Count flag is set, it represents the number of blocks per column. Only positive values are accepted.</param>
      <param name="randomize">The starting point for the randomization process. Valid values range from 0 through 500. Use 0 to have the command select the starting point. Only positive values are accepted.</param>
      <param name="flags">Flags that indicate how to apply the puzzle effect.</param>
      <param name="borderColor">If the PuzzleEffectCommandFlags.Border flag is set, this value represents the color of the border that will be drawn around the blocks. This parameter is ignored if the PuzzleEffectCommandFlags.Border flag is not set.</param>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.PuzzleEffectCommand.ToString">
      <summary>Overridden. Returns a meaningful name for this command.</summary>
      <returns>String that contains the name of this command.</returns>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.PuzzleEffectCommand.BorderColor">
      <summary>Gets or sets the color of the border that will be drawn around the blocks.</summary>
      <value>If the PuzzleEffectCommandFlags.Border flag is set in the Flags property, this value represents the color of the border that will be drawn around the blocks. This property is ignored if the PuzzleEffectCommandFlags.Border flag is not set.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.PuzzleEffectCommand.Flags">
      <summary>Gets or sets flags that specify how to apply the puzzle effect.</summary>
      <value>Flags that specify how to apply the puzzle effect.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.PuzzleEffectCommand.Randomize">
      <summary>Gets or sets the starting point for the randomization process.</summary>
      <value>The starting point for the randomization process. Valid values range from 0 through 500. Use 0 to have the command select the starting point. Only positive values are accepted.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.PuzzleEffectCommand.XBlock">
      <summary>Gets or sets the width of the each block in pixels or the number of blocks per row.</summary>
      <value>If the PuzzleEffectCommandFlags.Size flag is set, this value represents the width of the each block, in pixels. If the PuzzleEffectCommandFlags.Count flag is set, it represents the number of blocks per row. Only positive values are accepted.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.PuzzleEffectCommand.YBlock">
      <summary>Gets or sets the height of the each block in pixels or the number of blocks per column.</summary>
      <value>If the PuzzleEffectCommandFlags.Size flag is set, this value represents the height of the each block, in pixels. If the PuzzleEffectCommandFlags.Count flag is set, it represents the number of blocks per column. Only positive values are accepted.</value>
    </member>
    <member name="T:Leadtools.ImageProcessing.SpecialEffects.RadialBlurCommand">
      <summary>Blurs the image by rotating the pixels around the center point. This command is available in the Imaging Pro and above toolkits.</summary>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.RadialBlurCommand.#ctor">
      <summary>Initializes a new RadialBlurCommand class object with default parameters.</summary>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.RadialBlurCommand.#ctor(System.Int32,System.Int32,Leadtools.LeadPoint)">
      <summary>Initializes a new RadialBlurCommand class object with explicit parameters.</summary>
      <param name="dimension">An integer that represents the size of the neighborhood used in blurring. Increasing this value will increase the amount of blurring. Valid values are range in between 1 and 100.</param>
      <param name="stress">An integer that represents the amount of the blur intensity. Valid values are range in between 1 and 100.</param>
      <param name="centerPoint">The point around which the pixels are rotated.</param>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.RadialBlurCommand.ToString">
      <summary>Overridden. Returns a meaningful name for this command.</summary>
      <returns>String that contains the name of this command.</returns>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.RadialBlurCommand.CenterPoint">
      <summary>Gets or sets a point structure that contains the point around which the pixels are rotated.</summary>
      <value>The point around which the pixels are rotated.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.RadialBlurCommand.Dimension">
      <summary>Gets or sets an integer that represents the size of the neighborhood used in blurring. Increasing this value will increase the amount of blurring.</summary>
      <value>An integer that represents the size of the neighborhood used in blurring. Increasing this value will increase the amount of blurring. Valid values are range in between 1 and 100.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.RadialBlurCommand.Stress">
      <summary>Gets or sets an integer that represents the amount of the blur intensity.</summary>
      <value>An integer that represents the amount of the blur intensity. Valid values are range in between 1 and 100.</value>
    </member>
    <member name="T:Leadtools.ImageProcessing.SpecialEffects.RadialWaveCommand">
      <summary>Distorts the image using a wave radiating from the center. This command is available in the Imaging Pro and above toolkits.</summary>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.RadialWaveCommand.#ctor">
      <summary>Initializes a new RadialWaveCommand class object with default parameters.</summary>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.RadialWaveCommand.#ctor(System.Int32,System.Int32,System.Int32,Leadtools.LeadPoint,Leadtools.RasterColor,Leadtools.ImageProcessing.SpecialEffects.RadialWaveCommandFlags)">
      <summary>Initializes a new RadialWaveCommand class object with explicit parameters.</summary>
      <param name="amplitude">An integer that represents the magnitude of the wave. Valid values range from 0 to 100.</param>
      <param name="waveLength">Value that represents the wave length, if the RadialWaveCommand.Period flag is set. Possible values range from 1 - 100 and give the wavelength as a percentage of the image dimensions. If the RadialWaveCommand.Frequency flag is set, this value is the number of repeated waves.</param>
      <param name="phase">Wave phase shift, in hundredths of degrees. The valid range is from -36000 to 36000 (The value in degrees is nPhase divided by 100).</param>
      <param name="centerPoint">Point from which the wave radiates.</param>
      <param name="fillColor">Specifies the fill color for any exposed areas.</param>
      <param name="flags">Flags that indicate how to handle exposed areas, the type of information in the waveLength parameter.</param>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.RadialWaveCommand.ToString">
      <summary>Overridden. Returns a meaningful name for this command.</summary>
      <returns>String that contains the name of this command.</returns>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.RadialWaveCommand.Amplitude">
      <summary>Gets or sets an integer that represents the magnitude of the wave.</summary>
      <value>An integer that represents the magnitude of the wave. Valid values range from 0 to 100.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.RadialWaveCommand.CenterPoint">
      <summary>Gets or sets a point structure that contains the point from which the wave radiates.</summary>
      <value>Point from which the wave radiates.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.RadialWaveCommand.FillColor">
      <summary>Gets or sets the fill color for any exposed areas.</summary>
      <value>The fill color for any exposed areas.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.RadialWaveCommand.Flags">
      <summary>Flags that indicate how to handle exposed areas, the type of information in the WaveLength property.</summary>
      <value>Flags that indicate how to handle exposed areas, the type of information in the WaveLength property.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.RadialWaveCommand.Phase">
      <summary>Gets or sets the Wave phase shift, in hundredths of degrees.</summary>
      <value>Wave phase shift, in hundredths of degrees. The valid range is from -36000 to 36000 (The value in degrees is Phase divided by 100).</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.RadialWaveCommand.WaveLength">
      <summary>Gets or sets a value that represents the wave length.</summary>
      <value>Value that represents the wave length, if RadialWaveCommand.Period is set in the Flags property. Possible values range from 1 - 100 and give the wavelength as a percentage of the image dimensions. If the RadialWaveCommandFlags.Frequency flag is set in the Flags property, this value is the number of repeated waves.</value>
    </member>
    <member name="T:Leadtools.ImageProcessing.SpecialEffects.RevEffectCommand">
      <summary>Adds a pseudo-3D wave effect to the image by drawing lines across the image, basing the line's height at each point on its brightness at that point. This command is available in the Imaging Pro and above toolkits.</summary>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.RevEffectCommand.#ctor">
      <summary>Initializes a new RevEffectCommand class object with default parameters.</summary>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.RevEffectCommand.#ctor(System.Int32,System.Int32)">
      <summary>Initializes a new RevEffectCommand class object with explicit parameters.</summary>
      <param name="lineSpace">The space (in pixels) between each wave. This parameter only accepts positive values.</param>
      <param name="maximumHeight">The maximum height (in pixels) that the wave can reach. This parameter only accepts positive values.</param>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.RevEffectCommand.ToString">
      <summary>Overridden. Returns a meaningful name for this command.</summary>
      <returns>String that contains the name of this command.</returns>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.RevEffectCommand.LineSpace">
      <summary>Gets or sets a value that indicates the space (in pixels) between each wave.</summary>
      <value>The space (in pixels) between each wave. This property only accepts positive values.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.RevEffectCommand.MaximumHeight">
      <summary>Gets or sets the maximum height (in pixels) that the wave can reach.</summary>
      <value>The maximum height (in pixels) that the wave can reach. This property only accepts positive values.</value>
    </member>
    <member name="T:Leadtools.ImageProcessing.SpecialEffects.RingEffectCommand">
      <summary>Divides the image into the specified number of rings. Each ring is rotated according to a rotation angle. The rotation angle for each ring will be chosen randomly by the command or can be passed to the command. This command is available in the Imaging Pro and above toolkits.</summary>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.RingEffectCommand.#ctor">
      <summary>Initializes a new RingEffectCommand class object with default parameters.</summary>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.RingEffectCommand.#ctor(Leadtools.LeadPoint,System.Int32,System.Int32,System.Int32,Leadtools.RasterColor,System.Int32,Leadtools.ImageProcessing.SpecialEffects.RingEffectCommandFlags)">
      <summary>Initializes a new RingEffectCommand class object with explicit parameters.</summary>
      <param name="origin">Represents the coordinates (in pixels) for the origin of the rings. Only positive values are accepted.</param>
      <param name="radius">If the RingEffectCommandFlags.Radius flag is set, this is the width of each ring, in pixels. If the RingEffectCommandFlags.MaxRadius flag is set, this is the maximum radius, in pixels. In this latter case, the width of each ring is equal to ((radius) / (ringCount + 1)). Only positive values are accepted.</param>
      <param name="ringCount">Number of rings. Only positive values are accepted.</param>
      <param name="randomize">The starting point for the randomization process. Valid range is 0-500. If 0, the command will pick the starting point. If &gt; 0, this value will be the starting point. Only positive values are accepted.</param>
      <param name="color">Color used to fill the undefined area. This parameter is used only if the RingEffectCommandFlags.Color flag is set.</param>
      <param name="angle">The rotation angle value for each ring compared to the inner ring, in hundredths of degrees. This parameter is used only if the RingEffectCommandFlags.FixedAngle flag. The range of the acceptable values is from -18000 to 18000. This value is divided internally by 100.</param>
      <param name="flags">Flags which control the behavior of this command. These flags can be OR-ed together, unless otherwise specified.</param>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.RingEffectCommand.ToString">
      <summary>Overridden. Returns a meaningful name for this command.</summary>
      <returns>String that contains the name of this command.</returns>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.RingEffectCommand.Angle">
      <summary>Gets or sets the rotation angle value for each ring compared to the inner ring, in hundredths of degrees.</summary>
      <value>The rotation angle value for each ring compared to the inner ring, in hundredths of degrees. This property is used only if the Flags property contains the RingEffectCommandFlags.FixedAngle flag. The range of the acceptable values is from -18000 to 18000. This value is divided internally by 100.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.RingEffectCommand.Color">
      <summary>Gets or sets the color used to fill the undefined area.</summary>
      <value>Color used to fill the undefined area. This property is used only if the Flags property contains the RingEffectCommandFlags.Color flag.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.RingEffectCommand.Flags">
      <summary>Gets or sets a value that controls the behavior of this command.</summary>
      <value>Value which controls the behavior of this command. These flags can be OR-ed together with any other flag, unless otherwise specified.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.RingEffectCommand.Origin">
      <summary>Gets or sets the coordinates (in pixels) for the origin of the rings.</summary>
      <value>Coordinates (in pixels) for the origin of the rings. Only positive values are accepted.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.RingEffectCommand.Radius">
      <summary>Gets or sets the width of each ring in pixels or the maximum radius.</summary>
      <value>If the RingEffectCommandFlags.Radius flag is set in the Flags property, this is the width of each ring, in pixels. If the RingEffectCommandFlags.MaxRadius flag is set in the Flags property, this is the maximum radius, in pixels. In this latter case, the width of each ring is equal to ((Radius property)/ (RingCount property + 1)). Only positive values are accepted.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.RingEffectCommand.Randomize">
      <summary>Gets or sets the starting point for the randomization process.</summary>
      <value>The starting point for the randomization process. Valid range is 0-500. If 0, the command will pick the starting point. If &gt; 0, this value will be the starting point. Only positive values are accepted.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.RingEffectCommand.RingCount">
      <summary>Gets or sets the number of rings.</summary>
      <value>Number of rings. Only positive values are accepted.</value>
    </member>
    <member name="T:Leadtools.ImageProcessing.SpecialEffects.RippleCommand">
      <summary>Warps the image in concentric rings. This command is available in the Imaging Pro and above toolkits.</summary>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.RippleCommand.#ctor">
      <summary>Initializes a new RippleCommand class object with default parameters.</summary>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.RippleCommand.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,Leadtools.LeadPoint,Leadtools.RasterColor,Leadtools.ImageProcessing.SpecialEffects.RippleCommandType)">
      <summary>Initializes a new RippleCommand class object with explicit parameters.</summary>
      <param name="amplitude">Wave magnitude(amount of displacement). Only positive values are accepted.</param>
      <param name="frequency">Number of repeated waves along the radial line. Only positive values are accepted.</param>
      <param name="phase">Wave phase shift, in hundredths of degrees. The valid range is from -36000 to 36000 (The value in degrees is phase divided by 100).</param>
      <param name="attenuation">Attenuation value. The attenuation value indicates how rapidly the wave amplitude decays as the wave travels along the radial line. The values range from 0 - 1000.</param>
      <param name="centerPoint">The center of the Ripple wave.</param>
      <param name="fillColor">Specifies the fill color for any exposed areas.</param>
      <param name="type">Value that indicates how to handle exposed areas.</param>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.RippleCommand.ToString">
      <summary>Overridden. Returns a meaningful name for this command.</summary>
      <returns>String that contains the name of this command.</returns>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.RippleCommand.Amplitude">
      <summary>Gets or sets the wave magnitude(amount of displacement).</summary>
      <value>Wave magnitude(amount of displacement). Only positive values are accepted.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.RippleCommand.Attenuation">
      <summary>Gets or sets the attenuation value. The attenuation value indicates how rapidly the wave amplitude decays as the wave travels along the radial line.</summary>
      <value>Attenuation value. The attenuation value indicates how rapidly the wave amplitude decays as the wave travels along the radial line. The values range from 0 - 1000.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.RippleCommand.CenterPoint">
      <summary>Gets or sets the center of the Ripple wave.</summary>
      <value>The center of the Ripple wave.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.RippleCommand.FillColor">
      <summary>Gets or sets the fill color for any exposed areas.</summary>
      <value>The fill color for any exposed areas.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.RippleCommand.Frequency">
      <summary>Gets or sets the number of repeated waves along the radial line.</summary>
      <value>Number of repeated waves along the radial line. Only positive values are accepted.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.RippleCommand.Phase">
      <summary>Gets or sets the wave phase shift, in hundredths of degrees.</summary>
      <value>Wave phase shift, in hundredths of degrees. The valid range is from -36000 to 36000 (The value in degrees is Phase property divided by 100).</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.RippleCommand.Type">
      <summary>Gets or sets a flag that indicates how to handle exposed areas.</summary>
      <value>Value that indicates how to handle exposed areas.</value>
    </member>
    <member name="T:Leadtools.ImageProcessing.SpecialEffects.RomanMosaicCommand">
      <summary>Segments the image into rectangular or rounded rectangular tiles and fills them with a color chosen randomly from the colors of the tile's pixels. This method is available in the Imaging Pro and above toolkits.</summary>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.RomanMosaicCommand.#ctor">
      <summary>Initializes a new RomanMosaicCommand with default parameters.</summary>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.RomanMosaicCommand.#ctor(System.Int32,System.Int32,System.Int32,Leadtools.ImageProcessing.SpecialEffects.ShadowCommandAngle,System.Int32,Leadtools.RasterColor,Leadtools.ImageProcessing.SpecialEffects.RomanMosaicCommandFlags)">
      <summary>Initializes a new RomanMosaicCommand with explicit parameters.</summary>
      <param name="tileWidth">Value that indicates the width of the tile, in pixels. The meaning of the TileWidth property differs according to the flags that are set in the Flags property. Possible values are:</param>
      <param name="tileHeight">Value that indicates the height of the tile. The meaning of the TileHeight property differs according to the flags that are set in the Flags property. Possible values are:</param>
      <param name="border">Value that indicates the border width, in pixels. The valid range is from 1 to 15.</param>
      <param name="shadowAngle">Value indicates the direction of the light source that produces the shadow. This property is used if the RomanMosaicCommandFlags.ColoredShadow flag or the RomanMosaicCommandFlags.GrayShadow flag is set. Valid values are found in ShadowCommandAngle</param>
      <param name="shadowThresh">Value that determines which pixels will be affected by the shadow. Possible values range from 0 through 255. Pixel values less than the threshold value will be unaffected. This member will be used if the RomanMosaicCommandFlags.ColoredShadow flag or the RomanMosaicCommandFlags.GrayShadow flag is set.</param>
      <param name="color">Represents the value that specifies the fill color to be used in between the tiles.</param>
      <param name="flags">Enumeration contains all flags that are needed by the RomanMosaicCommand. It is indicate the values used to select the shape of the tiles and the type of shadow.</param>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.RomanMosaicCommand.ToString">
      <summary>Overridden. Returns a meaningful name for this method.</summary>
      <returns>string that contains the name of this method.</returns>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.RomanMosaicCommand.Border">
      <summary>Gets or sets the value that indicates the border width, in pixels.</summary>
      <value>Value that indicates the border width, in pixels. The valid range is from 1 to 15.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.RomanMosaicCommand.Color">
      <summary>Gets or sets the value that represents the value which specifies the fill color to be used in between the tiles.</summary>
      <value>Represents the value that specifies the fill color to be used in between the tiles.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.RomanMosaicCommand.Flags">
      <summary>Gets or sets the enumeration that contains all flags that are needed by the RomanMosaicCommand. It is indicate the values used to select the shape of the tiles and the type of shadow.</summary>
      <value>Enumeration contains all flags that are needed by the RomanMosaicCommand. It is indicate the values used to select the shape of the tiles and the type of shadow.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.RomanMosaicCommand.ShadowAngle">
      <summary>Gets or sets the value indicating the direction of the light source that produces the shadow.</summary>
      <value>Value indicating the direction of the light source that produces the shadow. This property is used if the RomanMosaicCommandFlags.ColoredShadow flag or the RomanMosaicCommandFlags.GrayShadow flag is set. Valid values are found in ShadowCommandAngle</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.RomanMosaicCommand.ShadowThresh">
      <summary>Gets or sets the value that determines which pixels will be affected by the shadow.</summary>
      <value>Value that determines which pixels will be affected by the shadow. Possible values range from 0 through 255. Pixel values less than the threshold value will be unaffected. This member will be used if the RomanMosaicCommandFlags.ColoredShadow flag or the RomanMosaicCommandFlags.GrayShadow flag is set.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.RomanMosaicCommand.TileHeight">
      <summary>Gets or sets the value that indicates the height of the tile.</summary>
      <value>Value that indicates the height of the tile. The meaning of the TileHeight property differs according to the flags that are set in the Flags property. Possible values are:</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.RomanMosaicCommand.TileWidth">
      <summary>Gets or sets the value that indicates the width of the tile, in pixels.</summary>
      <value>Value that indicates the width of the tile, in pixels. The meaning of the TileWidth property differs according to the flags that are set in the Flags property. Possible values are:</value>
    </member>
    <member name="T:Leadtools.ImageProcessing.SpecialEffects.ShadowCommand">
      <summary>Adds shadows to the image. This command is available in the Imaging Pro and above toolkits.</summary>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.ShadowCommand.#ctor">
      <summary>Initializes a new ShadowCommand class object with default parameters.</summary>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.ShadowCommand.#ctor(Leadtools.ImageProcessing.SpecialEffects.ShadowCommandAngle,System.Int32,Leadtools.ImageProcessing.SpecialEffects.ShadowCommandType)">
      <summary>Initializes a new ShadowCommand class object with explicit parameters.</summary>
      <param name="angle">Angle value indicating the direction of the light source producing the shadow.</param>
      <param name="threshold">Threshold value used to determine which pixels will be affected . Valid values range from 0 through 255. When Type = ShadowCommandType.ColoredShadow, any component (R, G, or B) of a pixel with a value less than the Threshold value is not affected. When Type = ShadowCommandType.GrayShadow, any pixel where the master channel value is less than the Threshold value is not affected.</param>
      <param name="type">Type of the shadow.</param>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.ShadowCommand.ToString">
      <summary>Overridden. Returns a meaningful name for this command.</summary>
      <returns>String that contains the name of this command.</returns>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.ShadowCommand.Angle">
      <summary>Gets or sets a value indicating the direction of the light source producing the shadow.</summary>
      <value>Angle value indicating the direction of the light source producing the shadow.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.ShadowCommand.Threshold">
      <summary>Gets or sets a threshold value used to determine which pixels will be affected.</summary>
      <value>Threshold value used to determine which pixels will be affected. Valid values range from 0 through 255. When Type = ShadowCommandType.ColoredShadow, any component (R, G, or B) of a pixel with a value less than the Threshold value is not affected. When Type = ShadowCommandType.GrayShadow, any pixel where the master channel value is less than the Threshold value is not affected.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.ShadowCommand.Type">
      <summary>Gets or sets a value that represents the type of the shadow.</summary>
      <value>Type of the shadow.</value>
    </member>
    <member name="T:Leadtools.ImageProcessing.SpecialEffects.SphereCommand">
      <summary>Warps the image around a 3D spherical shape. This command is available in the Imaging Pro and above toolkits.</summary>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.SphereCommand.#ctor">
      <summary>Initializes a new SphereCommand class object with default parameters.</summary>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.SphereCommand.#ctor(System.Int32,Leadtools.LeadPoint,Leadtools.RasterColor,Leadtools.ImageProcessing.SpecialEffects.SphereCommandFlags)">
      <summary>Initializes a new SphereCommand class object with explicit parameters.</summary>
      <param name="value">Amount of stretching where:</param>
      <param name="centerPoint">The center of the sphere.</param>
      <param name="fillColor">Specifies the fill color for any exposed areas.</param>
      <param name="flags">Flags that indicate how to handle exposed areas outside the sphere and inside the sphere.</param>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.SphereCommand.ToString">
      <summary>Overridden. Returns a meaningful name for this command.</summary>
      <returns>String that contains the name of this command.</returns>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.SphereCommand.CenterPoint">
      <summary>Gets or sets a point structure that contains the center of the sphere.</summary>
      <value>Point structure that contains the center of the sphere.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.SphereCommand.FillColor">
      <summary>Gets or sets the fill color for any exposed areas.</summary>
      <value>The fill color for any exposed areas.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.SphereCommand.Flags">
      <summary>Gets or sets a value that indicates how to handle exposed areas outside the sphere and inside the sphere.</summary>
      <value>Value that indicates how to handle exposed areas outside the sphere and inside the sphere.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.SphereCommand.Value">
      <summary>Gets or sets the amount of stretching.</summary>
      <value>Amount of stretching where:</value>
    </member>
    <member name="T:Leadtools.ImageProcessing.SpecialEffects.SwirlCommand">
      <summary>Spins the image according to the rotation angle to produce a swirl pattern. This command is available in the Imaging Pro and above toolkits.</summary>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.SwirlCommand.#ctor">
      <summary>Initializes a new SwirlCommand class object with default parameters.</summary>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.SwirlCommand.#ctor(System.Int32,Leadtools.LeadPoint)">
      <summary>Initializes a new SwirlCommand class object with explicit parameters.</summary>
      <param name="angle">The degree of rotation. This value is in degrees (0_360_720, etc.).</param>
      <param name="centerPoint">The center of the swirl.</param>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.SwirlCommand.ToString">
      <summary>Overridden. Returns a meaningful name for this command.</summary>
      <returns>String that contains the name of this command.</returns>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.SwirlCommand.Angle">
      <summary>Gets or sets the degree of rotation.</summary>
      <value>The degree of rotation. This value is in degrees (0_360_720, etc.).</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.SwirlCommand.CenterPoint">
      <summary>Gets or sets a point structure that contains the center of the swirl.</summary>
      <value>Point structure that contains the center of the swirl.</value>
    </member>
    <member name="T:Leadtools.ImageProcessing.SpecialEffects.TunnelCommand">
      <summary>Places the image inside a tunnel along the Z-axis. This command is available in the Imaging Pro and above toolkits.</summary>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.TunnelCommand.#ctor">
      <summary>Initializes a new TunnelCommand class object with default parameters.</summary>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.TunnelCommand.#ctor(Leadtools.LeadPoint,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,Leadtools.RasterColor,Leadtools.RasterColor,Leadtools.ImageProcessing.SpecialEffects.TunnelCommandFlags)">
      <summary>Initializes a new TunnelCommand class object with explicit parameters.</summary>
      <param name="centerPoint">Contains the point at which the camera or viewer is looking. It may be outside the image borders.</param>
      <param name="zValue">Viewing screen offset on the Z-axis, in pixels. This parameter only accepts positive values.</param>
      <param name="distance">Camera distance from the viewing screen, in pixels.</param>
      <param name="radius">Tunnel radius. This parameter only accepts positive values.</param>
      <param name="repeat">Number of times the image repeats along the Z-axis. If repeat equals -1 the image will be infinitely repeated. Its range starts from -1.</param>
      <param name="rotationOffset">Rotates tunnel around the Z-axis in pixel steps. If TunnelCommandFlags.WidthAxis option is selected then the image width is along the Z-axis and RotationOffset set to the image height is equivalent to a complete cycle. If TunnelCommandFlags.HeightAxis option is set, then the image height is along the Z-axis and RotationOffset set to the image width is equivalent to a complete cycle.</param>
      <param name="stretch">Value that indicates whether to expand or compress the image, and by how much. If Stretch &lt; 100 image will be expanded. If Stretch &gt; 100 the image will be compressed. Use 100 to maintain the image's dimensions. The value of this parameter is internally divided by 100. This parameter only accepts positive values.</param>
      <param name="startBright">Value that indicates the brightness of an external light source at the beginning of the tunnel. Possible values range from 0 to 100. A value of 0 indicates no external light is displayed at the beginning of the tunnel. A value of 100 indicates an external light source with full brightness is displayed.</param>
      <param name="endBright">Value that indicates the brightness of an external light source at the end of the tunnel. Possible values range from 0 to 100. A value of 0 indicates no external light displayed at the end of the tunnel. A value of 100 indicates an external light source with full brightness is displayed on the image.</param>
      <param name="brightLength">Value that indicates how much the brightness changes as you move along the Z axis. This parameter is internally multiplied by 50. This property only accepts positive values.</param>
      <param name="brightColor">Specifies the color of an external light source that shines in the tunnel.</param>
      <param name="fillColor">Specifies the background color.</param>
      <param name="flags">Flag that indicates the background color and which image dimension extends along the Z-axis.</param>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.TunnelCommand.ToString">
      <summary>Overridden. Returns a meaningful name for this command.</summary>
      <returns>String that contains the name of this command.</returns>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.TunnelCommand.BrightColor">
      <summary>Gets or sets the color of an external light source that shines in the tunnel.</summary>
      <value>The color of an external light source that shines in the tunnel.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.TunnelCommand.BrightLength">
      <summary>Gets or sets a value that indicates how much the brightness changes as you move along the Z axis.</summary>
      <value>Value that indicates how much the brightness changes as you move along the Z axis. This property is internally multiplied by 50. This property only accepts positive values.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.TunnelCommand.CenterPoint">
      <summary>Gets or sets a point structure that contains the point at which the camera or viewer is looking.</summary>
      <value>Point structure that contains the point at which the camera or viewer is looking. It may be outside the image borders.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.TunnelCommand.Distance">
      <summary>Gets or sets the camera distance from the viewing screen.</summary>
      <value>Camera distance from the viewing screen, in pixels.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.TunnelCommand.EndBright">
      <summary>Gets or sets a value that indicates the brightness of an external light source at the end of the tunnel.</summary>
      <value>Value that indicates the brightness of an external light source at the end of the tunnel. Possible values range from 0 to 100. A value of 0 indicates no external light displayed at the end of the tunnel. A value of 100 indicates an external light source with full brightness is displayed on the image.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.TunnelCommand.FillColor">
      <summary>Gets or sets the background color.</summary>
      <value>The background color.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.TunnelCommand.Flags">
      <summary>Gets or sets flags that indicate the background color and which image dimension extends along the Z-axis.</summary>
      <value>Flags that indicate the background color and which image dimension extends along the Z-axis.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.TunnelCommand.Radius">
      <summary>Gets or sets the tunnel radius.</summary>
      <value>Tunnel radius. This property only accepts positive values.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.TunnelCommand.Repeat">
      <summary>Gets or sets the number of times the image repeats along the Z-axis.</summary>
      <value>Number of times the image repeats along the Z-axis. If Repeat equals -1 the image will be infinitely repeated. Its range starts at -1.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.TunnelCommand.RotationOffset">
      <summary>Gets or sets a value that rotates the tunnel around the Z-axis in pixel steps.</summary>
      <value>Rotates the tunnel around the Z-axis in pixel steps. If TunnelCommandFlags.WidthAxis option is set then the image width is along the Z-axis and RotationOffset set to the image height is equivalent to a complete cycle. If TunnelCommandFlags.HeightAxis option is set, then the image height is along the Z-axis and RotationOffset set to the image width is equivalent to a complete cycle.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.TunnelCommand.StartBright">
      <summary>Gets or sets a value that indicates the brightness of an external light source at the beginning of the tunnel.</summary>
      <value>Value that indicates the brightness of an external light source at the beginning of the tunnel. Possible values range from 0 to 100. A value of 0 indicates no external light is displayed at the beginning of the tunnel. A value of 100 indicates an external light source with full brightness is displayed.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.TunnelCommand.Stretch">
      <summary>Gets or sets a value that indicates whether to expand or compress the image, and by how much.</summary>
      <value>Value that indicates whether to expand or compress the image, and by how much. If Stretch &lt; 100 image will be expanded. If Stretch &gt; 100 the image will be compressed. Use 100 to maintain the image's dimensions. The value of this property is internally divided by 100. This property only accepts positive values.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.TunnelCommand.ZValue">
      <summary>Gets or sets a value that represents the viewing screen offset on the Z-axis.</summary>
      <value>Viewing screen offset on the Z-axis, in pixels. This property only accepts positive values.</value>
    </member>
    <member name="T:Leadtools.ImageProcessing.SpecialEffects.VignetteCommand">
      <summary>Draws a specified shape and feathers it to the image. This method is available in the Imaging Pro and above toolkits.</summary>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.VignetteCommand.#ctor">
      <summary>Initializes a new VignetteCommand with default parameters.</summary>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.VignetteCommand.#ctor(Leadtools.LeadPoint,System.Int32,System.Int32,System.Int32,System.Int32,Leadtools.RasterColor,Leadtools.ImageProcessing.SpecialEffects.VignetteCommandFlags)">
      <summary>Initializes a new VignetteCommand with explicit parameters.</summary>
      <param name="origin">Center point for all vignette objects (circle, ellipse, rectangle, and square).</param>
      <param name="fading">Represents the percent of feathering in towards or outward from the vignette object. Negative values mean that the feathering will start outside the boundaries of the object and increase toward the object. Positive values mean that the feathering will start on the boundaries of the object and increase away from the object. Possible values range from -100 to 100.</param>
      <param name="fadingRate">Represents the value that indicates the fading rate. This value is used to controlling the fading process. It will be divided by 100 internally. The valid range is from 0 to 100.</param>
      <param name="width">Represents the value that indicates the dimension of the vignette object in pixels.</param>
      <param name="height">Represents the value that indicates the height in pixels of the vignette ellipse or rectangle objects.This property is ignored if the VignetteCommandFlags.Circle or VignetteCommandFlags.Square flag is set.</param>
      <param name="vignetteColor">Represents the value that specifies the vignette object color.</param>
      <param name="flags">Enumeration that specifies how to apply the Vignette effect.</param>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.VignetteCommand.#ctor(Leadtools.LeadPoint,System.Int32,System.Int32,System.Int32,Leadtools.RasterColor,Leadtools.ImageProcessing.SpecialEffects.VignetteCommandFlags)">
      <summary>Initializes a new VignetteCommand with explicit parameters.</summary>
      <param name="origin">Center point for all vignette objects (circle, ellipse, rectangle, and square).</param>
      <param name="fading">Represents the percent of feathering in towards or outward from the vignette object. Negative values mean that the feathering will start outside the boundaries of the object and increase toward the object. Positive values mean that the feathering will start on the boundaries of the object and increase away from the object. Possible values range from -100 to 100.</param>
      <param name="fadingRate">Represents the value that indicates the fading rate. This value is used to controlling the fading process. It will be divided by 100 internally. The valid range is from 0 to 100.</param>
      <param name="width">Represents the value that indicates the dimension of the vignette object in pixels.</param>
      <param name="vignetteColor">Represents the value that specifies the vignette object color.</param>
      <param name="flags">Enumeration that specifies how to apply the Vignette effect.</param>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.VignetteCommand.ToString">
      <summary>Overridden. Returns a meaningful name for this method.</summary>
      <returns>string that contains the name of this method.</returns>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.VignetteCommand.Fading">
      <summary>Gets or sets the value that represents the percent of feathering in towards or outward from the vignette object.</summary>
      <value>Represents the percent of feathering in towards or outward from the vignette object. Negative values mean that the feathering will start outside the boundaries of the object and increase toward the object. Positive values mean that the feathering will start on the boundaries of the object and increase away from the object. Possible values range from -100 to 100.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.VignetteCommand.FadingRate">
      <summary>Gets or sets the value that represents the value which indicates the fading rate.</summary>
      <value>Represents the value that indicates the fading rate. This value is used to controlling the fading process. It will be divided by 100 internally. The valid range is from 0 to 100.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.VignetteCommand.Flags">
      <summary>Gets or sets the enumeration that contains all the flags that are needed by the VignetteCommand. It includes the values used to select the shape of the vignette object and the type of color filling.</summary>
      <value>Enumeration containing all flags that are needed by the VignetteCommand. It includes the values used to select the shape of the vignette object and the type of color filling.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.VignetteCommand.Height">
      <summary>Gets or sets the value that represents the height in pixels of the vignette ellipse or rectangle objects.</summary>
      <value>Represents the value that indicates the height in pixels of the vignette ellipse or rectangle objects.This property is ignored if the VignetteCommandFlags.Circle or VignetteCommandFlags.Square flag is set.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.VignetteCommand.Origin">
      <summary>Gets or sets the center point for all vignette objects (circle, ellipse, rectangle, and square).</summary>
      <value>Center point for all vignette objects (circle, ellipse, rectangle, and square).</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.VignetteCommand.VignetteColor">
      <summary>Gets or sets the value that represents the vignette object color.</summary>
      <value>Represents the value that specifies the vignette object color.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.VignetteCommand.Width">
      <summary>Gets or sets the value that represents the value which indicates the dimension of the vignette object in pixels.</summary>
      <value>Represents the value that indicates the dimension of the vignette object in pixels.</value>
    </member>
    <member name="T:Leadtools.ImageProcessing.SpecialEffects.WaveCommand">
      <summary>Distorts the image with two perpendicular waves at the specified angle and with the specified wave type. This command is available in the Imaging Pro and above toolkits.</summary>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.WaveCommand.#ctor">
      <summary>Initializes a new WaveCommand class object with default parameters.</summary>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.WaveCommand.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,Leadtools.RasterColor,Leadtools.ImageProcessing.SpecialEffects.WaveCommandFlags)">
      <summary>Initializes a new WaveCommand class object with explicit parameters.</summary>
      <param name="amplitude">Wave's magnitude. This parameter only accepts positive values.</param>
      <param name="waveLength">Value that represents the wave length, if theWaveCommandFlags.Period flag is set. Possible values range from 1 - 100 and give the wavelength as a percentage of the image dimensions. If the WaveCommandFlags.Frequency flag is set, this value is the number of repeated waves.</param>
      <param name="angle">Wave's rotation angle in hundredths of degrees. The valid range is from -18000 to 18000 (The value in degrees is angle divided by 100).</param>
      <param name="horizontalFactor">Size of the horizontal wave, given as a percentage. The valid range is from 0 to 100.</param>
      <param name="verticalFactor">Size of the vertical wave, given as a percentage. The valid range is from 0 to 100.</param>
      <param name="fillColor">Specifies the fill color for any exposed areas.</param>
      <param name="flags">Flags that indicate how to handle exposed areas, the type of information in the waveLength parameter and the wave type.</param>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.WaveCommand.ToString">
      <summary>Overridden. Returns a meaningful name for this command.</summary>
      <returns>String that contains the name of this command.</returns>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.WaveCommand.Amplitude">
      <summary>Gets or sets the wave's magnitude.</summary>
      <value>Wave's magnitude. This property only accepts positive values.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.WaveCommand.Angle">
      <summary>Gets or sets the wave's rotation angle in hundredths of degrees.</summary>
      <value>Wave's rotation angle in hundredths of degrees. The valid range is from -18000 to 18000 (The value in degrees is nAngle divided by 100).</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.WaveCommand.FillColor">
      <summary>Gets or sets the fill color for any exposed areas.</summary>
      <value>The fill color for any exposed areas.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.WaveCommand.Flags">
      <summary>Gets or sets flags that indicate how to handle exposed areas, the type of information in the WaveLength property and the wave type.</summary>
      <value>Value that indicates how to handle exposed areas, the type of information in the WaveLength property and the wave type.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.WaveCommand.HorizontalFactor">
      <summary>Gets or sets the size of the horizontal wave.</summary>
      <value>Size of the horizontal wave, given as a percentage. The valid range is from 0 to 100.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.WaveCommand.VerticalFactor">
      <summary>Gets or sets the size of the vertical wave.</summary>
      <value>Size of the vertical wave, given as a percentage. The valid range is from 0 to 100.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.WaveCommand.WaveLength">
      <summary>Gets or sets a value that represents the wave length.</summary>
      <value>Value that represents the wave length, if the WaveCommandFlags.Period flag is set in the Flags property. Possible values range from 1 - 100 and give the wavelength as a percentage of the image dimensions. If the WaveCommandFlags.Frequency flag is set in the Flags property, this value is the number of repeated waves.</value>
    </member>
    <member name="T:Leadtools.ImageProcessing.SpecialEffects.WindCommand">
      <summary>Creates thin lines, directed along the specified angle, on the affected image. This method is available in the Imaging Pro and above toolkits.</summary>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.WindCommand.#ctor">
      <summary>Initializes a new WindCommand class object with default parameters.</summary>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.WindCommand.#ctor(System.Int32,System.Int32,System.Int32)">
      <summary>Initializes a new WindCommand class object with explicit parameters.</summary>
      <param name="dimension">Size, in pixels, of the thin lines used to create the wind effect. This parameter only accepts positive values.</param>
      <param name="angle">Direction of the thin lines used to create the wind effect, in hundredths of a degree. Possible values range form -36000 to 36000. (The value in degrees divided by 100).</param>
      <param name="opacity">Density, of the thin lines used to create the wind effect. The valid range is from 0 to 100.</param>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.WindCommand.ToString">
      <summary>Overridden. Returns a meaningful name for this command.</summary>
      <returns>String that contains the name of this command.</returns>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.WindCommand.Angle">
      <summary>Gets or sets the direction of the thin lines used to create the wind effect, in hundredths of a degree.</summary>
      <value>Direction of the thin lines used to create the wind effect, in hundredths of a degree. Possible values range form -36000 to 36000. (The value in degrees divided by 100).</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.WindCommand.Dimension">
      <summary>Gets or sets the size, in pixels, of the thin lines used to create the wind effect.</summary>
      <value>Size, in pixels, of the thin lines used to create the wind effect. This property only accepts positive values.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.WindCommand.Opacity">
      <summary>Gets or sets the density, of the thin lines used to create the wind effect.</summary>
      <value>Density, of the thin lines used to create the wind effect. The valid range is from 0 to 100.</value>
    </member>
    <member name="T:Leadtools.ImageProcessing.SpecialEffects.ZigZagCommand">
      <summary>Radially distorts the image by creating waves that twist the image around a specified center. This command is available in the Imaging Pro and above toolkits.</summary>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.ZigZagCommand.#ctor">
      <summary>Initializes a new ZigZagCommand class object with default parameters.</summary>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.ZigZagCommand.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,Leadtools.LeadPoint,Leadtools.RasterColor,Leadtools.ImageProcessing.SpecialEffects.ZigZagCommandFlags)">
      <summary>Initializes a new ZigZagCommand class object with explicit parameters.</summary>
      <param name="amplitude">Non-zero value that represents the magnitude of the wave (amount of displacement), if RadialWave is set in the flags parameter. The valid range is from 1 - 100.</param>
      <param name="attenuation">Attenuation value. The attenuation value indicates how rapidly the wave amplitude decays as the wave travels along the radial line. The valid range is from 0 - 1000.</param>
      <param name="frequency">Number of times the waves repeat along the radial line.</param>
      <param name="phase">Wave phase shift, in hundredths of degrees. The valid range is from -36000 to 36000 (The value in degrees is phase divided by 100).</param>
      <param name="centerPoint">Point that contains the center of the zigzag wave.</param>
      <param name="fillColor">The RasterColor value that specifies the fill color for any exposed areas.</param>
      <param name="flags">Flags that indicate how to handle exposed areas, and the wave radiation type.</param>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.ZigZagCommand.ToString">
      <summary>Overridden. Returns a meaningful name for this command.</summary>
      <returns>String that contains the name of this command.</returns>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.ZigZagCommand.Amplitude">
      <summary>Gets or sets the value that indicates the non-zero value that represents the magnitude of the wave (amount of displacement) on which the filter is applied, if ZigZagCommandFlags.RadialWave is set in the flags parameter.</summary>
      <value>Value that indicates the non-zero value that represents the magnitude of the wave (amount of displacement) on which the filter is applied, if ZigZagCommandFlags.RadialWave is set in the flags parameter. The valid range is from 1 - 100.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.ZigZagCommand.Attenuation">
      <summary>Gets or sets the value that indicates the attenuation value that indicates how rapidly the wave amplitude decays as the wave travels along the radial line on which the filter is applied.</summary>
      <value>Value that indicates the attenuation value that indicates how rapidly the wave amplitude decays as the wave travels along the radial line on which the filter is applied. The valid range is from 0 - 1000.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.ZigZagCommand.CenterPoint">
      <summary>Gets or sets the value that indicates the center of the zigzag wave on which the filter is applied.</summary>
      <value>Value that indicates the center of the zigzag wave on which the filter is applied.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.ZigZagCommand.FillColor">
      <summary>Gets or sets the value that indicates the RasterColor value that specifies the fill color for any exposed areas on which the filter is applied.</summary>
      <value>Value that indicates the RasterColor value that specifies the fill color for any exposed areas on which the filter is applied.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.ZigZagCommand.Flags">
      <summary>Gets or sets flags that indicate how to handle exposed areas, and the wave radiation type.</summary>
      <value>Flags that indicate how to handle exposed areas, and the wave radiation type.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.ZigZagCommand.Frequency">
      <summary>Gets or sets the value that indicates number of times the waves repeat along the radial line on which the filter is applied.</summary>
      <value>Value that indicates number of times the waves repeat along the radial line on which the filter is applied.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.ZigZagCommand.Phase">
      <summary>Gets or sets the value that indicates wave phase shift, in hundredths of degrees on which the filter is applied.</summary>
      <value>Value that indicates the wave phase shift, in hundredths of degrees on which the filter is applied. The valid range is from -36000 to 36000 (The value in degrees is phase divided by 100).</value>
    </member>
    <member name="T:Leadtools.ImageProcessing.SpecialEffects.ZoomBlurCommand">
      <summary>Blurs the image along radial lines starting from a specific center point. This command is available in the Imaging Pro and above toolkits.</summary>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.ZoomBlurCommand.#ctor">
      <summary>Initializes a new ZoomBlurCommand class object with default parameters.</summary>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.ZoomBlurCommand.#ctor(System.Int32,System.Int32,Leadtools.LeadPoint)">
      <summary>Initializes a new ZoomBlurCommand class object with explicit parameters.</summary>
      <param name="dimension">A value that represents the amount of the blur. Only positive values are accepted.</param>
      <param name="stress">A value that represents the amount of the blur intensity. Only positive values are accepted.</param>
      <param name="centerPoint">The center point from which to blur the image.</param>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.ZoomBlurCommand.ToString">
      <summary>Overridden. Returns a meaningful name for this command.</summary>
      <returns>String that contains the name of this command.</returns>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.ZoomBlurCommand.CenterPoint">
      <summary>Gets or sets a point structure that contains the center point from which to blur the image.</summary>
      <value>The center point from which to blur the image.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.ZoomBlurCommand.Dimension">
      <summary>Gets or sets a value that represents the amount of the blur.</summary>
      <value>A value that represents the amount of the blur. Only positive values are accepted.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.ZoomBlurCommand.Stress">
      <summary>Gets or sets a value that represents the amount of the blur intensity.</summary>
      <value>A value that represents the amount of the blur intensity. Only positive values are accepted.</value>
    </member>
    <member name="T:Leadtools.ImageProcessing.SpecialEffects.ZoomWaveCommand">
      <summary>Distorts the image with a wave zoomed from the specified center. This command is available in the Imaging Pro and above toolkits.</summary>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.ZoomWaveCommand.#ctor">
      <summary>Initializes a new ZoomWaveCommand class object with default parameters.</summary>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.ZoomWaveCommand.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,Leadtools.LeadPoint,Leadtools.RasterColor,Leadtools.ImageProcessing.SpecialEffects.ZoomWaveCommandType)">
      <summary>Initializes a new ZoomWaveCommand class object with explicit parameters.</summary>
      <param name="amplitude">Zoom wave magnitude.</param>
      <param name="frequency">The number of repeated waves along the radial line. This parameter only accepts positive values.</param>
      <param name="phase">Wave phase shift. The valid range is from -36000 to 36000. The real value is divided by 100.</param>
      <param name="zoomFactor">The percentage the wave grows as it moves from the image center. The valid range is from 0 to 100.</param>
      <param name="centerPoint">Center point from which the wave is zoomed.</param>
      <param name="fillColor">RasterColor object that specifies the fill color for any exposed areas.</param>
      <param name="type">Flag that indicates how to handle exposed areas.</param>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.ZoomWaveCommand.ToString">
      <summary>Overridden. Returns a meaningful name for this command.</summary>
      <returns>String that contains the name of this command.</returns>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.ZoomWaveCommand.Amplitude">
      <summary>Gets or sets the zoom wave magnitude.</summary>
      <value>Zoom wave magnitude.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.ZoomWaveCommand.CenterPoint">
      <summary>Center point from which the wave is zoomed.</summary>
      <value>Center point from which the wave is zoomed.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.ZoomWaveCommand.FillColor">
      <summary>Gets or sets the RasterColor object that specifies the fill color for any exposed areas.</summary>
      <value>RasterColor object that specifies the fill color for any exposed areas.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.ZoomWaveCommand.Frequency">
      <summary>Gets or sets the number of repeated waves along the radial line.</summary>
      <value>The number of repeated waves along the radial line. This property only accepts positive values.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.ZoomWaveCommand.Phase">
      <summary>Gets or sets the wave phase shift.</summary>
      <value>Wave phase shift. The valid range is from -36000 to 36000. The real value is divided by 100.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.ZoomWaveCommand.Type">
      <summary>Gets or sets a value that indicates how to handle exposed areas.</summary>
      <value>Value that indicates how to handle exposed areas.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.ZoomWaveCommand.ZoomFactor">
      <summary>Gets or sets the percentage the wave grows as it moves from the image center.</summary>
      <value>The percentage the wave grows as it moves from the image center. The valid range is from 0 to 100.</value>
    </member>
    <member name="T:Leadtools.ImageProcessing.SpecialEffects.AgingCommandFlags">
      <summary>Flags that indicate the distortion type and the distortion color.This enumeration has a System.FlagsAttribute attribute that allows a bitwise combination of its member values.</summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.AgingCommandFlags.AddNothing">
      <summary>Do not add any distortion type. In this case, the image will be changed by random changes in the color intensity. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.AgingCommandFlags.DustInverse">
      <summary>Use the pixel's color inverse as the dust color. If this flag is set, DustColor will be ignored. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.AgingCommandFlags.PitsInverse">
      <summary>Use the pixel's color inverse as the color of the pits. If this flag is set, PitsColor will be ignored. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.AgingCommandFlags.ScratchInverse">
      <summary>Use the pixel's color inverse as the scratch line color. If this flag is set, ScratchColor will be ignored. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.AgingCommandFlags.AddVerticalScratch">
      <summary>Add vertical scratch lines. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.AgingCommandFlags.AddHorizontalScratch">
      <summary>Add horizontal scratch lines. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.AgingCommandFlags.AddDust">
      <summary>Add dust. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.AgingCommandFlags.AddPits">
      <summary>Add pits. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.AgingCommandFlags.ScratchColor">
      <summary>Use the value in ScratchColor as the scratch line color. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.AgingCommandFlags.DustColor">
      <summary>Use the value in DustColor as the dust color. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.AgingCommandFlags.PitsColor">
      <summary>Use the value in PitsColor as the color of the pits. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="T:Leadtools.ImageProcessing.SpecialEffects.BendCommandFlags">
      <summary>Flags that indicate how to handle peripherally exposed areas, how to handle centrally exposed areas and the type of bending.This enumeration has a System.FlagsAttribute attribute that allows a bitwise combination of its member values.</summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.BendCommandFlags.Color">
      <summary>Fill any exposed areas with the fill color. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.BendCommandFlags.Normal">
      <summary>Stretch the image along the vertical and horizontal planes. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.BendCommandFlags.Rotate">
      <summary>Rotate the image inside the arc pattern. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.BendCommandFlags.Repeat">
      <summary>Stretch the image edges to fill the exposed area. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.BendCommandFlags.NoChange">
      <summary>Leave the exposed area as is, without changing it. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.BendCommandFlags.WithoutRotate">
      <summary>Fill the exposed center as you would any other exposed area. This is determined by setting the Color, Repeat or NoChange flags. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.BendCommandFlags.Horizontal">
      <summary>Stretch the image along the horizontal plane. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.BendCommandFlags.Vertical">
      <summary>Stretch the image along the vertical plane. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="T:Leadtools.ImageProcessing.SpecialEffects.BricksTextureCommandFlags">
      <summary>Flags that determine the type of brick edge to use, and which mortar style to use.</summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.BricksTextureCommandFlags.None">
      <summary>No flags. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.BricksTextureCommandFlags.SolidEdges">
      <summary>Solid edges. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.BricksTextureCommandFlags.TransparentMortar">
      <summary>Transparent Mortars. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.BricksTextureCommandFlags.SmoothedOutEdges">
      <summary>Edges faded from out to in. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.BricksTextureCommandFlags.SmoothedInEdges">
      <summary>Edges faded from in to out. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.BricksTextureCommandFlags.ColoredMortar">
      <summary>Use solid color BricksTextureCommand.MortarColor to draw the Mortar. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="T:Leadtools.ImageProcessing.SpecialEffects.CanvasCommandFlags">
      <summary>Flags that identify how to distribute the canvas image with respect to the image and how to handle resizing.</summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.CanvasCommandFlags.ResizeNormal">
      <summary>Resize normally. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.CanvasCommandFlags.TileFit">
      <summary>Fit the canvas image so it has the same dimensions as the image that is being applied to the canvas, without tiling. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.CanvasCommandFlags.ResizeResample">
      <summary>Use linear interpolation and averaging to produce a higher quality image. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.CanvasCommandFlags.ResizeBicubic">
      <summary>Use bicubic interpolation and averaging to produce a higher quality image. This is slower than ResizeResample. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.CanvasCommandFlags.TileShift">
      <summary>Shift the canvas image by the amount specified in TilesOffset. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="T:Leadtools.ImageProcessing.SpecialEffects.CloudsCommandType">
      <summary>This enumeration contains all the flags that are needed by the CloudsCommand and specifies how to apply the clouds effect to an image.</summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.CloudsCommandType.Pure">
      <summary>Create a pure cloud texture. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.CloudsCommandType.Difference">
      <summary>Apply the difference between the created cloud texture and the original image. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.CloudsCommandType.Opacity">
      <summary>Combine the cloud colors with the colors of the original image by using the Opacity value. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="T:Leadtools.ImageProcessing.SpecialEffects.ColoredBallsCommandFlags">
      <summary>Flags that indicate the background color , shade (or gradient) type, ball type and ball color type.This enumeration has a System.FlagsAttribute attribute that allows a bitwise combination of its member values.</summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.ColoredBallsCommandFlags.None">
      <summary>No flags. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.ColoredBallsCommandFlags.ShadingSingle">
      <summary>Fill the background with the color specified in the ColoredBallsCommand.BackGroundColor property only. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.ColoredBallsCommandFlags.ShadingLeftRight">
      <summary>Draw shading as vertical lines that move from left to right. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.ColoredBallsCommandFlags.ShadingTopBottom">
      <summary>Draw shading as horizontal lines that move from top to bottom. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.ColoredBallsCommandFlags.ShadingCircular">
      <summary>Draw shading as concentric circles. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.ColoredBallsCommandFlags.ShadingElliptical">
      <summary>Draw shading as concentric ellipses. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.ColoredBallsCommandFlags.Sticker">
      <summary>Balls will overlap like stickers. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.ColoredBallsCommandFlags.Ball">
      <summary>Balls will adjust like bubbles. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.ColoredBallsCommandFlags.BackGroundImage">
      <summary>The background is the same as the image. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.ColoredBallsCommandFlags.BackGroundColor">
      <summary>The background is the color specified in the ColoredBallsCommand.BackGroundColor property. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.ColoredBallsCommandFlags.BallsColorMask">
      <summary>The ball colors will block the image colors. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.ColoredBallsCommandFlags.BallsColorOpacity">
      <summary>Use the opacity value when combining image colors with ball colors. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="T:Leadtools.ImageProcessing.SpecialEffects.ColoredPencilExtendedCommandFlags">
      <summary>This enumeration specifies the different types of coloring methods.</summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.ColoredPencilExtendedCommandFlags.Artistic">
      <summary>Use artistic coloring, where no specific direction dominates the entire image. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.ColoredPencilExtendedCommandFlags.Directional">
      <summary>Use the direction specified by the Angle value when coloring the image. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.ColoredPencilExtendedCommandFlags.CombineOriginal">
      <summary>Combine the resulting image with the original one. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="T:Leadtools.ImageProcessing.SpecialEffects.CylinderCommandType">
      <summary>A value that indicates the cylinder shape.</summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.CylinderCommandType.Horizontal">
      <summary>. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.CylinderCommandType.Vertical">
      <summary>. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="T:Leadtools.ImageProcessing.SpecialEffects.DiceEffectCommandFlags">
      <summary>This enumeration indicates how to apply the Dice effect to an image.</summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.DiceEffectCommandFlags.None">
      <summary>No Flags selected. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.DiceEffectCommandFlags.Border">
      <summary>Draw borders around the dice blocks. The border color is contained in the BorderColor property or the borderColor parameter of the Constructor. Each block will draw the border on the inside of the edges. The border is 1 pixel wide. In places with adjacent blocks, the border will be 2 pixels wide because each block has a 1-pixel border. If the ResizeImage flag is not set and the edge blocks have a different size than the inner blocks, the border will not be drawn for the right and the bottom edges. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.DiceEffectCommandFlags.Size">
      <summary>XBlock and YBlock properties (or the xblock and yblock parameters of the Constructor) contain the width and height of each block, in pixels. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.DiceEffectCommandFlags.Count">
      <summary>XBlock and YBlock properties (or the xblock and yblock parameters of the Constructor) contain the number of blocks per row and per column. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.DiceEffectCommandFlags.ResizeImage">
      <summary>If this flag is set then the image will be resized to be sure that all blocks have equal size. If this flag is not set then the edge blocks might have a different size than the inner blocks. If the edge blocks have a different size, they will be manipulated differently. For more information refer to the Remarks section of the DiceEffectCommand . </summary>
      <platforms>NET</platforms>
    </member>
    <member name="T:Leadtools.ImageProcessing.SpecialEffects.DrawStarCommandFlags">
      <summary>Flags that indicate the direction of the rays.</summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.DrawStarCommandFlags.Inside">
      <summary>The rays are directed toward the center of the star. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.DrawStarCommandFlags.Outside">
      <summary>The rays are directed out from the center of the star. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.DrawStarCommandFlags.Inner">
      <summary>The rays fill the star outward from the center. This flag can only be used with Outside. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="T:Leadtools.ImageProcessing.SpecialEffects.FreeHandShearCommandFlags">
      <summary>Flags that indicate how to handle exposed areas, and the direction of the shear wave.</summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.FreeHandShearCommandFlags.Color">
      <summary>Fill any exposed areas with FreeHandShearCommand.FillColor. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.FreeHandShearCommandFlags.Horizontal">
      <summary>Apply the shear wave horizontally. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.FreeHandShearCommandFlags.Repeat">
      <summary>Stretch the image edges to fill the exposed area. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.FreeHandShearCommandFlags.NoChange">
      <summary>Leave the exposed area as is, without changing it. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.FreeHandShearCommandFlags.Vertical">
      <summary>Apply the shear wave vertically. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="T:Leadtools.ImageProcessing.SpecialEffects.FreeHandWaveCommandFlags">
      <summary>Flags that indicate how to handle exposed areas and the type of information contained in WaveLength property or waveLength parameter.</summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.FreeHandWaveCommandFlags.Color">
      <summary>Fill any exposed areas with FreeHandWaveCommand.FillColor. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.FreeHandWaveCommandFlags.Period">
      <summary>The value of WaveLength property or the waveLength parameter is a wave length given as a percent of the image dimensions. If this flag is used, the valid range for the wavelength value is from 0 to 100. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.FreeHandWaveCommandFlags.Repeat">
      <summary>Stretch the image edges to fill the exposed area. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.FreeHandWaveCommandFlags.NoChange">
      <summary>Leave the exposed area as is, without changing it. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.FreeHandWaveCommandFlags.Frequency">
      <summary>The value in the WaveLength property or the waveLength parameter is the frequency, or the number of times the wave repeats. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="T:Leadtools.ImageProcessing.SpecialEffects.FreePlaneBendCommandFlags">
      <summary>Flags that indicate how to handle exposed areas and the plane along which to stretch the pixels.This enumeration has a System.FlagsAttribute attribute that allows a bitwise combination of its member values.</summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.FreePlaneBendCommandFlags.Color">
      <summary>Fill any exposed areas with the fill color. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.FreePlaneBendCommandFlags.Repeat">
      <summary>Stretch the image edges to fill the exposed area. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.FreePlaneBendCommandFlags.NoChange">
      <summary>Leave the exposed area as is, without changing it. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.FreePlaneBendCommandFlags.Horizontal">
      <summary>Stretch the pixels along the vertical plane. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.FreePlaneBendCommandFlags.Vertical">
      <summary>Stretch the pixels along the horizontal plane. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.FreePlaneBendCommandFlags.HorizontalVertical">
      <summary>Stretch the pixels along the horizontal and vertical plane. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="T:Leadtools.ImageProcessing.SpecialEffects.FreeRadialBendCommandFlags">
      <summary>Flags that indicate how to handle peripherally exposed areas and areas exposed inside the surface.This enumeration has a System.FlagsAttribute attribute that allows a bitwise combination of its member values.</summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.FreeRadialBendCommandFlags.Color">
      <summary>Fill any exposed areas with the fill color. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.FreeRadialBendCommandFlags.Rotate">
      <summary>Rotate the image inside the surface pattern. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.FreeRadialBendCommandFlags.Repeat">
      <summary>Stretch the image edges to fill the exposed area. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.FreeRadialBendCommandFlags.NoChange">
      <summary>Leave the exposed area as is, without changing it. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.FreeRadialBendCommandFlags.WithoutRotate">
      <summary>Fill the exposed center the same way the peripherally exposed areas are filled. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="T:Leadtools.ImageProcessing.SpecialEffects.FunctionalLightCommandFlags">
      <summary>Enumeration used to determine which function will be applied to the image, FreeHandLight, Free Light, or Trigonometry Light.</summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.FunctionalLightCommandFlags.None">
      <summary>No Flags selected. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.FunctionalLightCommandFlags.LinearInner">
      <summary>The light will be concentrated at the center and will decrease outwards. The center can be found in the Origin property or the origin parameter. This flag is valid only if LinearQuadratic is also set. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.FunctionalLightCommandFlags.LinearOuter">
      <summary>The light will be concentrated at the far points from the center and will decrease inwards towards the center. The center can be found in the Origin property or the origin parameter. This flag is valid only if LinearQuadratic is also set. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.FunctionalLightCommandFlags.QuadraticInner">
      <summary>The light will be concentrated at the center and will decrease outwards. The center can be found in the Origin property or the origin parameter. This flag is valid only if LinearQuadratic is also set. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.FunctionalLightCommandFlags.QuadraticOuter">
      <summary>The light will be concentrated at the far points from the center and will decrease inwards towards the center. The center can be found in the Origin property or the origin parameter. This flag is valid only if LinearQuadratic is also set. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.FunctionalLightCommandFlags.Unidirection">
      <summary>A sine or cosine function will generate the light as lines.</summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.FunctionalLightCommandFlags.Circles">
      <summary>Sine or cosine function will generate the light as circles around the center. The center can be found in the Origin property, or the origin parameter of the Constructor. This flag is valid only if Trigonometry is also set. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.FunctionalLightCommandFlags.Addition">
      <summary>The amplitude values are multiplied with the results of the selected function (sine, cosine, freehand). The results are then added to the pixel values of the equivalent channel. These functions as well as the real buffer values are from -1 to 1. This flag is valid only if Trigonometry or Freehand are also set. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.FunctionalLightCommandFlags.Multiply">
      <summary>Multiply the color factor specified by the RedAmplitude property of the FunctionalLightCommand class, or the redAmplitude parameter of the Constructor, with the results of the selected function (sine, cosine, freehand). The results are multiplied with every channel value. This flag is valid only if Trigonometry or Freehand are also set. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.FunctionalLightCommandFlags.LinearQuadratic">
      <summary>If this flag is set, the light will be computed according to the distance from the center, which is in the Origin property or the origin parameter in the Constructor of the FunctionalLightCommand class. The brightness increase for every pixel is proportional to the distance to the effect's center. If this flag is set, do not set Trigonometry or Freehand. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.FunctionalLightCommandFlags.Trigonometry">
      <summary>If this flag is set then the light will be generated by a sine or cosine function. If this is set, the frequency, angle and origin information are used to compute the light. If this flag is set, do not set LinearQuadratic or Freehand. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.FunctionalLightCommandFlags.Freehand">
      <summary>If this flag is set, the user will pass the light shape in the Buffer property of the FunctionalLightCommand class or the buffer parameter of the Constructor for the FunctionalLightCommand class. If this flag is set, the angle and buffer information will be used. The Angle property, or angle parameter, will determine the angle of the light lines compared to the X axis. If this flag is set, do not set LinearQuadratic or Trigonometry. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="T:Leadtools.ImageProcessing.SpecialEffects.GlassEffectCommandFlags">
      <summary>Enumeration that indicates what type of data is in the CellWidth and CellHeight properties or the cellWidth and cellHeight parameters.This enumeration has a System.FlagsAttribute attribute that allows a bitwise combination of its member values.</summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.GlassEffectCommandFlags.None">
      <summary>Reserved. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.GlassEffectCommandFlags.WidthFrequency">
      <summary>The CellWidth property or cellWidth parameter is the number of cells along the width of the image. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.GlassEffectCommandFlags.WidthPeriod">
      <summary>The CellWidth property or the cellWidth parameter is the width of the cell in pixels. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.GlassEffectCommandFlags.HeightFrequency">
      <summary>The CellHeight property or the cellHeight parameter is the number of cells along the height of the image. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.GlassEffectCommandFlags.HeightPeriod">
      <summary>The CellHeight property or the cellHeight parameter is the height of the cell in pixels. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="T:Leadtools.ImageProcessing.SpecialEffects.LensFlareCommandType">
      <summary>Enumeration that indicates the lens type</summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.LensFlareCommandType.Type1">
      <summary>Standard lens. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.LensFlareCommandType.Type2">
      <summary>Moderate wide-angle lens. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.LensFlareCommandType.Type3">
      <summary>Moderate telephoto lens. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="T:Leadtools.ImageProcessing.SpecialEffects.LightCommandType">
      <summary>Enumeration that determines the light source type.</summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.LightCommandType.Spot">
      <summary>The light will appear as a spotlight, based on width, height, angle and edge values. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.LightCommandType.Directional">
      <summary>The light will be applied to the whole image. If this flag is used, the width, height, angle and edge values will be ignored. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="T:Leadtools.ImageProcessing.SpecialEffects.MosaicTilesCommandFlags">
      <summary>This enumeration contains all flags that are needed by the MosaicTilesCommand. It indicates whether to use arc-shaped or rectangular-shaped tiles, and what type of shadowing to use, if any.</summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.MosaicTilesCommandFlags.Cartesian">
      <summary>Draws rectangular tiles using Cartesian coordinates. If this flag is used, the TileWidth property will contain the tile width in pixels, and the TileHeight property will contain the tile height in pixels. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.MosaicTilesCommandFlags.ShadowFlat">
      <summary>Do not apply a shadow. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.MosaicTilesCommandFlags.Polar">
      <summary>Draw arc-shaped tiles using polar coordinates. If this flag is used, the TileWidth property will contain the angular component of the tile, in degrees, and the TileHeight property will contain the radial component of the tile in pixels. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.MosaicTilesCommandFlags.ShadowRGB">
      <summary>Apply colored shadows. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.MosaicTilesCommandFlags.ShadowGray">
      <summary>Apply grayscale shadows. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="T:Leadtools.ImageProcessing.SpecialEffects.NoiseLayoutType">
      <summary>Flags that indicate how to apply the effect, and which layout pattern to use for the noise.This enumeration has a System.FlagsAttribute attribute that allows a bitwise combination of its member values.</summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.NoiseLayoutType.PF_Circle">
      <summary>Lay out the noise in concentric circles. Set the center for the circle using xCircle and yCircle. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.NoiseLayoutType.PF_Pure">
      <summary>Produce noise as a new image. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.NoiseLayoutType.PF_Combine">
      <summary>Combine the noise and the image pixels using the Opacity value. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.NoiseLayoutType.PF_Difference">
      <summary>Apply the difference between the noise and the image pixels. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.NoiseLayoutType.PF_Line">
      <summary>Lay out the noise in lines at a 45 degree angle. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.NoiseLayoutType.PF_Random">
      <summary>Lay out the noise randomly. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="T:Leadtools.ImageProcessing.SpecialEffects.PerspectiveCommandType">
      <summary>This enumeration will contains all types needed to indicate which background is selected.</summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.PerspectiveCommandType.Image">
      <summary>Use the same image as background. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.PerspectiveCommandType.Color">
      <summary>Fill the background by PerspectiveCommand.FillColor property only. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="T:Leadtools.ImageProcessing.SpecialEffects.PixelateCommandFlags">
      <summary>Enumerated values that indicate the values used to fill the cells, the shape of the cells, and what type of data is in the CellWidth and CellHeight properties of PixelateCommand class or the cellWidth and cellHeight parameters of the Constructor of the PixelateCommand class .</summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.PixelateCommandFlags.Maximum">
      <summary>Fill the cell with its maximum pixel value. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.PixelateCommandFlags.Minimum">
      <summary>Fill the cell with its minimum pixel value. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.PixelateCommandFlags.Average">
      <summary>Fill the cell with its average pixel value. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.PixelateCommandFlags.Rectangle">
      <summary>Divide the image into rectangular cells. If this flag used, the CellWidth property of the PixelateCommand class or the cellWidth parameter of the PixelateCommand Constructor contains the cell width in pixels or the number of cells across the width of the image. The CellHeight property of PixelateCommand class or the celHeight parameter of the PixelateCommand Constructor contains the cell height in pixels or the number of cells across the height of the image. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.PixelateCommandFlags.Radial">
      <summary>Divide the image into circular cells, centered around the center point. If this flag is used, the CellWidth property of the PixelateCommand class (or the cellWidth parameter of the Constructor) contains the angular component of the cell, and the CellHeight property of the PixelateCommand class (or the cellHeight parameter of the Constructor) contains the radial component of the cell. Please note that the Radial flag must be OR-ed with the WidthPeriod flag or the WidthFrequency flag. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.PixelateCommandFlags.WidthFrequency">
      <summary>Indicates the number of cells along the width of the image if rectangular cells are used. If circular cells are used, this indicates the number of cells present around the center of the circle. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.PixelateCommandFlags.WidthPeriod">
      <summary>Indicates the width, in pixels of a cell, if rectangular cells are used. If circular cells are used, this indicates the number of degrees in each cell around the center point. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.PixelateCommandFlags.HeightFrequency">
      <summary>Indicates the number of cells along the height of the image if rectangular cells are used. If circular cells are used, this indicates the number of cells present along the radius of the circle. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.PixelateCommandFlags.HeightPeriod">
      <summary>Indicates the height, in pixels of a cell, if rectangular cells are used. If circular cells are used, this indicates the radial length of each cell along the radius. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="T:Leadtools.ImageProcessing.SpecialEffects.PlaneCommandFlags">
      <summary>Enumeration that indicates the background color and the planes to be shown. You can use a bit wise OR ( &amp;#166; ) to specify one flag from each group.This enumeration has a System.FlagsAttribute attribute that allows a bitwise combination of its member values.</summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.PlaneCommandFlags.None">
      <summary>(0x0000) No change. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.PlaneCommandFlags.Color">
      <summary>(0x0001) Use the FillColor as a background color. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.PlaneCommandFlags.NoChange">
      <summary>(0x0002) Use the image itself as a background. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.PlaneCommandFlags.Left">
      <summary>(0x0010) The plane will be displayed to the left of the Z-axis. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.PlaneCommandFlags.Right">
      <summary>(0x0020) The plane will be displayed to the right of the Z-axis. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.PlaneCommandFlags.Up">
      <summary>(0x0040) The plane will be displayed above the Z-axis. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.PlaneCommandFlags.Down">
      <summary>(0x0080) The plane will be displayed below the Z-axis. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="T:Leadtools.ImageProcessing.SpecialEffects.PlasmaCommandFlags">
      <summary>Enumeration that indicates the type of plasma effect, and the color pattern to use.</summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.PlasmaCommandFlags.Hue">
      <summary>Use the first predefined color pattern. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.PlasmaCommandFlags.Vertical">
      <summary>Create vertical lines of plasma. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.PlasmaCommandFlags.Horizontal">
      <summary>Create horizontal lines of plasma. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.PlasmaCommandFlags.Diagonal">
      <summary>Create diagonal lines of plasma. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.PlasmaCommandFlags.Cross">
      <summary>Create crossed lines of plasma. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.PlasmaCommandFlags.Circular">
      <summary>Create circles of plasma. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.PlasmaCommandFlags.Random1">
      <summary>Create randomly shaped plasma. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.PlasmaCommandFlags.Random2">
      <summary>Create a different type of randomly shaped plasma. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.PlasmaCommandFlags.Rgb1">
      <summary>Use the second predefined color pattern. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.PlasmaCommandFlags.Rgb2">
      <summary>Use the third predefined color pattern. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.PlasmaCommandFlags.CustomColor">
      <summary>Use the frequency properties (RedFrequency, GreenFrequency, BlueFrequency) of the PlasmaCommand class to generate user-defined plasma colors. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="T:Leadtools.ImageProcessing.SpecialEffects.PointillistCommandFlags">
      <summary>Flags that indicate the background color and dots type.This enumeration has a System.FlagsAttribute attribute that allows a bitwise combination of its member values.</summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.PointillistCommandFlags.None">
      <summary>No flags. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.PointillistCommandFlags.BackGroundImage">
      <summary>Use the same image as background. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.PointillistCommandFlags.BackGroundColor">
      <summary>Fill the background by PointillistCommand.FillColor property only. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.PointillistCommandFlags.Sticker">
      <summary>Dots will block each others like stickers. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.PointillistCommandFlags.Point">
      <summary>Dots will interleave like bubbles. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="T:Leadtools.ImageProcessing.SpecialEffects.PolarCommandFlags">
      <summary>This enumeration indicates how to handle exposed areas and the type of conversion.</summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.PolarCommandFlags.CartToPolar">
      <summary>Convert the image from Cartesian (rectangular) coordinates to polar coordinates. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.PolarCommandFlags.Color">
      <summary>Fill any exposed areas with the color stored in the FillColor property of the PolarCommand class, or the fillColor parameter if you are using the appropriate Constructor). </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.PolarCommandFlags.Repeat">
      <summary>Stretch the image edges to fill the exposed area. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.PolarCommandFlags.NoChange">
      <summary>Leave the exposed area as is, without changing it. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.PolarCommandFlags.PolarToCart">
      <summary>Convert the image from polar coordinates to Cartesian (rectangular) coordinates. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="T:Leadtools.ImageProcessing.SpecialEffects.PunchCommandFlags">
      <summary>Enumeration that indicates how to handle exposed areas, both centrally and peripherally.</summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.PunchCommandFlags.Color">
      <summary>Fill any exposed areas with the color stored in the FillColor property of the PunchCommand class (or the fillColor parameter of the appropriate Constructor). </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.PunchCommandFlags.Rotate">
      <summary>Rotate the image inside the pinch pattern. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.PunchCommandFlags.Repeat">
      <summary>Stretch the image edges to fill the exposed area. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.PunchCommandFlags.NoChange">
      <summary>Leave the exposed area as is, without changing it. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.PunchCommandFlags.WithoutRotate">
      <summary>Fill the exposed center the same way the peripherally exposed areas are filled. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="T:Leadtools.ImageProcessing.SpecialEffects.PuzzleEffectCommandFlags">
      <summary>This enumeration indicates how to apply the puzzle effect to an image.</summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.PuzzleEffectCommandFlags.None">
      <summary>No Flags selected. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.PuzzleEffectCommandFlags.Border">
      <summary>Draw borders around the puzzle blocks. Use the BorderColor property of the PuzzleEffectCommand class, or the borderColor parameter if you are using the appropriate Constructor, to set the border color. If the Resize flag is not set and the edge blocks have a different size than the inner blocks, the border will not be drawn for the right and the bottom edges. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.PuzzleEffectCommandFlags.Shuffle">
      <summary>Shuffle the blocks around, controlling the randomization process by the Randomize property of the PuzzleEffectCommand class, or the randomize parameter of the appropriate Constructor. If this flag is not set, the blocks will stay in their original position. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.PuzzleEffectCommandFlags.Size">
      <summary>Apply the puzzle effect using the XBlock and YBlock properties of the PuzzleEffectCommand class, or the xblock and yblock parameters if you are using the appropriate Constructor, as the width and height of each block, in pixels. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.PuzzleEffectCommandFlags.Count">
      <summary>Apply the puzzle effect using the XBlock and YBlock properties of the PuzzleEffectCommand class, or the xblock and yblock parameters if you are using the appropriate Constructor, as the number of blocks per row and per column. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.PuzzleEffectCommandFlags.Resize">
      <summary>Resize the image to be sure that all blocks have equal size. If this flag is not set then the remainder of the image (edge blocks) will be manipulated differently than the inner blocks. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="T:Leadtools.ImageProcessing.SpecialEffects.RadialWaveCommandFlags">
      <summary>Enumeration that indicates how to handle exposed areas, the type of information in the WaveLength property or waveLength parameter if you are using the appropriate Constructor, and the wave type.</summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.RadialWaveCommandFlags.Color">
      <summary>Fill any exposed areas with the RadialWaveCommand.FillColor, or the fillColor parameter if you are using the appropriate Constructor. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.RadialWaveCommandFlags.Period">
      <summary>The value of the RadialWaveCommand.WaveLength property, or the waveLength parameter if you are using the appropriate Constructor, is a wave length given as a percent of the image dimensions. If this flag is used, the valid range is from 0 to 100. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.RadialWaveCommandFlags.Repeat">
      <summary>Stretch the image edges to fill the exposed area. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.RadialWaveCommandFlags.NoChange">
      <summary>Leave the exposed area as is, without changing it. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.RadialWaveCommandFlags.Frequency">
      <summary>The value in the RadialWaveCommand.WaveLength property, or the waveLength parameter if you are using the appropriate Constructor, is the frequency, or the number of times the wave repeats. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="T:Leadtools.ImageProcessing.SpecialEffects.RingEffectCommandFlags">
      <summary>This enumeration controls the RingEffectCommand behavior. These values can be OR-ed together, unless otherwise specified</summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.RingEffectCommandFlags.Color">
      <summary>Controls the output of rings which have undefined areas. Fill the undefined areas with color that is stored in the Color property of the RingEffectCommand class, or the color parameter of the appropriate RingEffectCommand Constructor. If you use this flag, do not use the Repeat flag or the NoChange flag. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.RingEffectCommandFlags.Repeat">
      <summary>Controls the output of rings which have undefined areas. Repeat the edges of the region and fill these values in the undefined areas. The edge will be repeated halfway throughout the missing portion of the ring. If you use this flag, do not use the Color flag or the NoChange flag. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.RingEffectCommandFlags.NoChange">
      <summary>Controls the output of rings which have undefined areas. Leave the edge pixels unchanged. If you rotate an incomplete ring, the original image pixels will remain in places where you would have undefined portions of the ring. If you use this flag, do not use the Color flag or the Repeat flag. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.RingEffectCommandFlags.FixedAngle">
      <summary>Rotate each ring against the inner ring by a fixed rotation angle specified in the Angle property of the RingEffectCommand class or the angle parameter of the appropriate RingEffectCommand Constructor. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.RingEffectCommandFlags.Radius">
      <summary>Indicates that Radius property of the RingEffectCommand class or the radius parameter of the appropriate RingEffectCommand Constructor contains the width of each ring, in pixels. If you use this flag, do not use the MaxRadius flag. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.RingEffectCommandFlags.MaxRadius">
      <summary>Indicates that the Radius property of the RingEffectCommand class (or the radius parameter of the appropriate RingEffectCommand Constructor) contains the maximum radius, in pixels, that corresponds to the external ring. In this case, the width of each ring is (radius value / (ring count value + 1)). If you use this flag, do not use the Radius flag. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="T:Leadtools.ImageProcessing.SpecialEffects.RippleCommandType">
      <summary>This enumeration indicates how to handle exposed areas.</summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.RippleCommandType.Color">
      <summary>Fill any exposed areas with the color stored in the FillColor property of the RippleCommand class, or the fillColor parameter if you are using the appropriate RippleCommand Constructor. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.RippleCommandType.Repeat">
      <summary>Stretch the image edges to fill the exposed area. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.RippleCommandType.NoChange">
      <summary>Leave the exposed area as is, without changing it. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="T:Leadtools.ImageProcessing.SpecialEffects.RomanMosaicCommandFlags">
      <summary>This enumeration contains all flags that are needed by the RomanMosaicCommand. It is indicate the values used to select the shape of the tiles and the type of shadow.</summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.RomanMosaicCommandFlags.Flat">
      <summary>Do not apply shadows. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.RomanMosaicCommandFlags.Rectangular">
      <summary>Draws rectangular tiles in a grid. When this flag is used TileWidth property will contain the tile width in pixels, and TileHeight property will contain the tile height in pixels. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.RomanMosaicCommandFlags.Circular">
      <summary>Draws rounded rectangular tiles in rings around the center of the image. When this flag is used TileWidth property will contain the radial component of the tile in pixels. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.RomanMosaicCommandFlags.Both">
      <summary>Draws both rounded rectangular and rectangular tiles. Draws the largest circle that will fit inside the image and fill that with rings of rounded rectangular tiles. Any part of the image that is not covered by the rounded rectangular tiles gets covered with a grid of rectangular tiles. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.RomanMosaicCommandFlags.ColoredShadow">
      <summary>Apply colored shadows. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.RomanMosaicCommandFlags.GrayShadow">
      <summary>Apply grayscale shadows. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="T:Leadtools.ImageProcessing.SpecialEffects.ShadowCommandAngle">
      <summary>Enumerated value indicating the direction of the light source producing the shadow.</summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.ShadowCommandAngle.East">
      <summary>East. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.ShadowCommandAngle.NorthEast">
      <summary>Northwest. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.ShadowCommandAngle.North">
      <summary>North. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.ShadowCommandAngle.NorthWest">
      <summary>Northeast. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.ShadowCommandAngle.West">
      <summary>West. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.ShadowCommandAngle.SouthWest">
      <summary>Southwest. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.ShadowCommandAngle.South">
      <summary>South. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.ShadowCommandAngle.SouthEast">
      <summary>Southeast. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="T:Leadtools.ImageProcessing.SpecialEffects.ShadowCommandType">
      <summary>Enumerated values that indicate the type of the shadow.</summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.ShadowCommandType.ColoredShadow">
      <summary>Shadows are colored. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.ShadowCommandType.GrayShadow">
      <summary>Shadows are grayscale. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="T:Leadtools.ImageProcessing.SpecialEffects.SphereCommandFlags">
      <summary>This enumeration indicates how to handle exposed areas outside the sphere and inside the sphere.</summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.SphereCommandFlags.Color">
      <summary>Fill any exposed areas with the color stored in the FillColor property of the SphereCommand class or the fill Color parameter if you are using the appropriate SphereCommand Constructor. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.SphereCommandFlags.Rotate">
      <summary>Rotate the image inside the sphere pattern. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.SphereCommandFlags.Repeat">
      <summary>Stretch the image edges to fill the exposed area. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.SphereCommandFlags.NoChange">
      <summary>Leave the exposed area as is, without changing it. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.SphereCommandFlags.WithoutRotate">
      <summary>Fill the exposed sphere pattern center as you would any exposed area outside the sphere. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="T:Leadtools.ImageProcessing.SpecialEffects.TunnelCommandFlags">
      <summary>Flags that indicate the background color and which image dimension extends along the Z-axis.This enumeration has a System.FlagsAttribute attribute that allows a bitwise combination of its member values.</summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.TunnelCommandFlags.None">
      <summary>No change. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.TunnelCommandFlags.Color">
      <summary>Use the FillColor property of the TunnelCommand class, or the fillColor parameter, if you are using the appropriate TunnelCommand Constructor, as a background color. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.TunnelCommandFlags.NoChange">
      <summary>Use the image itself as a background. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.TunnelCommandFlags.WidthAxis">
      <summary>Image width will be along the Z-axis. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.TunnelCommandFlags.HeightAxis">
      <summary>Image height will be along the Z-axis. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="T:Leadtools.ImageProcessing.SpecialEffects.VignetteCommandFlags">
      <summary>This enumeration contains all flags that are needed by the VignetteCommand. It includes values used to select the shape of the vignette object and the type of color filling.</summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.VignetteCommandFlags.Fillin">
      <summary>Use the VignetteColor property to fill the inside of the vignette object. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.VignetteCommandFlags.Square">
      <summary>Use a square vignette shape. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.VignetteCommandFlags.Rectangle">
      <summary>Use a rectangular vignette shape. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.VignetteCommandFlags.Circle">
      <summary>Use a circular vignette shape. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.VignetteCommandFlags.Ellipse">
      <summary>Use an elliptical vignette shape. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.VignetteCommandFlags.FillOut">
      <summary>Use the VignetteColor property to fill the outside of the vignette object. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="T:Leadtools.ImageProcessing.SpecialEffects.WaveCommandFlags">
      <summary>Flags that indicate how to handle exposed areas, the type of information in the WaveLength property of the WaveCommand class, or the waveLength parameter of the appropriate WaveCommand Constructor, and the wave type.</summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.WaveCommandFlags.Color">
      <summary>Fill any exposed areas with WaveCommand.FillColor. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.WaveCommandFlags.Period">
      <summary>The value of the WaveCommand.WaveLength property of the WaveCommand Class, or the waveLength parameter of the appropriate WaveCommand Constructor, is a wave length given as a percent of the image dimensions. If this flag is used, the valid range is from 0 to 100. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.WaveCommandFlags.SinWave">
      <summary>The wave is a sinusoidal wave. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.WaveCommandFlags.Repeat">
      <summary>Stretch the image edges to fill the exposed area. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.WaveCommandFlags.NoChange">
      <summary>Leave the exposed area as is, without changing it. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.WaveCommandFlags.Frequency">
      <summary>The value in WaveCommand.WaveLength property of the WaveCommand Class, or the waveLength parameter of the appropriate WaveCommand Constructor, is the frequency, or the number of times the wave repeats. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.WaveCommandFlags.CosWave">
      <summary>The wave is a sinusoidal wave shifted by 90 degrees. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.WaveCommandFlags.SquareWave">
      <summary>The wave is a square wave. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.WaveCommandFlags.TriangleWave">
      <summary>The wave is a triangular wave. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="T:Leadtools.ImageProcessing.SpecialEffects.ZigZagCommandFlags">
      <summary>Flags that indicate how to handle exposed areas, and the wave radiation type.This enumeration has a System.FlagsAttribute attribute that allows a bitwise combination of its member values.</summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.ZigZagCommandFlags.Color">
      <summary>Fills any exposed areas with crFill. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.ZigZagCommandFlags.RadialWave">
      <summary>Creates distortion waves around the CenterPt. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.ZigZagCommandFlags.Repeat">
      <summary>Stretches the image edges to fill the exposed area. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.ZigZagCommandFlags.NoChange">
      <summary>Leaves the exposed area as is, without changing it. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.ZigZagCommandFlags.PondRippleWave">
      <summary>Creates distortion waves that resemble the ripples in a pond. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="T:Leadtools.ImageProcessing.SpecialEffects.ZoomWaveCommandType">
      <summary>Flags that indicate how to handle exposed areas</summary>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.ZoomWaveCommandType.Color">
      <summary>Fill any exposed areas with ZoomWaveCommand.FillColor or the fillColor parameter of the appropriate ZoomWaveCommand Constructor. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.ZoomWaveCommandType.Repeat">
      <summary>Stretch the image edges to fill the exposed area. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="F:Leadtools.ImageProcessing.SpecialEffects.ZoomWaveCommandType.NoChange">
      <summary>Leave the exposed area as is, without changing it. </summary>
      <platforms>NET</platforms>
    </member>
    <member name="T:Leadtools.ImageProcessing.SpecialEffects.LightCommandData">
      <summary>Defines the information used by LightCommand.</summary>
    </member>
    <member name="M:Leadtools.ImageProcessing.SpecialEffects.LightCommandData.#ctor(Leadtools.LeadPoint,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,Leadtools.RasterColor,System.Int32,Leadtools.ImageProcessing.SpecialEffects.LightCommandType)">
      <summary>Initializes a new instance of LightCommandData with the specified parameters.</summary>
      <param name="centerPoint">Center of the ellipse used to represent the light</param>
      <param name="width">Width of the ellipse</param>
      <param name="height">Height of the ellipse</param>
      <param name="angle">Angle by which to rotate the ellipse</param>
      <param name="brightness">Intensity or brightness of the light</param>
      <param name="edge">Percentage by which to smooth the light border</param>
      <param name="fillColor">Color of the light</param>
      <param name="opacity">Opacity of the light</param>
      <param name="type">Light source type</param>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.LightCommandData.Angle">
      <summary>Gets or sets the angle by which to rotate the ellipse that represents the light.</summary>
      <value>Angle by which to rotate the ellipse that represents the light. This value is given in hundredths of a degree (+/-). This can be a number from 0 to 36,000. A positive value will rotate the ellipse clockwise, while a negative value will rotate the ellipse counter-clockwise.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.LightCommandData.Brightness">
      <summary>Gets or sets the intensity or brightness of the light.</summary>
      <value>Intensity or brightness of the light. This property only accepts positive values.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.LightCommandData.CenterPoint">
      <summary>Gets or sets a point structure that contains the center of the ellipse used to represent the light.</summary>
      <value>Point structure that contains the center of the ellipse used to represent the light. This property only accepts positive values.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.LightCommandData.Edge">
      <summary>Gets or sets the percentage by which to smooth the light border.</summary>
      <value>Percentage by which to smooth the light border. The valid range is from 0 to 100.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.LightCommandData.Empty">
      <summary>Initializes a new LightCommandData class object with default parameters.</summary>
      <value>A new LightCommandData class object with default parameters.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.LightCommandData.FillColor">
      <summary>Gets or sets the color of the light.</summary>
      <value>The color of the light.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.LightCommandData.Height">
      <summary>Gets or sets a value that represents the height of the ellipse used to represent the light.</summary>
      <value>Value that represents the height of the ellipse used to represent the light.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.LightCommandData.Opacity">
      <summary>Gets or sets the opacity of the light.</summary>
      <value>Opacity of the light. This property only accepts positive values.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.LightCommandData.Type">
      <summary>Gets or sets a flag that determines the light source type.</summary>
      <value>Value that determines the light source type.</value>
    </member>
    <member name="P:Leadtools.ImageProcessing.SpecialEffects.LightCommandData.Width">
      <summary>Gets or sets a value that represents the width of the ellipse used to represent the light.</summary>
      <value>Value that represents the width of the ellipse used to represent the light. This property only accepts positive values.</value>
    </member>
  </members>
</doc>